print(AOVdf_total) # print to monitor progress
}
chem_LOOP
MODPCO2    <- aov(lm(pCO2.out..matm. ~Food.Treatment*pH, data = chem_LOOP))
MODPCO2
summmary(MODPCO2)
summary(MODPCO2)
summary(MODPCO2)
chemTable_n <- chem[,c(3,4,6,11,13:14,16:20)] %>%
group_by(pH,Food.Treatment)  %>%
dplyr::summarise(n = n())
# Summary table chemistry - BY DATE
chemTable <- chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n())))
chemTable
# Summary table chemistry - BY DATE
chemTable <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))))
chemTable
# Summary table chemistry - BY DATE
chemTable <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) %>%
na.omit())
chemTable
summary(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))
summary(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))) # p-value = 0.07265 - normal!
qqnorm(resid(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))) # qq nrom plot of model residuals
leveneTest(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable))) # 0.004876 ** - variance is unequal
hist(resid(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable))))
leveneTest(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable))) # 0.004876 ** - variance is unequal
summary(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))
summary(aov(lm(pCO2.out..matm._mean ~Food.Treatment*as.factor(pH), data = chemTable)))
chemTable
# Summary table chemistry - BY DATE
chemTable <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) %>%
mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
na.omit())
summary(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
summary(aov(lm(pCO2.out..matm._mean ~Food.Treatment*as.factor(pH), data = chemTable)))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))) # p-value = 0.07265 - normal!
summary(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
modpCO2 <- summary(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))
emmeans::(modpCO2, ~ pH_food)
modpCO2 <- summary(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))
emmeans(modpCO2, ~ pH_food)
?emmeans
linrary(emmeans)
library(emmeans)
emmeans(modpCO2, ~ pH_food)
modpCO2 <- (lm(pCO2.out..matm._mean ~pH_food, data = chemTable))
emmeans(modpCO2, ~ pH_food)
TukeyHSD(modpCO2)
TukeyHSD(aov(modpCO2))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
emmeans(modpCO2, ~ pH_food)
TukeyHSD(aov(modpCO2))
chemTable
chemTable
long <- melt(setDT(chemTable),
id.vars = c("pH", "Food.Treatmen"),
variable.name = "year")
# $pH_food
#                   diff       lwr        upr      p adj
# 7.5_Low-7.5_High -136.11500 -311.5340   39.30396 0.1563058
# 8_High-7.5_High  -275.56000 -440.9466 -110.17342 0.0013171 ** pCO2 8 < 7.5 wihtin high food
# 8_Low-7.5_High   -333.32125 -508.7402 -157.90229 0.0003875 ** pCO2 8 < 7.5 across food
# 8_High-7.5_Low   -139.44500 -314.8640   35.97396 0.1426774
# 8_Low-7.5_Low    -197.20625 -382.1141  -12.29843 0.0349779 ** # pCO2 8 < 7.5 within low food
# 8_Low-8_High      -57.76125 -233.1802  117.65771 0.7752134
library(resphape2)
# $pH_food
#                   diff       lwr        upr      p adj
# 7.5_Low-7.5_High -136.11500 -311.5340   39.30396 0.1563058
# 8_High-7.5_High  -275.56000 -440.9466 -110.17342 0.0013171 ** pCO2 8 < 7.5 wihtin high food
# 8_Low-7.5_High   -333.32125 -508.7402 -157.90229 0.0003875 ** pCO2 8 < 7.5 across food
# 8_High-7.5_Low   -139.44500 -314.8640   35.97396 0.1426774
# 8_Low-7.5_Low    -197.20625 -382.1141  -12.29843 0.0349779 ** # pCO2 8 < 7.5 within low food
# 8_Low-8_High      -57.76125 -233.1802  117.65771 0.7752134
library(reshape2)
long <- melt(setDT(chemTable),
id.vars = c("pH", "Food.Treatmen"),
variable.name = "year")
(chemTable[,-(1)])
(chemTable %>% dplyr::select(-c(Date, pH_food)))
long <- melt(setDT(chemTable %>% dplyr::select(-c(Date, pH_food))),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
long
widechemMEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
long <- melt(setDT(chemTable %>% dplyr::select(Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
widechemMEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
long <- melt(setDT(widechemMEANS %>% dplyr::select(Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
widechemMEANS
long <- melt(setDT(widechemMEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
wideCHEAM.MEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
wideCHEM.MEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
longHCEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
longHCHEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
longHCHEM.MEANS
longHCHEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement")
means_plot <- longHCHEM.MEANS
means_plot
means_plot <- longHCHEM.MEANS %>%
ggplot(aes(x = pH, y = value, color = as.factor(Food.Treatment))) +
facet_wrap(~measurement)
means_plot
means_plot <- longHCHEM.MEANS %>%
ggplot(aes(x = as.factor(pH), y = value, color = as.factor(Food.Treatment))) +
facet_wrap(~measurement)
means_plot
means_plot <- longHCHEM.MEANS %>%
ggplot(aes(x = as.factor(pH), y = value, color = as.factor(Food.Treatment))) +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
ggplot(aes(x = as.factor(pH), y = value, color = as.factor(Food.Treatment))) +
geom_point() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
ggplot(aes(x = as.factor(pH), y = value, color = as.factor(Food.Treatment))) +
geom_point() +
geom_line() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = as.factor(pH), y = value, color = as.factor(pH_food))) +
geom_point() +
geom_line() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = as.factor(pH), y = value, shape = as.factor(pH_food))) +
geom_point() +
geom_line() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = as.factor(pH), y = value, shape = as.factor(pH_food))) +
geom_point() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = value, shape = pH)) +
geom_point() +
facet_wrap(~measurement, scales = "free")
means_plot
longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = value, shape = pH)) +
geom_point() +
facet_wrap(~measurement, scales = "free")
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = value, shape = as.factor(pH))) +
geom_point() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = value, shape = as.factor(pH))) +
geom_point() +
geom_jitter()+
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = value, shape = as.factor(pH))) +
geom_point() +
geom_jitter()+
facet_wrap(~measurement, scales = "free")
means_plot
wideCHEM.SE <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(se=sd(.)/sqrt(n()))))
wideCHEM.SE
longHCHEM.SE <- melt(setDT(wideCHEM.SE %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement")
longHCHEM.SE
longHCHEM.MEANS
cbind(longHCHEM.MEANS,longHCHEM.SE)
longHCHEM.SE
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(c('pH','Food.Treatment')) ))
longHCHEM.SE <- melt(setDT(wideCHEM.SE %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(value = SE)
longHCHEM.SE <- melt(setDT(wideCHEM.SE %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(SE = value)
longHCHEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(MEAN = value)
wideCHEM.SE <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(se=sd(.)/sqrt(n()))))
longHCHEM.SE <- melt(setDT(wideCHEM.SE %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(SE = value)
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(c('pH','Food.Treatment')) ))
wideCHEM.MEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
longHCHEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(MEAN = value)
wideCHEM.SE <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(se=sd(.)/sqrt(n()))))
longHCHEM.SE <- melt(setDT(wideCHEM.SE %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(SE = value)
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(c('pH','Food.Treatment')) ))
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(c(-'pH','Food.Treatment')) ))
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(-c('pH','Food.Treatment')) ))
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(-c('pH','Food.Treatment',measurement)) ))
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(-c('pH','Food.Treatment','measurement')) ))
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
geom_errorbar(aes(ymin=MEAN-SE, ymax=MEAN+SE), width=.2,
position=position_dodge(0.05))
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
geom_errorbar(aes(ymin=MEAN-SE, ymax=MEAN+SE), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
means_plot
master <- cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(-c('pH','Food.Treatment','measurement')) ))
means_plot <- master %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
geom_errorbar(aes(ymin=MEAN-SE, ymax=MEAN+SE), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- master %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_errorbar(aes(ymin=MEAN-SE, ymax=MEAN+SE), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
means_plot
master
wideCHEM.MEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
longHCHEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(MEAN = value)
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
facet_wrap(~measurement, scales = "free")
means_plot
CHEM_DOTPLOT <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
facet_wrap(~measurement, scales = "free")
CHEM_DOTPLOT
geom_errorbar(aes(ymin=MEAN-SE, ymax=MEAN+SE), width=.2,
position=position_dodge(0.05)) +
# Summary table chemistry
chemTable <- chem[,c(3,4,6,11,13:14,16:20)] %>%
group_by(pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n())))
longHCHEM.MEANS
longHCHEM.MEANS
longHCHEM.MEANS.SUMMARY <- as.data.table(longHCHEM.MEANS %>%
group_by(pH,Food.Treatment,measurement) %>%
summarise_each(funs(mean)))
longHCHEM.MEANS.SUMMARY
longHCHEM.MEANS.SUMMARY <- as.data.table(longHCHEM.MEANS %>%
group_by(pH,Food.Treatment,measurement) %>%
summarise_each(funs(mean,se=sd(.)/sqrt(n()))))
longHCHEM.MEANS.SUMMARY
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = mean, shape = as.factor(pH))) +
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = mean, shape = as.factor(pH))) +
geom_point() +
geom_jitter() +
geom_line() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = mean, shape = as.factor(pH))) +
geom_point() +
geom_jitter() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = mean, shape = as.factor(pH))) +
geom_point() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = mean, shape = as.factor(pH))) +
geom_point() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
theme_classic()+
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_DOTPLOT <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
theme_classic() +
facet_wrap(~measurement, scales = "free")
CHEM_DOTPLOT
CHEM_MEANSEPLOT
ggarrange(CHEM_DOTPLOT, CHEM_MEANSEPLOT,nrow = 2)
library(ggarrange)
library(ggarrange)
install.packages('ggarrange')
library(ggarrange)
library(ggarrange)
print(CHEM_DOTPLOT, CHEM_MEANSEPLOT,nrow = 2)
print(CHEM_MEANSEPLOT)
pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Water_Chemistry/MeanStError_plot.pdf"), width = 10, height = 6)
print(CHEM_MEANSEPLOT)
dev.off()
# ANOVA tests of chemistry data
chemTable <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) %>%
mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
na.omit())
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~pH_food, data = chemTable))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
emmeans(modpCO2, ~ pH_food)
TukeyHSD(aov(modpCO2))
chemTable
# $pH_food
#                   diff       lwr        upr      p adj
# 7.5_Low-7.5_High -136.11500 -311.5340   39.30396 0.1563058
# 8_High-7.5_High  -275.56000 -440.9466 -110.17342 0.0013171 ** pCO2 8 < 7.5 wihtin high food
# 8_Low-7.5_High   -333.32125 -508.7402 -157.90229 0.0003875 ** pCO2 8 < 7.5 across food
# 8_High-7.5_Low   -139.44500 -314.8640   35.97396 0.1426774
# 8_Low-7.5_Low    -197.20625 -382.1141  -12.29843 0.0349779 ** # pCO2 8 < 7.5 within low food
# 8_Low-8_High      -57.76125 -233.1802  117.65771 0.7752134
# pH
modpH <- (lm(pH.out_mean ~pH_food, data = chemTable))
shapiro.test(resid(aov(lm(pH.out_mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
emmeans(modpH, ~ pH_food)
TukeyHSD(aov(modpH))
shapiro.test(resid(aov(lm(pH.out_mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
# $pH_food
#                   diff       lwr        upr      p adj
# 7.5_Low-7.5_High -136.11500 -311.5340   39.30396 0.1563058
# 8_High-7.5_High  -275.56000 -440.9466 -110.17342 0.0013171 ** pCO2 8 < 7.5 wihtin high food
# 8_Low-7.5_High   -333.32125 -508.7402 -157.90229 0.0003875 ** pCO2 8 < 7.5 across food
# 8_High-7.5_Low   -139.44500 -314.8640   35.97396 0.1426774
# 8_Low-7.5_Low    -197.20625 -382.1141  -12.29843 0.0349779 ** # pCO2 8 < 7.5 within low food
# 8_Low-8_High      -57.76125 -233.1802  117.65771 0.7752134
# pH
modpH <- (lm(pH.out_mean ~pH_food, data = chemTable))
shapiro.test(resid(aov(lm(pH.out_mean ~pH_food, data = chemTable)))) # p-value = 0.5409 - normal!
emmeans(modpH, ~ pH_food)
TukeyHSD(aov(modpH))
modpH
summary(0.5409)
summary(aov(modpH))
TukeyHSD(aov(modpH))
chemTable
# pH ------------------------------------------------------ #
modpH <- (lm(pH.out_mean ~pH*Food.Treatment, data = chemTable))
summary(aov(modpH)) # 0.000248 sig effect
shapiro.test(resid(aov(lm(pH.out_mean ~pH_food, data = chemTable)))) # p-value = 0.5409 - normal!
emmeans(modpH, ~ pH_food)
summary(aov(modpH)) # 0.000248 sig effect
TukeyHSD(aov(modpH))
# pH ------------------------------------------------------ #
modpH <- (lm(pH.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
TukeyHSD(aov(modpH))
# pH ------------------------------------------------------ #
modpH <- (lm(pH.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modpH)) # 0.000248 sig effect
# pCO2
modpH <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modpCO2)) # 0.000248 sig effect
modpCO2 <- (lm(pCO2.out..matm._mean ~pH_food, data = chemTable))
summary(aov(modpCO2)) # 0.000248 sig effect
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modpCO2)) # 0.000248 sig effect
# pH and food significant, no interaction
modpCO2 <- (lm(pCO2.out..matm._mean ~pH_food, data = chemTable))
summary(aov(modpCO2)) # 0.000248 sig effect
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modpCO2)) # 0.000248 sig effect
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
shapiro.test(resid(aov(modpCO2))) # p-value = 0.07265 - normal!
# pH and food significant, no interaction
modpCO2 <- (lm(pCO2.out..matm._mean ~pH_food, data = chemTable))
shapiro.test(resid(aov(modpCO2))) # p-value = 0.07265 - normal!
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
shapiro.test(resid(aov(modpCO2))) # p-value = 0.07265 - normal!
emmeans(modpCO2, ~ pH_food)
TukeyHSD(aov(modpCO2))
TukeyHSD(aov(modpCO2))
# pH ------------------------------------------------------ #
modpH <- (lm(pH.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modpH)) # 0.000248 sig effect
# pH and food significant, no interaction
modpH <- (lm(pH.out_mean ~pH_food, data = chemTable))
summary(aov(modpH)) # 0.000248 sig effect
# pH ------------------------------------------------------ #
modpH <- (lm(pH.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
shapiro.test(resid(aov(lm(pH.out_mean ~pH_food, data = chemTable)))) # p-value = 0.5409 - normal!
emmeans(modpH, ~ pH_food)
TukeyHSD(aov(modpH))
chemTable
# Aragonite sat ------------------------------------------------------ #
modARAG <- (lm(WAr.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modARAG)) # 0.000248 sig effect
# pH is significant but NOT aragnoite
modARAG <- (lm(WAr.out_mean ~pH_food, data = chemTable))
summary(aov(modARAG)) # 0.000248 sig effect
shapiro.test(resid(aov(modARAG))) # p-value = 0.5409 - normal!
# Aragonite sat ------------------------------------------------------ #
modARAG <- (lm(WAr.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
shapiro.test(resid(aov(modARAG))) # p-value = 0.5409 - normal!
# Aragonite sat ------------------------------------------------------ #
modARAG <- (lm(log(WAr.out_mean) ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modARAG)) # 0.000248 sig effect
shapiro.test(resid(aov(modARAG))) # p-value = 0.003882 - non-normal!
# Aragonite sat ------------------------------------------------------ #
modARAG <- (lm(WAr.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
# pH is significant but NOT aragnoite
modARAG <- (lm(WAr.out_mean ~pH_food, data = chemTable))
summary(aov(modARAG)) # 0.000248 sig effect
shapiro.test(resid(aov(modARAG))) # p-value = 0.003882 - non-normal!
emmeans(modARAG, ~ pH_food)
TukeyHSD(aov(modARAG))
