library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
resp.data    <- read.csv(file="Output/Respiration/Cumulative_resp_alpha0.4_15sectrunc40min.csv", header=T) %>% dplyr::filter(!Filename %in% 'Run_1_raw.txt') # read the calculate raw rates from 'resp_LoLin' script - contains the calculated rate (not normalized for blanks) for each sensor-channel
exp_metadata <- read.csv(file="Data/ExperimentMetadata.csv", header=T) # treatment assignments to 'Chamber_Tank'
lengths      <- read.csv(file="Data/Respiration/Lengths_resp.csv", header=T)
resp.ref     <- read.csv(file="Data/Respiration/Reference_master.csv", header=T) %>% dplyr::filter(!Filename == 'Run_1_raw.txt')
# merge the exp_metadata with the resp.data
resp.ref_length_merged                 <- merge(resp.ref, lengths) # all TRUE allows us to keep the blanks
resp.data_merged                       <- merge(resp.data, resp.ref_length_merged) # out master file moving forward....
# Diagnose data - view the plots outpt from LoLinR to find any and all incorrect calls
# the following plots show poor data - remedy below
# 20210930_Plate_1_Run_2_C1_regression
# 20210930_Plate_2_Run_1_C1_regression
# 20210930_Plate_2_Run_2_C4_regression
# 20210930_Plate_2_Run_2_C5_regression
resp.data_merged[77,4] <- resp.data_merged[77,5] # 20210930_Plate_2_Run_2_C5_regression - Lz and Leq call better regression than Lpc
resp.data_merged[61,4] <- resp.data_merged[61,5] # 20210930_Plate_2_Run_1_C1_regression - Lz and Leq call better regression than Lpc
resp.data_merged[62,4] <- NA # 20210930_Plate_1_Run_2_C1_regression - Lz and Leq call better regression than Lpc
resp.data_merged[77,]
blanks_total <- data.frame() # start dataframe
blanks.table <- data.frame(matrix(nrow = 1,ncol = 5)) # make a table template
colnames(blanks.table)<-c('Date', 'Channel', 'mean_Lpc', 'mean_Leq' , 'mean_Lz') # names for comuns in the for loop
blanks <- data.frame(merge(resp.ref, resp.data, by = c('Date', 'Channel', 'Filename')) %>%
dplyr::filter(Chamber_tank  == 'blank') %>%
dplyr::filter(Lpc > -0.04) %>%
dplyr::group_by(Date, pH) %>%
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz))) )
Resp.Master <- merge(resp.data_merged, blanks, by=c("Date", "pH")) %>% # NOTE: this repeats for every distinct length value
dplyr::mutate(resp_norm = Lpc - BLANK.mean_Lpc) # ommits respiration rate values showing an increase in O2 over time
Resp.Master_OM <- Resp.Master %>% dplyr::filter(!resp_norm > 0) # ommit respiration values that are positive
# NOTE: look at the following table to troubleshoot if needed
Resp.outliers <- Resp.Master %>% dplyr::filter(resp_norm > 0) # call the values with positive resp rates, measing they were slower than the blank!
Resp.outliers
for (i in 1:nrow(Resp.Master_OM)) {
if (Resp.Master_OM$Date[i] == '9/14/2021')  {
Resp.Master_OM$resp_ng_L_umlLength_hr[i] <- (
( ( (abs(Resp.Master_OM$resp_norm[i])*1000000) * # call absolute value of resp in mg per minute - convert to ng min-1
(2.2/1000) ) / # vial volume for loligo 8 channel runs was 2.2 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master_OM$Length.um.[i]) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ng Liter-1 individual-1 hour-1
} else {
Resp.Master_OM$resp_ng_L_umlLength_hr[i] <- (
( ( (abs(Resp.Master_OM$resp_norm[i])*1000000) * # call absolute value of resp in mg per minute - convert to ng min-1
(1.7/1000) ) / # vial volume for loligo 8 channel runs was 1.7 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master_OM$Length.um.[i]) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ng Liter-1 individual-1 hour-1
}
}
# ANALYSIS :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# model effect of treatment on resp rate 20210507
Resp_0914 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/14/2021')  %>% # call only 9/14
dplyr::filter(!Chamber_tank  %in% 'blank') %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ 'Low',
pH == 7.5 ~ 'High'))
Resp_0914 %>% dplyr::group_by(Chamber_tank) %>% summarise(n()) # tank replication
LMmod_0914 <- aov(lm(resp_ng_L_umlLength_hr~pCO2,data=Resp_0914))
summary(LMmod_0914)
check_model(LMmod_0914) # observe the diagnostics of the model
shapiro.test(residuals(LMmod_0914)) # non normal
leveneTest(LMmod_0914) # good
MEmod_0914 <- lmer(resp_ng_L_umlLength_hr~pCO2 + (1|Chamber_tank),REML=TRUE, data=Resp_0914)
summary(MEmod_0914) # sig intercept just means the grand mean is different from 0 - not meaningful here..
ggplot(Resp_0914, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
annotate("text", x=1.2, y=2, size = 4, label = "aov(Resp~Treatment + (1|Tank))") +
annotate("text", x=1.2, y=1, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
DF   <- paste( (summary(LMmod_0914)[[1]][["Df"]])[1], (summary(LMmod_0914)[[1]][["Df"]])[2], sep = '/')
Fval <- (summary(LMmod_0914)[[1]][["F value"]])[1]
pval <- (summary(LMmod_0914)[[1]][["Pr(>F)"]])[1]
ggplot(Resp_0914, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
annotate("text", x=1.2, y=2, size = 4, label = "aov(Resp~Treatment + (1|Tank))") +
annotate("text", x=1.2, y=1, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
# model effect of treatment on resp rate 20210507
Resp_0930 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/30/2021')  %>% # call only 9/14
dplyr::filter(!Chamber_tank  %in% 'blank') %>%
dplyr::select(-Center) %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ 'Low',
pH == 7.5 ~ 'High')) %>%
na.omit()
Resp_0930 %>% dplyr::group_by(Chamber_tank, Food ) %>% summarise(n()) # tank replication
LMmod_0930 <- aov(lm(resp_ng_L_umlLength_hr~pCO2*Fed_Unfed ,data=Resp_0930))
summary(LMmod_0930)
check_model(LMmod_0930) # observe the diagnostics of the model
shapiro.test(residuals(LMmod_0930)) # non normal
leveneTest(LMmod_0930) # good
TukeyHSD(LMmod_0930)
MEmod_0930 <- lmer(resp_ng_L_umlLength_hr~pCO2*Fed_Unfed + (1|Chamber_tank),REML=TRUE, data=Resp_0930)
summary(MEmod_0930) # sig intercept just means the grand mean is different from 0 - not meaningful here..
check_model(MEmod_0930)
shapiro.test(residuals(MEmod_0930)) # non normal
leveneTest(MEmod_0930) # good
DF   <- paste( (summary(LMmod_0930)[[1]][["Df"]])[1], (summary(LMmod_0930)[[1]][["Df"]])[2], sep = '/')
Fval <- (summary(LMmod_0930)[[1]][["F value"]])[1]
pval <- (summary(LMmod_0930)[[1]][["Pr(>F)"]])[1]
ggplot(Resp_0930, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~Fed_Unfed)
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/20210930_respiration.pdf"))
ggplot(Resp_0930, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~Fed_Unfed)
#annotate("text", x=1.5, y=0.2, size = 4, label = "aov(Resp~Treatment + (1|Tank))") +
#annotate("text", x=1.5, y=0.16, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
dev.off()
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/20210914_respiration.pdf"))
ggplot(Resp_0914, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
annotate("text", x=1.2, y=2, size = 4, label = "aov(Resp~Treatment + (1|Tank))") +
annotate("text", x=1.2, y=1, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
dev.off()
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/20210930_respiration.pdf"))
ggplot(Resp_0930, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~Fed_Unfed)
#annotate("text", x=1.5, y=0.2, size = 4, label = "aov(Resp~Treatment + (1|Tank))") +
#annotate("text", x=1.5, y=0.16, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
dev.off()
#annotate("text", x=1.5, y=0.2, size = 4, label = "aov(Resp~Treatment + (1|Tank))") +
#annotate("text", x=1.5, y=0.16, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
dev.off()
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/20210930_respiration.pdf"))
ggplot(Resp_0930, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~Fed_Unfed)
#annotate("text", x=1.5, y=0.2, size = 4, label = "aov(Resp~Treatment + (1|Tank))") +
#annotate("text", x=1.5, y=0.16, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
dev.off()
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/20210930_respiration.pdf"))
ggplot(Resp_0930, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~Fed_Unfed)
#annotate("text", x=1.5, y=0.2, size = 4, label = "aov(Resp~Treatment + (1|Tank))") +
#annotate("text", x=1.5, y=0.16, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
dev.off()
ggplot(Resp_0930, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~Fed_Unfed)
LMmod_0914 <- aov(lm(resp_ng_L_umlLength_hr~pCO2,data=Resp_0914))
summary(LMmod_0914)
check_model(LMmod_0914) # observe the diagnostics of the model
shapiro.test(residuals(LMmod_0914)) # non normal
leveneTest(LMmod_0914) # good
pval
summary(LMmod_0914)
pval <- (summary(LMmod_0914)[[1]][["Pr(>F)"]])[1]
pval
DF   <- paste( (summary(LMmod_0914)[[1]][["Df"]])[1], (summary(LMmod_0914)[[1]][["Df"]])[2], sep = '/')
Fval <- (summary(LMmod_0914)[[1]][["F value"]])[1]
pval <- (summary(LMmod_0914)[[1]][["Pr(>F)"]])[1]
ggplot(Resp_0914, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
annotate("text", x=1.2, y=2, size = 4, label = "aov(Resp~pCO2)") +
annotate("text", x=1.2, y=1, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/20210914_respiration.pdf"))
ggplot(Resp_0914, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
annotate("text", x=1.2, y=2, size = 4, label = "aov(Resp~pCO2)") +
annotate("text", x=1.2, y=1, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
dev.off()
# model effect of treatment on resp rate 20210507
Resp_0930 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/30/2021')  %>% # call only 9/14
dplyr::filter(!Chamber_tank  %in% 'blank') %>%
dplyr::select(-Center) %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ 'Low',
pH == 7.5 ~ 'High')) %>%
na.omit()
Resp_0930 %>% dplyr::group_by(Chamber_tank, Food ) %>% summarise(n()) # tank replication
LMmod_0930 <- aov(lm(resp_ng_L_umlLength_hr~pCO2*Fed_Unfed ,data=Resp_0930))
summary(LMmod_0930)
check_model(LMmod_0930) # observe the diagnostics of the model
shapiro.test(residuals(LMmod_0930)) # non normal
leveneTest(LMmod_0930) # good
TukeyHSD(LMmod_0930)
DF   <- paste( (summary(LMmod_0930)[[1]][["Df"]])[1], (summary(LMmod_0930)[[1]][["Df"]])[2], sep = '/')
Fval <- (summary(LMmod_0930)[[1]][["F value"]])[1]
DF
summary(LMmod_0930)
DF   <- paste( (summary(LMmod_0930)[[1]][["Df"]])[1], (summary(LMmod_0930)[[1]][["Df"]])[4], sep = '/')
DF
Fval <- (summary(LMmod_0930)[[1]][["F value"]])[1]
Fval_pCO2 <- (summary(LMmod_0930)[[1]][["F value"]])[1]
pval_pCO2 <- (summary(LMmod_0930)[[1]][["Pr(>F)"]])[1]
Fval_Fed  <- (summary(LMmod_0930)[[2]][["F value"]])[2]
Fval_Fed  <- (summary(LMmod_0930)[[1]][["F value"]])[2]
Fval_Fed
pval_Fed  <- (summary(LMmod_0930)[[1]][["Pr(>F)"]])[2]
pval_Fed
DF_Fed    <- paste( (summary(LMmod_0930)[[1]][["Df"]])[2], (summary(LMmod_0930)[[1]][["Df"]])[4], sep = '/')
DF_Fed
ggplot(Resp_0930, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~Fed_Unfed) +
annotate("text", x=1.5, y=2, size = 4, label = "aov(Resp~pCO2*Feed)") +
annotate("text", x=1.5, y=1.5, size = 4, label= paste('pCO2: ','DF =',DF_pCO2,'F =', signif(Fval_pCO2, digits=3), 'p value =', signif(pval_pCO2, digits=3), sep=" ")) +
annotate("text", x=1.5, y=1, size = 4, label= paste('Feeding: ','DF =',DF_Fed,'F =', signif(Fval_Fed, digits=3), 'p value =', signif(pval_Fed, digits=3), sep=" "))
DF_pCO2   <- paste( (summary(LMmod_0930)[[1]][["Df"]])[1], (summary(LMmod_0930)[[1]][["Df"]])[4], sep = '/')
Fval_pCO2 <- (summary(LMmod_0930)[[1]][["F value"]])[1]
pval_pCO2 <- (summary(LMmod_0930)[[1]][["Pr(>F)"]])[1]
DF_Fed    <- paste( (summary(LMmod_0930)[[1]][["Df"]])[2], (summary(LMmod_0930)[[1]][["Df"]])[4], sep = '/')
Fval_Fed  <- (summary(LMmod_0930)[[1]][["F value"]])[2]
pval_Fed  <- (summary(LMmod_0930)[[1]][["Pr(>F)"]])[2]
ggplot(Resp_0930, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~Fed_Unfed) +
annotate("text", x=1.5, y=2, size = 4, label = "aov(Resp~pCO2*Feed)") +
annotate("text", x=1.5, y=1.5, size = 4, label= paste('pCO2: ','DF =',DF_pCO2,'F =', signif(Fval_pCO2, digits=3), 'p value =', signif(pval_pCO2, digits=3), sep=" ")) +
annotate("text", x=1.5, y=1, size = 4, label= paste('Feeding: ','DF =',DF_Fed,'F =', signif(Fval_Fed, digits=3), 'p value =', signif(pval_Fed, digits=3), sep=" "))
ggplot(Resp_0930, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~Fed_Unfed) +
annotate("text", x=1.5, y=2.5, size = 4, label = "aov(Resp~pCO2*Feed)") +
annotate("text", x=1.5, y=2.2, size = 4, label= paste('pCO2: ','DF =',DF_pCO2,'F =', signif(Fval_pCO2, digits=3), 'p value =', signif(pval_pCO2, digits=3), sep=" ")) +
annotate("text", x=1.5, y=1.8, size = 4, label= paste('Feeding: ','DF =',DF_Fed,'F =', signif(Fval_Fed, digits=3), 'p value =', signif(pval_Fed, digits=3), sep=" "))
ggplot(Resp_0930, aes(pCO2 , resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~Fed_Unfed) # +
