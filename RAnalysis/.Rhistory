# | **pH:Fed_Unfed** |   1   |  24   | 0.02382 |  0.8786   |
pander(anova(LMEmod_1026_FR), style='rmarkdown') # anova table of lmer
kable(as.data.frame(anova(LMEmod_1026_FR))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/20211026_figs_tables/20211026_FR_LME_Table.png", zoom = 1.5)
pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/20211026_figs_tables/20211026_FR_LME_Diagnostics.pdf"))
check_model(LMEmod_1026_FR) # print the model diagnostics
dev.off()
# call the results of LMER to add to boxplot below
DF   <- paste( (anova(LMEmod_1026_FR)[[1]])[2], (anova(LMEmod_1026_FR)[[2]])[2], sep = '/') # call DF
Fval <- (anova(LMEmod_1026_FR)[[3]])[2] # call f
pval <- (anova(LMEmod_1026_FR)[[4]])[2] # call p value
FR_930_boxplot <- df_total.1026 %>%
ggplot(aes(pCO2 , FeedingRate_L_hour_m , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Clearance Rate, F1 Scallops 20210914 (0-90 minutes)") +
facet_wrap(~Fed_Unfed)
FR_1026_boxplot <- df_total.1026 %>%
ggplot(aes(pCO2 , FeedingRate_L_hour_m , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Clearance Rate, F1 Scallops 20210914 (0-90 minutes)") +
facet_wrap(~Fed_Unfed)
FR_1026_boxplot
ggarrange(FR_1026_boxplot, Resp1026_FR,
labels = c("A", "B"),
ncol = 1, nrow = 2)
ggarrange(FR_1026_boxplot, Resp1026_FR,
labels = c("A", "B"),
ncol = 1, nrow = 2)
FR_1026_boxplot
df_total.1026 <- df_total.1026  %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
FR_1026_boxplot <- df_total.1026 %>%
ggplot(aes(pCO2 , FeedingRate_L_hour_m , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Clearance Rate, F1 Scallops 20210914 (0-90 minutes)") +
facet_wrap(~Fed_Unfed)
FR_1026_boxplot
ggarrange(FR_1026_boxplot, Resp1026_FR,
labels = c("A", "B"),
ncol = 1, nrow = 2)
pdf(paste0("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/20211026_figs_tables/2011026_FR_LME.pdf"))
ggarrange(FR_1026_boxplot, Resp1026_FR,
labels = c("A", "B"),
ncol = 1, nrow = 2)
dev.off()
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
All_FR_Master <- rbind(df_total.914, df_total.930, df_total.1026)
df_total.914
df_total.930
df_total.1026
df_total.914
df_total.930
df_total.914
df_total.930
df_total.1026
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914$pHxfood <- NA # make te column to maetch and rbind below
All_FR_Master <- rbind(df_total.914, df_total.930, df_total.1026)
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914$pHxfood <- NA # make te column to maetch and rbind below
All_FR_Master <- rbind(df_total.914, df_total.930, df_total.1026)
df_total.914
df_total.930
df_total.914              <- data.frame() # start dataframe
for (i in 1:nrow(loop_914)) {
dat <- FeedRate_Master.914 %>%
dplyr::filter(uniq_Identifier == loop_914[i,]) %>%
dplyr::arrange(minutes)
C0_total_algae <- max(c(dat[1,]$total_algae, dat[2,]$total_algae)) # call the max number in the first two time points - allows for error
dat2 <- dat %>%
do(tail(., 2)) %>%
#dplyr::mutate(diff = as.numeric(Time._min) - lag(as.numeric(Time._min), default = first(as.numeric(Time._min)))) %>%
dplyr::filter(total_algae %in% min(total_algae)) %>%
dplyr::mutate(Blank = if(pH == 7.5) AlgaeBlank_914_pH7.5 else AlgaeBlank_914_pH8.0 ) %>%
dplyr::mutate(TotalAlgaeLossRatio = C0_total_algae / as.numeric(total_algae) ) %>%
dplyr::filter(!TotalAlgaeLossRatio < 1) %>%
dplyr::mutate(ln_TotalAlgaeLossRatio = ln(TotalAlgaeLossRatio)) %>%
# dplyr::mutate(FeedingRate =  ( (25/1000) / (diff/60)  * # V / t == Volume of the vessel (in Liters as 25 ml / 1000 ml L-1) and t = time in hours as the diff between the interval sin minutes / 60 mins hour-1
#                                   ( ln_AlgaeLossRatio ) / Length.um. ) ) %>%
dplyr::mutate(FeedingRate_L_hour_m = ( (25/1000) * # V / t == Volume of the vessel (in Liters as 25 ml / 1000 ml L-1) and t = time in hours as the diff between the interval sin minutes / 60 mins hour-1
(( ln_TotalAlgaeLossRatio /  (as.numeric(minutes)/60) - Blank))) / (Length_um/1000000) ) %>%
dplyr::mutate(Time_period = paste( (dat[1,]$minutes),as.numeric(minutes), sep ='-'))
dat2OM <- dat2 %>% dplyr::filter(!minutes == 0)
if (nrow(dat2OM) > 0) {
FeedRate.table           <- data.frame(matrix(nrow = nrow(dat2OM), ncol = 10)) # create dataframe to save cumunalitively during for loop
colnames(FeedRate.table) <- c('Date', 'ID', 'pH', 'Replicate', 'Num','Run', 'Fed_Unfed', 'Time_period', 'TotalAlgaeLossRatio', 'FeedingRate_L_hour_mm') # names for comuns in the for loop
FeedRate.table$Date                       <- dat2OM$Date
FeedRate.table$ID                         <- loop_914[i,]
FeedRate.table$pH                         <- gsub("_.*", "\\1", FeedRate.table$ID)
FeedRate.table$Fed_Unfed                  <- NA
FeedRate.table$Replicate                  <- gsub("^(?:[^_]+_){4}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Num                        <- gsub("^(?:[^_]+_){6}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Run                        <- gsub("^(?:[^_]+_){2}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Time_period                <- dat2OM$Time_period
FeedRate.table$TotalAlgaeLossRatio             <- dat2OM$TotalAlgaeLossRatio
FeedRate.table$FeedingRate_L_hour_m <- dat2OM$FeedingRate_L_hour_m
df       <- data.frame(FeedRate.table) # name dataframe for this single row
df_total.914 <- rbind(df_total.914,df) #bind to a cumulative list dataframe
#print(df_total.914) # print to monitor progress
}
else {}
}
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914$pHxFood <- NA # make te column to maetch and rbind below
All_FR_Master <- rbind(df_total.914, df_total.930, df_total.1026)
df_total.914
for (i in 1:nrow(loop_914)) {
dat <- FeedRate_Master.914 %>%
dplyr::filter(uniq_Identifier == loop_914[i,]) %>%
dplyr::arrange(minutes)
C0_total_algae <- max(c(dat[1,]$total_algae, dat[2,]$total_algae)) # call the max number in the first two time points - allows for error
dat2 <- dat %>%
do(tail(., 2)) %>%
#dplyr::mutate(diff = as.numeric(Time._min) - lag(as.numeric(Time._min), default = first(as.numeric(Time._min)))) %>%
dplyr::filter(total_algae %in% min(total_algae)) %>%
dplyr::mutate(Blank = if(pH == 7.5) AlgaeBlank_914_pH7.5 else AlgaeBlank_914_pH8.0 ) %>%
dplyr::mutate(TotalAlgaeLossRatio = C0_total_algae / as.numeric(total_algae) ) %>%
dplyr::filter(!TotalAlgaeLossRatio < 1) %>%
dplyr::mutate(ln_TotalAlgaeLossRatio = ln(TotalAlgaeLossRatio)) %>%
# dplyr::mutate(FeedingRate =  ( (25/1000) / (diff/60)  * # V / t == Volume of the vessel (in Liters as 25 ml / 1000 ml L-1) and t = time in hours as the diff between the interval sin minutes / 60 mins hour-1
#                                   ( ln_AlgaeLossRatio ) / Length.um. ) ) %>%
dplyr::mutate(FeedingRate_L_hour_m = ( (25/1000) * # V / t == Volume of the vessel (in Liters as 25 ml / 1000 ml L-1) and t = time in hours as the diff between the interval sin minutes / 60 mins hour-1
(( ln_TotalAlgaeLossRatio /  (as.numeric(minutes)/60) - Blank))) / (Length_um/1000000) ) %>%
dplyr::mutate(Time_period = paste( (dat[1,]$minutes),as.numeric(minutes), sep ='-'))
dat2OM <- dat2 %>% dplyr::filter(!minutes == 0)
if (nrow(dat2OM) > 0) {
FeedRate.table           <- data.frame(matrix(nrow = nrow(dat2OM), ncol = 10)) # create dataframe to save cumunalitively during for loop
colnames(FeedRate.table) <- c('Date', 'ID', 'pH', 'Replicate', 'Num','Run', 'Fed_Unfed', 'Time_period', 'TotalAlgaeLossRatio', 'FeedingRate_L_hour_mm') # names for comuns in the for loop
FeedRate.table$Date                       <- dat2OM$Date
FeedRate.table$ID                         <- loop_914[i,]
FeedRate.table$pH                         <- gsub("_.*", "\\1", FeedRate.table$ID)
FeedRate.table$Fed_Unfed                  <- NA
FeedRate.table$Replicate                  <- gsub("^(?:[^_]+_){4}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Num                        <- gsub("^(?:[^_]+_){6}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Run                        <- gsub("^(?:[^_]+_){2}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Time_period                <- dat2OM$Time_period
FeedRate.table$TotalAlgaeLossRatio             <- dat2OM$TotalAlgaeLossRatio
FeedRate.table$FeedingRate_L_hour_m <- dat2OM$FeedingRate_L_hour_m
df       <- data.frame(FeedRate.table) # name dataframe for this single row
df_total.914 <- rbind(df_total.914,df) #bind to a cumulative list dataframe
#print(df_total.914) # print to monitor progress
}
else {}
}
df_total.914 <- df_total.914  %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm")) %>%
dplyr::mutate(Chamber_tank = paste(Replicate, pH, sep = '_'))
df_total.914 <- df_total.914  %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm")) %>%
dplyr::mutate(Chamber_tank = paste(Replicate, pH, sep = '_'))
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914$pHxFood <- NA # make te column to maetch and rbind below
All_FR_Master <- rbind(df_total.914, df_total.930, df_total.1026)
FR_MasterSumTab <- All_FR_Master %>%
dplyr::filter(!FeedingRate_L_hour_mm < 0) %>%
Rmisc::summarySE(measurevar="FeedingRate_L_hour_m", groupvars=c("Date", "pCO2", "Fed_Unfed"))   %>%
dplyr::mutate(Age = case_when(Date == "20210914" ~ 50, Date == "20210930" ~ 64,Date == "20211026" ~ 92)) %>%
replace_na(list(Fed_Unfed = 'High food')) # replaces the NAs for 20210914 Fed_Unfed as 'High food' - this was before split for the food deprivation
FR_MasterSumTab <- All_FR_Master %>%
dplyr::filter(!FeedingRate_L_hour_m < 0) %>%
Rmisc::summarySE(measurevar="FeedingRate_L_hour_m", groupvars=c("Date", "pCO2", "Fed_Unfed"))   %>%
dplyr::mutate(Age = case_when(Date == "20210914" ~ 50, Date == "20210930" ~ 64,Date == "20211026" ~ 92)) %>%
replace_na(list(Fed_Unfed = 'High food')) # replaces the NAs for 20210914 Fed_Unfed as 'High food' - this was before split for the food deprivation
## Use geom_line and geom_point to plot over time
FR_TotalAlgae_geomline <-ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_mm, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_mm-se, ymax=FeedingRate_L_hour_mm+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "Clearance rate; F1 Scallops (juveniles) FoodxOAexperiment",
y = expression(Clearance~rate~"("~L^{-1}~live~algae%.%mm^{-1}%.%hr^{-1}~")")) +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
FR_TotalAlgae_geomline
## Use geom_line and geom_point to plot over time
FR_TotalAlgae_geomline <-ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "Clearance rate; F1 Scallops (juveniles) FoodxOAexperiment",
y = expression(Clearance~rate~"("~L^{-1}~live~algae%.%mm^{-1}%.%hr^{-1}~")")) +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
FR_TotalAlgae_geomline
FR_MasterSumTab
FeedRates_914_Means <- df_total.914 %>%
#dplyr::filter(!FeedingRate_L_hour_meter %in% '-Inf') %>%
dplyr::group_by(pCO2) %>%
dplyr::summarise(
meanCR = mean(FeedingRate_L_hour_m),
sdCR   = sd(FeedingRate_L_hour_m),
seCR   = sd(FeedingRate_L_hour_m) / sqrt(length(FeedingRate_L_hour_m)),
n = n()) %>%
na.omit()
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% mutate::(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed = 'fed') # make te column to maetch and rbind below
All_FR_Master <- rbind(df_total.914, df_total.930, df_total.1026)
FR_MasterSumTab <- All_FR_Master %>%
dplyr::filter(!FeedingRate_L_hour_m < 0) %>%
Rmisc::summarySE(measurevar="FeedingRate_L_hour_m", groupvars=c("Date", "pCO2", "Fed_Unfed"))   %>%
dplyr::mutate(Age = case_when(Date == "20210914" ~ 50, Date == "20210930" ~ 64,Date == "20211026" ~ 92)) %>%
replace_na(list(Fed_Unfed = 'High food')) # replaces the NAs for 20210914 Fed_Unfed as 'High food' - this was before split for the food deprivation
## Use geom_line and geom_point to plot over time
FR_TotalAlgae_geomline <-ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "Clearance rate; F1 Scallops (juveniles) FoodxOAexperiment",
y = expression(Clearance~rate~"("~L^{-1}~live~algae%.%mm^{-1}%.%hr^{-1}~")")) +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
FR_TotalAlgae_geomline
FR_MasterSumTab
df_total.914
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% mutate::(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed == 'fed') # make te column to maetch and rbind below
All_FR_Master <- rbind(df_total.914, df_total.930, df_total.1026)
FR_MasterSumTab <- All_FR_Master %>%
dplyr::filter(!FeedingRate_L_hour_m < 0) %>%
Rmisc::summarySE(measurevar="FeedingRate_L_hour_m", groupvars=c("Date", "pCO2", "Fed_Unfed"))   %>%
dplyr::mutate(Age = case_when(Date == "20210914" ~ 50, Date == "20210930" ~ 64,Date == "20211026" ~ 92)) %>%
replace_na(list(Fed_Unfed = 'High food')) # replaces the NAs for 20210914 Fed_Unfed as 'High food' - this was before split for the food deprivation
## Use geom_line and geom_point to plot over time
FR_TotalAlgae_geomline <-ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "Clearance rate; F1 Scallops (juveniles) FoodxOAexperiment",
y = expression(Clearance~rate~"("~L^{-1}~live~algae%.%mm^{-1}%.%hr^{-1}~")")) +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
FR_MasterSumTab
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% mutate::(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == "High food" ~ "fed") # make te column to maetch and rbind below
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% mutate::(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == "High food" ~ "fed")) # make te column to maetch and rbind below
df_total.914
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% mutate::(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed == "fed") # make te column to maetch and rbind below
df_total.914
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% mutate::(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed == "fed") # make te column to maetch and rbind below
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% mutate::(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed == "fed") # make te column to maetch and rbind below
df_total.914 %>% mutate::(pHxFood == NA)
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% dplyr::mutate(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed == "fed") # make te column to maetch and rbind below
All_FR_Master <- rbind(df_total.914, df_total.930, df_total.1026)
FR_MasterSumTab <- All_FR_Master %>%
dplyr::filter(!FeedingRate_L_hour_m < 0) %>%
Rmisc::summarySE(measurevar="FeedingRate_L_hour_m", groupvars=c("Date", "pCO2", "Fed_Unfed"))   %>%
dplyr::mutate(Age = case_when(Date == "20210914" ~ 50, Date == "20210930" ~ 64,Date == "20211026" ~ 92)) %>%
replace_na(list(Fed_Unfed = 'High food')) # replaces the NAs for 20210914 Fed_Unfed as 'High food' - this was before split for the food deprivation
All_FR_Master <- rbind(df_total.914, df_total.930, df_total.1026)
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% dplyr::mutate(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed == "fed") # make te column to maetch and rbind below
df_total.914              <- data.frame() # start dataframe
for (i in 1:nrow(loop_914)) {
dat <- FeedRate_Master.914 %>%
dplyr::filter(uniq_Identifier == loop_914[i,]) %>%
dplyr::arrange(minutes)
C0_total_algae <- max(c(dat[1,]$total_algae, dat[2,]$total_algae)) # call the max number in the first two time points - allows for error
dat2 <- dat %>%
do(tail(., 2)) %>%
#dplyr::mutate(diff = as.numeric(Time._min) - lag(as.numeric(Time._min), default = first(as.numeric(Time._min)))) %>%
dplyr::filter(total_algae %in% min(total_algae)) %>%
dplyr::mutate(Blank = if(pH == 7.5) AlgaeBlank_914_pH7.5 else AlgaeBlank_914_pH8.0 ) %>%
dplyr::mutate(TotalAlgaeLossRatio = C0_total_algae / as.numeric(total_algae) ) %>%
dplyr::filter(!TotalAlgaeLossRatio < 1) %>%
dplyr::mutate(ln_TotalAlgaeLossRatio = ln(TotalAlgaeLossRatio)) %>%
# dplyr::mutate(FeedingRate =  ( (25/1000) / (diff/60)  * # V / t == Volume of the vessel (in Liters as 25 ml / 1000 ml L-1) and t = time in hours as the diff between the interval sin minutes / 60 mins hour-1
#                                   ( ln_AlgaeLossRatio ) / Length.um. ) ) %>%
dplyr::mutate(FeedingRate_L_hour_m = ( (25/1000) * # V / t == Volume of the vessel (in Liters as 25 ml / 1000 ml L-1) and t = time in hours as the diff between the interval sin minutes / 60 mins hour-1
(( ln_TotalAlgaeLossRatio /  (as.numeric(minutes)/60) - Blank))) / (Length_um/1000000) ) %>%
dplyr::mutate(Time_period = paste( (dat[1,]$minutes),as.numeric(minutes), sep ='-'))
dat2OM <- dat2 %>% dplyr::filter(!minutes == 0)
if (nrow(dat2OM) > 0) {
FeedRate.table           <- data.frame(matrix(nrow = nrow(dat2OM), ncol = 10)) # create dataframe to save cumunalitively during for loop
colnames(FeedRate.table) <- c('Date', 'ID', 'pH', 'Replicate', 'Num','Run', 'Fed_Unfed', 'Time_period', 'TotalAlgaeLossRatio', 'FeedingRate_L_hour_mm') # names for comuns in the for loop
FeedRate.table$Date                       <- dat2OM$Date
FeedRate.table$ID                         <- loop_914[i,]
FeedRate.table$pH                         <- gsub("_.*", "\\1", FeedRate.table$ID)
FeedRate.table$Fed_Unfed                  <- NA
FeedRate.table$Replicate                  <- gsub("^(?:[^_]+_){4}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Num                        <- gsub("^(?:[^_]+_){6}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Run                        <- gsub("^(?:[^_]+_){2}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Time_period                <- dat2OM$Time_period
FeedRate.table$TotalAlgaeLossRatio             <- dat2OM$TotalAlgaeLossRatio
FeedRate.table$FeedingRate_L_hour_m <- dat2OM$FeedingRate_L_hour_m
df       <- data.frame(FeedRate.table) # name dataframe for this single row
df_total.914 <- rbind(df_total.914,df) #bind to a cumulative list dataframe
#print(df_total.914) # print to monitor progress
}
else {}
}
df_total.914 <- df_total.914  %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm")) %>%
dplyr::mutate(Chamber_tank = paste(Replicate, pH, sep = '_'))
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% dplyr::mutate(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == "High food" ~ "fed") # make te column to maetch and rbind below
df_total.914
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% dplyr::mutate(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == "High food" ~ "fed")) # make te column to maetch and rbind below
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% dplyr::mutate(pHxFood == NA) %>%  dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == "High food" ~ "fed")) # make te column to maetch and rbind below
df_total.914 %>% dplyr::mutate(pHxFood == NA)
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% dplyr::mutate(pHxFood == "NA") %>%  dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == "High food" ~ "fed")) # make te column to maetch and rbind below
df_total.914 %>% dplyr::mutate(pHxFood == "NA")
df_total.914
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% dplyr::mutate(pHxFood == "NA") %>%  dplyr::mutate(Fed_Unfed == "fed")) # make te column to maetch and rbind below
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% dplyr::mutate(pHxFood == "NA") %>%  dplyr::mutate(Fed_Unfed == "fed") # make te column to maetch and rbind below
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% dplyr::mutate(pHxFood == "none") %>%  dplyr::mutate(Fed_Unfed == "fed") # make te column to maetch and rbind below
df_total.914 %>% dplyr::mutate(pHxFood == "none")
# write csv ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.914 <- df_total.914 %>% dplyr::mutate(pHxFood = "none") %>%  dplyr::mutate(Fed_Unfed = "fed") # make te column to maetch and rbind below
All_FR_Master <- rbind(df_total.914, df_total.930, df_total.1026)
FR_MasterSumTab <- All_FR_Master %>%
dplyr::filter(!FeedingRate_L_hour_m < 0) %>%
Rmisc::summarySE(measurevar="FeedingRate_L_hour_m", groupvars=c("Date", "pCO2", "Fed_Unfed"))   %>%
dplyr::mutate(Age = case_when(Date == "20210914" ~ 50, Date == "20210930" ~ 64,Date == "20211026" ~ 92)) %>%
replace_na(list(Fed_Unfed = 'High food')) # replaces the NAs for 20210914 Fed_Unfed as 'High food' - this was before split for the food deprivation
FR_MasterSumTab
## Use geom_line and geom_point to plot over time
FR_TotalAlgae_geomline <-ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "Clearance rate; F1 Scallops (juveniles) FoodxOAexperiment",
y = expression(Clearance~rate~"("~L^{-1}~live~algae%.%mm^{-1}%.%hr^{-1}~")")) +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
FR_TotalAlgae_geomline
ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()
ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw()
ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "Clearance rate; F1 Scallops (juveniles) FoodxOAexperiment",
y = expression(Clearance~rate~"("~L^{-1}~live~algae%.%mm^{-1}%.%hr^{-1}~")")) +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none")
ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)")
ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "Clearance rate; F1 Scallops (juveniles) FoodxOAexperiment",
y = expression(Clearance~rate~"("~L^{-1}~live~algae%.%mm^{-1}%.%hr^{-1}~")")) +
scale_linetype_manual(values = c("fed" = "solid", "unfed" = "dashed"))
## Use geom_line and geom_point to plot over time
FR_TotalAlgae_geomline <-ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "Clearance rate; F1 Scallops (juveniles) FoodxOAexperiment",
y = expression(Clearance~rate~"("~L^{-1}~live~algae%.%mm^{-1}%.%hr^{-1}~")")) +
scale_linetype_manual(values = c("fed" = "solid", "unfed" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
FR_TotalAlgae_geomline
pdf(paste0("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/Juvenile_clearance_FoodxOA.pdf"))
FR_TotalAlgae_geomline
dev.off()
## Use geom_line and geom_point to plot over time
FR_TotalAlgae_geomline <-ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "Clearance rate; F1 Scallops (juveniles) FoodxOAexperiment",
y = expression(Clearance~rate~"("~L^{-1}~live~algae%.%m^{-1}%.%hr^{-1}~")")) +
scale_linetype_manual(values = c("fed" = "solid", "unfed" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
#pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Juvenile_respiration_FoodxOA.pdf"))
pdf(paste0("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/Juvenile_clearance_FoodxOA.pdf"))
FR_TotalAlgae_geomline
dev.off()
## Use geom_line and geom_point to plot over time
FR_TotalAlgae_geomline <-ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "Feeding rate; F1 Scallops (juveniles) FoodxOAexperiment",
y = expression(Feeding~rate~"("~live~cells~L^{-1}~live~algae%.%m^{-1}%.%hr^{-1}~")")) +
scale_linetype_manual(values = c("fed" = "solid", "unfed" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
pdf(paste0("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/Juvenile_FeedingRate_FoodxOA.pdf"))
FR_TotalAlgae_geomline
dev.off()
## Use geom_line and geom_point to plot over time
FR_TotalAlgae_geomline <-ggplot(data=FR_MasterSumTab, aes(x=Age, y=FeedingRate_L_hour_m, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=FeedingRate_L_hour_m-se, ymax=FeedingRate_L_hour_m+se), width=.2,
position=position_dodge(.1))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "Feeding rate; F1 Scallops (juveniles) FoodxOAexperiment",
y = expression(Feeding~rate~"("~live~cells~L^{-1}%.%m^{-1}%.%hr^{-1}~")")) +
scale_linetype_manual(values = c("fed" = "solid", "unfed" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
#pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Juvenile_respiration_FoodxOA.pdf"))
pdf(paste0("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/Juvenile_FeedingRate_FoodxOA.pdf"))
FR_TotalAlgae_geomline
dev.off()
dat2OM
df_total.914
