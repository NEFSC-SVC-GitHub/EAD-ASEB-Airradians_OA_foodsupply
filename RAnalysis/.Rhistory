<<<<<<< HEAD
print(AOVdf_total) # print to monitor progress
}
chem_LOOP
MODPCO2    <- aov(lm(pCO2.out..matm. ~Food.Treatment*pH, data = chem_LOOP))
MODPCO2
summmary(MODPCO2)
summary(MODPCO2)
summary(MODPCO2)
chemTable_n <- chem[,c(3,4,6,11,13:14,16:20)] %>%
group_by(pH,Food.Treatment)  %>%
dplyr::summarise(n = n())
# Summary table chemistry - BY DATE
chemTable <- chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n())))
chemTable
# Summary table chemistry - BY DATE
chemTable <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))))
chemTable
# Summary table chemistry - BY DATE
chemTable <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) %>%
na.omit())
chemTable
summary(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))
summary(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))) # p-value = 0.07265 - normal!
qqnorm(resid(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))) # qq nrom plot of model residuals
leveneTest(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable))) # 0.004876 ** - variance is unequal
hist(resid(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable))))
leveneTest(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable))) # 0.004876 ** - variance is unequal
summary(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))
summary(aov(lm(pCO2.out..matm._mean ~Food.Treatment*as.factor(pH), data = chemTable)))
chemTable
# Summary table chemistry - BY DATE
chemTable <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) %>%
mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
na.omit())
summary(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
summary(aov(lm(pCO2.out..matm._mean ~Food.Treatment*as.factor(pH), data = chemTable)))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~Food.Treatment*pH, data = chemTable)))) # p-value = 0.07265 - normal!
summary(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
modpCO2 <- summary(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))
emmeans::(modpCO2, ~ pH_food)
modpCO2 <- summary(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))
emmeans(modpCO2, ~ pH_food)
?emmeans
linrary(emmeans)
library(emmeans)
emmeans(modpCO2, ~ pH_food)
modpCO2 <- (lm(pCO2.out..matm._mean ~pH_food, data = chemTable))
emmeans(modpCO2, ~ pH_food)
TukeyHSD(modpCO2)
TukeyHSD(aov(modpCO2))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
emmeans(modpCO2, ~ pH_food)
TukeyHSD(aov(modpCO2))
chemTable
chemTable
long <- melt(setDT(chemTable),
id.vars = c("pH", "Food.Treatmen"),
variable.name = "year")
# $pH_food
#                   diff       lwr        upr      p adj
# 7.5_Low-7.5_High -136.11500 -311.5340   39.30396 0.1563058
# 8_High-7.5_High  -275.56000 -440.9466 -110.17342 0.0013171 ** pCO2 8 < 7.5 wihtin high food
# 8_Low-7.5_High   -333.32125 -508.7402 -157.90229 0.0003875 ** pCO2 8 < 7.5 across food
# 8_High-7.5_Low   -139.44500 -314.8640   35.97396 0.1426774
# 8_Low-7.5_Low    -197.20625 -382.1141  -12.29843 0.0349779 ** # pCO2 8 < 7.5 within low food
# 8_Low-8_High      -57.76125 -233.1802  117.65771 0.7752134
library(resphape2)
# $pH_food
#                   diff       lwr        upr      p adj
# 7.5_Low-7.5_High -136.11500 -311.5340   39.30396 0.1563058
# 8_High-7.5_High  -275.56000 -440.9466 -110.17342 0.0013171 ** pCO2 8 < 7.5 wihtin high food
# 8_Low-7.5_High   -333.32125 -508.7402 -157.90229 0.0003875 ** pCO2 8 < 7.5 across food
# 8_High-7.5_Low   -139.44500 -314.8640   35.97396 0.1426774
# 8_Low-7.5_Low    -197.20625 -382.1141  -12.29843 0.0349779 ** # pCO2 8 < 7.5 within low food
# 8_Low-8_High      -57.76125 -233.1802  117.65771 0.7752134
library(reshape2)
long <- melt(setDT(chemTable),
id.vars = c("pH", "Food.Treatmen"),
variable.name = "year")
(chemTable[,-(1)])
(chemTable %>% dplyr::select(-c(Date, pH_food)))
long <- melt(setDT(chemTable %>% dplyr::select(-c(Date, pH_food))),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
long
widechemMEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
long <- melt(setDT(chemTable %>% dplyr::select(Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
widechemMEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
long <- melt(setDT(widechemMEANS %>% dplyr::select(Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
widechemMEANS
long <- melt(setDT(widechemMEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
wideCHEAM.MEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
wideCHEM.MEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
longHCEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
longHCHEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "year")
longHCHEM.MEANS
longHCHEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement")
means_plot <- longHCHEM.MEANS
means_plot
means_plot <- longHCHEM.MEANS %>%
ggplot(aes(x = pH, y = value, color = as.factor(Food.Treatment))) +
facet_wrap(~measurement)
means_plot
means_plot <- longHCHEM.MEANS %>%
ggplot(aes(x = as.factor(pH), y = value, color = as.factor(Food.Treatment))) +
facet_wrap(~measurement)
means_plot
means_plot <- longHCHEM.MEANS %>%
ggplot(aes(x = as.factor(pH), y = value, color = as.factor(Food.Treatment))) +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
ggplot(aes(x = as.factor(pH), y = value, color = as.factor(Food.Treatment))) +
geom_point() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
ggplot(aes(x = as.factor(pH), y = value, color = as.factor(Food.Treatment))) +
geom_point() +
geom_line() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = as.factor(pH), y = value, color = as.factor(pH_food))) +
geom_point() +
geom_line() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = as.factor(pH), y = value, shape = as.factor(pH_food))) +
geom_point() +
geom_line() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = as.factor(pH), y = value, shape = as.factor(pH_food))) +
geom_point() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = value, shape = pH)) +
geom_point() +
facet_wrap(~measurement, scales = "free")
means_plot
longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = value, shape = pH)) +
geom_point() +
facet_wrap(~measurement, scales = "free")
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = value, shape = as.factor(pH))) +
geom_point() +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = value, shape = as.factor(pH))) +
geom_point() +
geom_jitter()+
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = value, shape = as.factor(pH))) +
geom_point() +
geom_jitter()+
facet_wrap(~measurement, scales = "free")
means_plot
wideCHEM.SE <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(se=sd(.)/sqrt(n()))))
wideCHEM.SE
longHCHEM.SE <- melt(setDT(wideCHEM.SE %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement")
longHCHEM.SE
longHCHEM.MEANS
cbind(longHCHEM.MEANS,longHCHEM.SE)
longHCHEM.SE
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(c('pH','Food.Treatment')) ))
longHCHEM.SE <- melt(setDT(wideCHEM.SE %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(value = SE)
longHCHEM.SE <- melt(setDT(wideCHEM.SE %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(SE = value)
longHCHEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(MEAN = value)
wideCHEM.SE <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(se=sd(.)/sqrt(n()))))
longHCHEM.SE <- melt(setDT(wideCHEM.SE %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(SE = value)
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(c('pH','Food.Treatment')) ))
wideCHEM.MEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
longHCHEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(MEAN = value)
wideCHEM.SE <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(se=sd(.)/sqrt(n()))))
longHCHEM.SE <- melt(setDT(wideCHEM.SE %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(SE = value)
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(c('pH','Food.Treatment')) ))
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(c(-'pH','Food.Treatment')) ))
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(-c('pH','Food.Treatment')) ))
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(-c('pH','Food.Treatment',measurement)) ))
cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(-c('pH','Food.Treatment','measurement')) ))
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
geom_errorbar(aes(ymin=MEAN-SE, ymax=MEAN+SE), width=.2,
position=position_dodge(0.05))
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
geom_errorbar(aes(ymin=MEAN-SE, ymax=MEAN+SE), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
means_plot
master <- cbind(longHCHEM.MEANS,(longHCHEM.SE %>% dplyr::select(-c('pH','Food.Treatment','measurement')) ))
means_plot <- master %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
geom_errorbar(aes(ymin=MEAN-SE, ymax=MEAN+SE), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
means_plot
means_plot <- master %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_errorbar(aes(ymin=MEAN-SE, ymax=MEAN+SE), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
means_plot
master
wideCHEM.MEANS <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean)))
longHCHEM.MEANS <- melt(setDT(wideCHEM.MEANS %>% dplyr::select(-Date)),
id.vars = c("pH", "Food.Treatment"),
variable.name = "measurement") %>%
dplyr::rename(MEAN = value)
means_plot <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
facet_wrap(~measurement, scales = "free")
means_plot
CHEM_DOTPLOT <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
facet_wrap(~measurement, scales = "free")
CHEM_DOTPLOT
geom_errorbar(aes(ymin=MEAN-SE, ymax=MEAN+SE), width=.2,
position=position_dodge(0.05)) +
# Summary table chemistry
chemTable <- chem[,c(3,4,6,11,13:14,16:20)] %>%
group_by(pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n())))
longHCHEM.MEANS
longHCHEM.MEANS
longHCHEM.MEANS.SUMMARY <- as.data.table(longHCHEM.MEANS %>%
group_by(pH,Food.Treatment,measurement) %>%
summarise_each(funs(mean)))
longHCHEM.MEANS.SUMMARY
longHCHEM.MEANS.SUMMARY <- as.data.table(longHCHEM.MEANS %>%
group_by(pH,Food.Treatment,measurement) %>%
summarise_each(funs(mean,se=sd(.)/sqrt(n()))))
longHCHEM.MEANS.SUMMARY
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = mean, shape = as.factor(pH))) +
geom_point()+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = mean, shape = as.factor(pH))) +
geom_point() +
geom_jitter() +
geom_line() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = mean, shape = as.factor(pH))) +
geom_point() +
geom_jitter() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = mean, shape = as.factor(pH))) +
geom_point() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_MEANSEPLOT <- longHCHEM.MEANS.SUMMARY %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = mean, shape = as.factor(pH))) +
geom_point() +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2,
position=position_dodge(0.05)) +
theme_classic()+
facet_wrap(~measurement, scales = "free")
CHEM_MEANSEPLOT
CHEM_DOTPLOT <- longHCHEM.MEANS %>%
dplyr::mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
ggplot(aes(x = Food.Treatment, y = MEAN, shape = as.factor(pH))) +
geom_point()+
theme_classic() +
facet_wrap(~measurement, scales = "free")
CHEM_DOTPLOT
CHEM_MEANSEPLOT
ggarrange(CHEM_DOTPLOT, CHEM_MEANSEPLOT,nrow = 2)
library(ggarrange)
library(ggarrange)
install.packages('ggarrange')
library(ggarrange)
library(ggarrange)
print(CHEM_DOTPLOT, CHEM_MEANSEPLOT,nrow = 2)
print(CHEM_MEANSEPLOT)
pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Water_Chemistry/MeanStError_plot.pdf"), width = 10, height = 6)
print(CHEM_MEANSEPLOT)
dev.off()
# ANOVA tests of chemistry data
chemTable <- as.data.table(chem[,c(1, 3,4,6,11,13:14,16:20)] %>%
group_by(Date,pH,Food.Treatment) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) %>%
mutate(pH_food= paste(pH, Food.Treatment, sep = "_")) %>%
na.omit())
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~pH_food, data = chemTable))
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
emmeans(modpCO2, ~ pH_food)
TukeyHSD(aov(modpCO2))
chemTable
# $pH_food
#                   diff       lwr        upr      p adj
# 7.5_Low-7.5_High -136.11500 -311.5340   39.30396 0.1563058
# 8_High-7.5_High  -275.56000 -440.9466 -110.17342 0.0013171 ** pCO2 8 < 7.5 wihtin high food
# 8_Low-7.5_High   -333.32125 -508.7402 -157.90229 0.0003875 ** pCO2 8 < 7.5 across food
# 8_High-7.5_Low   -139.44500 -314.8640   35.97396 0.1426774
# 8_Low-7.5_Low    -197.20625 -382.1141  -12.29843 0.0349779 ** # pCO2 8 < 7.5 within low food
# 8_Low-8_High      -57.76125 -233.1802  117.65771 0.7752134
# pH
modpH <- (lm(pH.out_mean ~pH_food, data = chemTable))
shapiro.test(resid(aov(lm(pH.out_mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
emmeans(modpH, ~ pH_food)
TukeyHSD(aov(modpH))
shapiro.test(resid(aov(lm(pH.out_mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
# $pH_food
#                   diff       lwr        upr      p adj
# 7.5_Low-7.5_High -136.11500 -311.5340   39.30396 0.1563058
# 8_High-7.5_High  -275.56000 -440.9466 -110.17342 0.0013171 ** pCO2 8 < 7.5 wihtin high food
# 8_Low-7.5_High   -333.32125 -508.7402 -157.90229 0.0003875 ** pCO2 8 < 7.5 across food
# 8_High-7.5_Low   -139.44500 -314.8640   35.97396 0.1426774
# 8_Low-7.5_Low    -197.20625 -382.1141  -12.29843 0.0349779 ** # pCO2 8 < 7.5 within low food
# 8_Low-8_High      -57.76125 -233.1802  117.65771 0.7752134
# pH
modpH <- (lm(pH.out_mean ~pH_food, data = chemTable))
shapiro.test(resid(aov(lm(pH.out_mean ~pH_food, data = chemTable)))) # p-value = 0.5409 - normal!
emmeans(modpH, ~ pH_food)
TukeyHSD(aov(modpH))
modpH
summary(0.5409)
summary(aov(modpH))
TukeyHSD(aov(modpH))
chemTable
# pH ------------------------------------------------------ #
modpH <- (lm(pH.out_mean ~pH*Food.Treatment, data = chemTable))
summary(aov(modpH)) # 0.000248 sig effect
shapiro.test(resid(aov(lm(pH.out_mean ~pH_food, data = chemTable)))) # p-value = 0.5409 - normal!
emmeans(modpH, ~ pH_food)
summary(aov(modpH)) # 0.000248 sig effect
TukeyHSD(aov(modpH))
# pH ------------------------------------------------------ #
modpH <- (lm(pH.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
TukeyHSD(aov(modpH))
# pH ------------------------------------------------------ #
modpH <- (lm(pH.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modpH)) # 0.000248 sig effect
# pCO2
modpH <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modpCO2)) # 0.000248 sig effect
modpCO2 <- (lm(pCO2.out..matm._mean ~pH_food, data = chemTable))
summary(aov(modpCO2)) # 0.000248 sig effect
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modpCO2)) # 0.000248 sig effect
# pH and food significant, no interaction
modpCO2 <- (lm(pCO2.out..matm._mean ~pH_food, data = chemTable))
summary(aov(modpCO2)) # 0.000248 sig effect
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modpCO2)) # 0.000248 sig effect
shapiro.test(resid(aov(lm(pCO2.out..matm._mean ~pH_food, data = chemTable)))) # p-value = 0.07265 - normal!
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
shapiro.test(resid(aov(modpCO2))) # p-value = 0.07265 - normal!
# pH and food significant, no interaction
modpCO2 <- (lm(pCO2.out..matm._mean ~pH_food, data = chemTable))
shapiro.test(resid(aov(modpCO2))) # p-value = 0.07265 - normal!
# pCO2
modpCO2 <- (lm(pCO2.out..matm._mean ~as.factor(pH)*Food.Treatment, data = chemTable))
shapiro.test(resid(aov(modpCO2))) # p-value = 0.07265 - normal!
emmeans(modpCO2, ~ pH_food)
TukeyHSD(aov(modpCO2))
TukeyHSD(aov(modpCO2))
# pH ------------------------------------------------------ #
modpH <- (lm(pH.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modpH)) # 0.000248 sig effect
# pH and food significant, no interaction
modpH <- (lm(pH.out_mean ~pH_food, data = chemTable))
summary(aov(modpH)) # 0.000248 sig effect
# pH ------------------------------------------------------ #
modpH <- (lm(pH.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
shapiro.test(resid(aov(lm(pH.out_mean ~pH_food, data = chemTable)))) # p-value = 0.5409 - normal!
emmeans(modpH, ~ pH_food)
TukeyHSD(aov(modpH))
chemTable
# Aragonite sat ------------------------------------------------------ #
modARAG <- (lm(WAr.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modARAG)) # 0.000248 sig effect
# pH is significant but NOT aragnoite
modARAG <- (lm(WAr.out_mean ~pH_food, data = chemTable))
summary(aov(modARAG)) # 0.000248 sig effect
shapiro.test(resid(aov(modARAG))) # p-value = 0.5409 - normal!
# Aragonite sat ------------------------------------------------------ #
modARAG <- (lm(WAr.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
shapiro.test(resid(aov(modARAG))) # p-value = 0.5409 - normal!
# Aragonite sat ------------------------------------------------------ #
modARAG <- (lm(log(WAr.out_mean) ~as.factor(pH)*Food.Treatment, data = chemTable))
summary(aov(modARAG)) # 0.000248 sig effect
shapiro.test(resid(aov(modARAG))) # p-value = 0.003882 - non-normal!
# Aragonite sat ------------------------------------------------------ #
modARAG <- (lm(WAr.out_mean ~as.factor(pH)*Food.Treatment, data = chemTable))
# pH is significant but NOT aragnoite
modARAG <- (lm(WAr.out_mean ~pH_food, data = chemTable))
summary(aov(modARAG)) # 0.000248 sig effect
shapiro.test(resid(aov(modARAG))) # p-value = 0.003882 - non-normal!
emmeans(modARAG, ~ pH_food)
TukeyHSD(aov(modARAG))
=======
Ply_ANOVAmod_0914 <-aov(CR_mL.hr.mmlength ~ pH, data=Ply_FR_914_df)
leveneTest(Ply_ANOVAmod_0914) # 0.7556
shapiro.test(resid(Ply_ANOVAmod_0914)) # 0.1025
summary(Ply_ANOVAmod_0914)
kable(as.data.frame(anova(Ply_ANOVAmod_0914))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210914_figs_tables/20210914_PLY_CR_OneWayANOVA_Table.png", zoom = 1.5)
kable(as.data.frame(anova(Ply_ANOVAmod_0914))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210914_figs_tables/20210914_PLY_CR_OneWayANOVA_Table.png", zoom = 1.5)
check_model(Ply_ANOVAmod_0914) # print the model diagnostics
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210914_figs_tables/20210914_PLY_CR_OneWayANOVA_Diagnostics.pdf"))
check_model(Ply_ANOVAmod_0914) # print the model diagnostics
dev.off()
# Ply - Linear Mixed Effects Model
Chaet_LMEmod_0914 <-lme(CR_mL.hr.mmlength ~ pH, random=~1|random_fact, data=Chaet_FR_914_df) #nlme
shapiro.test(resid(Chaet_LMEmod_0914)) # 0.1025
pander(anova(Chaet_LMEmod_0914), style='rmarkdown') # anova table of lmer
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  64.57  | 8.153e-07 |
# |     **pH**      |   1   |   6   |  4.102  |  0.08924  |
Chaet_LMERmod_0914 <- lmer(CR_mL.hr.mmlength ~ pH + (1|random_fact), data=Chaet_FR_914_df, REML = FALSE) # lme4 (can run leenes test with this package output)
leveneTest(residuals(Chaet_LMERmod_0914) ~ Chaet_FR_914_df$pH) # 0.7556
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  64.57  | 8.153e-07 |
# |     **pH**      |   1   |   6   |  4.102  |  0.08924  |
Chaet_LMERmod_0914 <- lmer(CR_mL.hr.mmlength ~ pH + (1|random_fact), data=Chaet_FR_914_df, REML = FALSE) # lme4 (can run leenes test with this package output)
shapiro.test(resid(Chaet_LMERmod_0914)) # 0.1025
summary(Ply_LMERmod_0914) # random factor accounts fo 0 percent of the variance
summary(Chaet_LMERmod_0914) # random factor accounts fo 0 percent of the variance
pander(anova(Ply_LMERmod_0914), style='rmarkdown') # anova table of lmer
pander(anova(Chaet_LMERmod_0914), style='rmarkdown') # anova table of lmer
Chaet_FR_914_df    <-  ClearancRates_calc %>%
filter(Date %in% '20210914') %>%
filter(Chaet_mL.hr.mmlength > 0) %>% mutate(type = 'chaet') %>%
dplyr::rename(CR_mL.hr.mmlength = Chaet_mL.hr.mmlength) %>%
dplyr::select(!c('Ply_mL.hr.mmlength','Seston_mL.hr.mmlength')) %>%
dplyr::mutate(pH = as.factor(pH))
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  64.57  | 8.153e-07 |
# |     **pH**      |   1   |   6   |  4.102  |  0.08924  |
Chaet_LMERmod_0914 <- lmer(CR_mL.hr.mmlength ~ pH + (1|random_fact), data=Chaet_FR_914_df, REML = FALSE) # lme4 (can run leenes test with this package output)
Chaet_FR_914_df$pH
leveneTest(residuals(Chaet_LMERmod_0914) ~ Chaet_FR_914_df$pH) # 0.7556
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  64.57  | 8.153e-07 |
# |     **pH**      |   1   |   6   |  4.102  |  0.08924  |
Chaet_LMERmod_0914 <- lmer(CR_mL.hr.mmlength ~ pH + (1|random_fact), data=Chaet_FR_914_df, REML = TRUE) # lme4 (can run leenes test with this package output)
leveneTest(residuals(Chaet_LMERmod_0914) ~ Chaet_FR_914_df$pH) # 0.1234
shapiro.test(resid(Chaet_LMERmod_0914)) # 0.1672
summary(Chaet_LMERmod_0914) # random factor accounts fo 0 percent of the variance
pander(anova(Chaet_LMERmod_0914), style='rmarkdown') # anova table of lmer
# Ply - one-way anova
Chaet_ANOVAmod_0914 <-aov(CR_mL.hr.mmlength ~ pH, data=Chaet_FR_914_df)
leveneTest(Chaet_ANOVAmod_0914) # 0.7556
shapiro.test(resid(Ply_ANOVAmod_0914)) # 0.1025
summary(Ply_ANOVAmod_0914)
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Chaet_ANOVAmod_0914, Chaet_LMERmod_0914) # the one way anova is the better fit model
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  64.57  | 8.153e-07 |
# |     **pH**      |   1   |   6   |  4.102  |  0.08924  |
Chaet_LMERmod_0914 <- lmer(CR_mL.hr.mmlength ~ pH + (1|random_fact), data=Chaet_FR_914_df, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Chaet_ANOVAmod_0914, Chaet_LMERmod_0914) # the one way anova is the better fit model
kable(as.data.frame(anova(Chaet_ANOVAmod_0914))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210914_figs_tables/20210914_CHAET_CR_OneWayANOVA_Table.png", zoom = 1.5)
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210914_figs_tables/20210914_CHAET_CR_OneWayANOVA_Diagnostics.pdf"))
check_model(Chaet_ANOVAmod_0914) # print the model diagnostics
dev.off()
# Seston - Linear Mixed Effects Model
Seston_LMEmod_0914 <-lme(CR_mL.hr.mmlength ~ pH, random=~1|random_fact, data=Seston_FR_914_df) #nlme
shapiro.test(resid(Seston_LMEmod_0914)) # 0.1672
pander(anova(Seston_LMEmod_0914), style='rmarkdown') # anova table of lmer
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  48.89  | 4.339e-06 |
# |     **pH**      |   1   |   6   |  1.496  |  0.2672   |
Seston_LMERmod_0914 <- lmer(CR_mL.hr.mmlength ~ pH + (1|random_fact), data=Seston_FR_914_df, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Seston_LMERmod_0914) ~ Seston_FR_914_df$pH) # 0.1234
shapiro.test(resid(Seston_LMERmod_0914)) # 0.1672
summary(Seston_LMERmod_0914) # random factor accounts fo 0 percent of the variance
(0.1186   /(0.1186   + 2.9818   ) )* 100
pander(anova(Seston_LMERmod_0914), style='rmarkdown') # anova table of lmer
# Seston - one-way anova
Seston_ANOVAmod_0914 <-aov(CR_mL.hr.mmlength ~ pH, data=Seston_FR_914_df)
leveneTest(Seston_ANOVAmod_0914) # 0.1234
shapiro.test(resid(Seston_ANOVAmod_0914)) # 0.1025
summary(Seston_ANOVAmod_0914)
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Seston_ANOVAmod_0914, Seston_LMERmod_0914) # the one way anova is the better fit model
kable(as.data.frame(anova(Seston_ANOVAmod_0914))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210914_figs_tables/20210914_SESTON_CR_OneWayANOVA_Table.png", zoom = 1.5)
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210914_figs_tables/20210914_SESTON_CR_OneWayANOVA_Diagnostics.pdf"))
check_model(Seston_ANOVAmod_0914) # print the model diagnostics
dev.off()
Master_914_plotting      <- rbind(Chaet_FR_914_df, Ply_FR_914_df, Seston_FR_914_df)
Master_914_plotting$pHxfood <- paste(Master_914_plotting$pH, Master_914_plotting$Fed_Unfed, sep = '_')
CR_914_boxplot <- Master_914_plotting %>%
ggplot(aes(pCO2 , CR_mL.hr.mmlength , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Clearance rate, F1 Scallops 20210914") +
facet_wrap(~type)
CR_914_boxplot
# Data
Ply_FR_930_df      <- ClearancRates_calc %>%
filter(Date %in% '20210930') %>%
filter(Ply_mL.hr.mmlength > 0) %>%
mutate(type = 'ply') %>%
dplyr::rename(CR_mL.hr.mmlength = Ply_mL.hr.mmlength) %>%
dplyr::select(!c('Chaet_mL.hr.mmlength','Seston_mL.hr.mmlength'))
# Ply - Linear Mixed Effects Model
Ply_LMEmod_0930 <-lme(CR_mL.hr.mmlength ~ pH * Fed_Unfed, random=~1|random_fact, data=Ply_FR_930_df) #nlme
shapiro.test(resid(Ply_LMEmod_0930)) # 0.1025
pander(anova(Ply_LMEmod_0930), style='rmarkdown') # anova table of lmer
# |      &nbsp;      | numDF | denDF | F-value  | p-value  |
# |:----------------:|:-----:|:-----:|:--------:|:--------:|
# | **(Intercept)**  |   1   |  10   |  10.95   | 0.007887 |
# |      **pH**      |   1   |   6   | 0.004046 |  0.9513  |
# |  **Fed_Unfed**   |   1   |   6   |  1.365   |  0.287   |
# | **pH:Fed_Unfed** |   1   |   6   |  0.1011  |  0.7612  |
Ply_LMERmod_0930 <- lmer(CR_mL.hr.mmlength ~ pH * Fed_Unfed + (1|random_fact), data=Ply_FR_930_df, REML = FALSE) # lme4 (can run leenes test with this package output)
leveneTest(residuals(Ply_LMERmod_0930) ~ Ply_FR_930_df$pH) # 0.7556
# Data
Ply_FR_930_df      <- ClearancRates_calc %>%
filter(Date %in% '20210930') %>%
filter(Ply_mL.hr.mmlength > 0) %>%
mutate(type = 'ply') %>%
dplyr::rename(CR_mL.hr.mmlength = Ply_mL.hr.mmlength) %>%
dplyr::select(!c('Chaet_mL.hr.mmlength','Seston_mL.hr.mmlength'))
# Data
Ply_FR_930_df      <- ClearancRates_calc %>%
filter(Date %in% '20210930') %>%
filter(Ply_mL.hr.mmlength > 0) %>%
mutate(type = 'ply') %>%
dplyr::rename(CR_mL.hr.mmlength = Ply_mL.hr.mmlength) %>%
dplyr::select(!c('Chaet_mL.hr.mmlength','Seston_mL.hr.mmlength'))%>%
dplyr::mutate(pH = as.factor(pH))
Chaet_FR_930_df    <- ClearancRates_calc %>%
filter(Date %in% '20210930') %>%
filter(Chaet_mL.hr.mmlength > 0) %>%
mutate(type = 'chaet') %>%
dplyr::rename(CR_mL.hr.mmlength = Chaet_mL.hr.mmlength) %>%
dplyr::select(!c('Ply_mL.hr.mmlength','Seston_mL.hr.mmlength'))%>%
dplyr::mutate(pH = as.factor(pH))
Seston_FR_930_df   <- ClearancRates_calc %>%
filter(Date %in% '20210930') %>%
filter(Seston_mL.hr.mmlength > 0) %>%
mutate(type = 'seston') %>%
dplyr::rename(CR_mL.hr.mmlength = Seston_mL.hr.mmlength) %>%
dplyr::select(!c('Chaet_mL.hr.mmlength','Ply_mL.hr.mmlength'))%>%
dplyr::mutate(pH = as.factor(pH))
# Ply - Linear Mixed Effects Model
Ply_LMEmod_0930 <-lme(CR_mL.hr.mmlength ~ pH * Fed_Unfed, random=~1|random_fact, data=Ply_FR_930_df) #nlme
shapiro.test(resid(Ply_LMEmod_0930)) # 0.407
pander(anova(Ply_LMEmod_0930), style='rmarkdown') # anova table of lmer
leveneTest(residuals(Ply_LMERmod_0930) ~ Ply_FR_930_df$pH) # 0.7556
shapiro.test(resid(Ply_LMERmod_0930)) # 0.1025
summary(Ply_LMERmod_0930) # random factor accounts fo 0 percent of the variance
summary(Ply_LMERmod_0930) # view for the portion of random effecting the variance
(11.50       /(11.50       + 12.26       ) )* 100 # random factor accounts fo 3.825313 percent of the variance
pander(anova(Ply_LMERmod_0930), style='rmarkdown') # anova table of lmer
# |      &nbsp;      | numDF | denDF | F-value  | p-value  |
# |:----------------:|:-----:|:-----:|:--------:|:--------:|
# | **(Intercept)**  |   1   |  10   |  10.95   | 0.007887 |
# |      **pH**      |   1   |   6   | 0.004046 |  0.9513  |
# |  **Fed_Unfed**   |   1   |   6   |  1.365   |  0.287   |
# | **pH:Fed_Unfed** |   1   |   6   |  0.1011  |  0.7612  |
Ply_LMERmod_0930 <- lmer(CR_mL.hr.mmlength ~ pH * Fed_Unfed + (1|random_fact), data=Ply_FR_930_df, REML = FALSE) # lme4 (can run leenes test with this package output)
shapiro.test(resid(Ply_LMERmod_0930)) # 0.2007
summary(Ply_LMERmod_0930) # view for the portion of random effecting the variance
# Ply - one-way anova
Ply_ANOVAmod_0930 <-aov(CR_mL.hr.mmlength ~ pH * Fed_Unfed, data=Ply_FR_930_df)
leveneTest(Ply_ANOVAmod_0930) # 0.7556
shapiro.test(resid(Ply_ANOVAmod_0930)) # 0.1025
hist(resid(Ply_ANOVAmod_0930))
Ply_ANOVAmod_0930_TRANSFORMED <-aov(sqrt(CR_mL.hr.mmlength) ~ pH * Fed_Unfed, data=Ply_FR_930_df)
leveneTest(Ply_ANOVAmod_0930_TRANSFORMED) # 0.6025
shapiro.test(resid(Ply_ANOVAmod_0930_TRANSFORMED)) # 0.008883
summary(Ply_ANOVAmod_0930_TRANSFORMED)
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Ply_ANOVAmod_0930, Ply_LMERmod_0930) # the one way anova is the better fit model
kable(as.data.frame(anova(Ply_LMERmod_0930))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210930_figs_tables/20210930_PLY_CR_LME_Table.png", zoom = 1.5)
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210930_figs_tables/20210930_PLY_CR_LME_Diagnostics.pdf"))
check_model(Ply_LMERmod_0930) # print the model diagnostics
kable(as.data.frame(anova(Ply_LMERmod_0930))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210930_figs_tables/20210930_PLY_CR_LME_Table.png", zoom = 1.5)
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210930_figs_tables/20210930_PLY_CR_LME_Diagnostics.pdf"))
check_model(Ply_LMERmod_0930) # print the model diagnostics
pander(anova(Ply_LMERmod_0930), style='rmarkdown') # anova table of lmer
pander(anova(Ply_LMERmod_0930), style='rmarkdown') # anova table of lmer
# chaet - Linear Mixed Effects Model
Chaet_LMEmod_0930 <-lme(CR_mL.hr.mmlength ~ pH * Fed_Unfed, random=~1|random_fact, data=Chaet_FR_930_df) #nlme
shapiro.test(resid(Chaet_LMEmod_0930)) # 0.1672
pander(anova(Chaet_LMEmod_0930), style='rmarkdown') # anova table of lmer
# |      &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:----------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)**  |   1   |  52   |  44.02  | 1.893e-08 |
# |      **pH**      |   1   |  12   | 0.06041 |   0.81    |
# |  **Fed_Unfed**   |   1   |  12   |  6.973  |  0.02155  | *
# | **pH:Fed_Unfed** |   1   |  12   | 0.01714 |   0.898   |
Chaet_LMERmod_0930 <- lmer(CR_mL.hr.mmlength ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_930_df, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_0930) ~ Chaet_FR_930_df$pH) # 0.1234
shapiro.test(resid(Chaet_LMERmod_0930)) # 0.1672
summary(Chaet_LMERmod_0930) # random factor accounts fo 0 percent of the variance
hist(resid(Chaet_LMERmod_0930))
Chaet_LMERmod_0930_TRANSFORMED <- lmer(sqrt(CR_mL.hr.mmlength) ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_930_df, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_0930_TRANSFORMED) ~ Chaet_FR_930_df$pH) # 0.5066
shapiro.test(resid(Chaet_LMERmod_0930)) # 3.877e-10 - NON NORMAL
shapiro.test(resid(Chaet_LMERmod_0930_TRANSFORMED)) # 3.877e-10 - NON NORMAL
summary(Chaet_LMERmod_0930_TRANSFORMED) # random factor accounts fo 0 percent of the variance
hist(resid(Chaet_LMERmod_0930_TRANSFORMED)) # left skew
Chaet_LMERmod_0930_TRANSFORMED <- lmer(log(CR_mL.hr.mmlength) ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_930_df, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_0930_TRANSFORMED) ~ Chaet_FR_930_df$pH) # 0.3957
shapiro.test(resid(Chaet_LMERmod_0930_TRANSFORMED)) # 3.877e-10 - NON NORMAL
summary(Chaet_LMERmod_0930_TRANSFORMED) # random factor accounts fo 0 percent of the variance
pander(anova(Chaet_LMERmod_0930), style='rmarkdown') # anova table of lmer
# Chaet - two-way anova
Chaet_ANOVAmod_0930 <-aov(CR_mL.hr.mmlength ~ pH * Fed_Unfed, data=Chaet_FR_930_df)
leveneTest(Chaet_ANOVAmod_0930) # 0.1234
shapiro.test(resid(Ply_ANOVAmod_0930)) # 0.1025
hist(resid(Chaet_ANOVAmod_0930))
shapiro.test(resid(Chaet_ANOVAmod_0930)) # 0.008883
Chaet_ANOVAmod_0930_TRANSFORMED <-aov(log(CR_mL.hr.mmlength) ~ pH * Fed_Unfed, data=Chaet_FR_930_df)
leveneTest(Chaet_ANOVAmod_0930_TRANSFORMED) # 0.06993
shapiro.test(resid(Chaet_ANOVAmod_0930_TRANSFORMED)) # 3.877e-10
summary(Chaet_ANOVAmod_0930_TRANSFORMED)
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Chaet_ANOVAmod_0930, Chaet_LMERmod_0930) # the one way anova is the better fit model
kable(as.data.frame(anova(Chaet_ANOVAmod_0930))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210930_figs_tables/20210930_CHAET_CR_OneWayANOVA_Table.png", zoom = 1.5)
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210930_figs_tables/20210930_CHAET_CR_OneWayANOVA_Diagnostics.pdf"))
check_model(Chaet_ANOVAmod_0930) # print the model diagnostics
dev.off()
# Seston - Linear Mixed Effects Model
Seston_LMEmod_0930 <-lme(CR_mL.hr.mmlength ~ pH * Fed_Unfed, random=~1|random_fact, data=Seston_FR_930_df) #nlme
shapiro.test(resid(Seston_LMEmod_0930)) # 0.6937
pander(anova(Seston_LMEmod_0930), style='rmarkdown') # anova table of lmer
# |      &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:----------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)**  |   1   |  34   |  33.37  | 1.682e-06 |
# |      **pH**      |   1   |  12   | 0.05125 |  0.8247   |
# |  **Fed_Unfed**   |   1   |  12   | 0.3996  |  0.5391   |
# | **pH:Fed_Unfed** |   1   |  12   |  1.247  |   0.286   |
Seston_LMERmod_0930 <- lmer(CR_mL.hr.mmlength ~ pH * Fed_Unfed + (1|random_fact), data=Seston_FR_930_df, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Seston_LMERmod_0930) ~ Seston_FR_930_df$pH) # 0.1319
shapiro.test(resid(Seston_LMERmod_0930)) # 0.797
hist(resid(Seston_LMERmod_0930))
Seston_LMERmod_0930_TRANSFORMED <- lmer(log(CR_mL.hr.mmlength) ~ pH * Fed_Unfed + (1|random_fact), data=Seston_FR_930_df, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Seston_LMERmod_0930_TRANSFORMED) ~ Seston_FR_930_df$pH) # 0.3292
shapiro.test(resid(Seston_LMERmod_0930_TRANSFORMED)) # 3.709e-07 - NON NORMAL
summary(Seston_LMERmod_0930_TRANSFORMED) # view for the portion of random effecting the variance
(0.002531   /(0.002531   + 1.128288   ) )* 100 # random factor accounts fo 3.825313 percent of the variance
pander(anova(Seston_LMERmod_0930_TRANSFORMED), style='rmarkdown') # anova table of lmer
# Seston - one-way anova
Seston_ANOVAmod_0930 <-aov(CR_mL.hr.mmlength ~ pH * Fed_Unfed, data=Seston_FR_930_df)
leveneTest(Seston_ANOVAmod_0930) # 0.1058
shapiro.test(resid(Seston_ANOVAmod_0930)) # 0.8013
Seston_ANOVAmod_0930_TRANSFORMED <-aov(log(CR_mL.hr.mmlength) ~ pH * Fed_Unfed, data=Seston_FR_930_df)
leveneTest(Seston_ANOVAmod_0930_TRANSFORMED) # 0.7281
shapiro.test(resid(Seston_ANOVAmod_0930_TRANSFORMED)) # 3.709e-07
summary(Seston_ANOVAmod_0930_TRANSFORMED)
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Seston_ANOVAmod_0930, Seston_LMERmod_0930) # the one way anova is the better fit model
kable(as.data.frame(anova(Seston_ANOVAmod_0930))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210930_figs_tables/20210930_SESTON_CR_OneWayANOVA_Table.png", zoom = 1.5)
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210930_figs_tables/20210930_SESTON_CR_OneWayANOVA_Diagnostics.pdf"))
check_model(Seston_ANOVAmod_0930) # print the model diagnostics
dev.off()
Master_930_plotting         <- rbind(Chaet_FR_930_df, Ply_FR_930_df, Seston_FR_930_df)
Master_930_plotting$pHxfood <- paste(Master_930_plotting$pH, Master_930_plotting$Fed_Unfed, sep = '_')
CR_930_boxplot <- Master_930_plotting %>%
ggplot(aes(pHxfood , CR_mL.hr.mmlength , fill = pHxfood)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pHxfood)) +
scale_fill_manual(values=c("grey50","grey50","white","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Clearance rate, F1 Scallops 20210930") +
facet_wrap(~type)
CR_930_boxplot
# Data
Ply_FR_1026_df      <- ClearancRates_calc %>%
filter(Date %in% '20211026') %>%
filter(Ply_mL.hr.mmlength > 0) %>%
mutate(type = 'ply') %>%
dplyr::rename(CR_mL.hr.mmlength = Ply_mL.hr.mmlength) %>%
dplyr::select(!c('Chaet_mL.hr.mmlength','Seston_mL.hr.mmlength'))
Chaet_FR_1026_df    <- ClearancRates_calc %>%
filter(Date %in% '20211026') %>%
filter(Chaet_mL.hr.mmlength > 0) %>%
mutate(type = 'chaet') %>%
dplyr::rename(CR_mL.hr.mmlength = Chaet_mL.hr.mmlength) %>%
dplyr::select(!c('Ply_mL.hr.mmlength','Seston_mL.hr.mmlength'))
Seston_FR_1026_df   <- ClearancRates_calc %>%
filter(Date %in% '20211026') %>%
filter(Seston_mL.hr.mmlength > 0) %>%
mutate(type = 'seston') %>%
dplyr::rename(CR_mL.hr.mmlength = Seston_mL.hr.mmlength) %>%
dplyr::select(!c('Chaet_mL.hr.mmlength','Ply_mL.hr.mmlength'))
# Data
Ply_FR_1026_df      <- ClearancRates_calc %>%
filter(Date %in% '20211026') %>%
filter(Ply_mL.hr.mmlength > 0) %>%
mutate(type = 'ply') %>%
dplyr::rename(CR_mL.hr.mmlength = Ply_mL.hr.mmlength) %>%
dplyr::select(!c('Chaet_mL.hr.mmlength','Seston_mL.hr.mmlength'))%>%
dplyr::mutate(pH = as.factor(pH))
Chaet_FR_1026_df    <- ClearancRates_calc %>%
filter(Date %in% '20211026') %>%
filter(Chaet_mL.hr.mmlength > 0) %>%
mutate(type = 'chaet') %>%
dplyr::rename(CR_mL.hr.mmlength = Chaet_mL.hr.mmlength) %>%
dplyr::select(!c('Ply_mL.hr.mmlength','Seston_mL.hr.mmlength'))%>%
dplyr::mutate(pH = as.factor(pH))
Seston_FR_1026_df   <- ClearancRates_calc %>%
filter(Date %in% '20211026') %>%
filter(Seston_mL.hr.mmlength > 0) %>%
mutate(type = 'seston') %>%
dplyr::rename(CR_mL.hr.mmlength = Seston_mL.hr.mmlength) %>%
dplyr::select(!c('Chaet_mL.hr.mmlength','Ply_mL.hr.mmlength'))%>%
dplyr::mutate(pH = as.factor(pH))
# Ply - Linear Mixed Effects Model
Ply_LMEmod_1026 <-lme(CR_mL.hr.mmlength ~ pH * Fed_Unfed, random=~1|random_fact, data=Ply_FR_930_df) #nlme
shapiro.test(resid(Ply_LMEmod_1026)) # 0.407
pander(anova(Ply_LMEmod_1026), style='rmarkdown') # anova table of lmer
# Ply - Linear Mixed Effects Model
Ply_LMEmod_1026 <-lme(CR_mL.hr.mmlength ~ pH * Fed_Unfed, random=~1|random_fact, data=Ply_FR_1026_df) #nlme
shapiro.test(resid(Ply_LMEmod_1026)) # 0.407
pander(anova(Ply_LMEmod_1026), style='rmarkdown') # anova table of lmer
# |      &nbsp;      | numDF | denDF | F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:--------:|:---------:|
# | **(Intercept)**  |   1   |  15   |  36.13   | 2.384e-05 |
# |      **pH**      |   1   |  12   | 4.12e-07 |  0.9995   |
# |  **Fed_Unfed**   |   1   |  12   |  19.18   | 0.0008971 |
# | **pH:Fed_Unfed** |   1   |  12   | 0.02747  |  0.8711   |
Ply_LMERmod_1026 <- lmer(CR_mL.hr.mmlength ~ pH * Fed_Unfed + (1|random_fact), data=Ply_FR_1026_df, REML = FALSE) # lme4 (can run leenes test with this package output)
leveneTest(residuals(Ply_LMERmod_1026) ~ Ply_FR_1026_df$pH) # 0.2448
shapiro.test(resid(Ply_LMERmod_1026)) # 0.2007
summary(Ply_LMERmod_1026) # view for the portion of random effecting the variance
pander(anova(Ply_LMERmod_1026), style='rmarkdown') # anova table of lmer
# Ply - two-way anova
Ply_ANOVAmod_1026 <-aov(CR_mL.hr.mmlength ~ pH * Fed_Unfed, data=Ply_FR_1026_df)
leveneTest(Ply_ANOVAmod_1026) # 0.6025
shapiro.test(resid(Ply_ANOVAmod_1026)) # 0.008883  NON MORMAL
hist(resid(Ply_ANOVAmod_1026)) # left skew
Ply_ANOVAmod_1026_TRANSFORMED <-aov(sqrt(CR_mL.hr.mmlength) ~ pH * Fed_Unfed, data=Ply_FR_1026_df)
leveneTest(Ply_ANOVAmod_1026_TRANSFORMED) # 0.544
Ply_ANOVAmod_1026_TRANSFORMED <-aov(log(CR_mL.hr.mmlength) ~ pH * Fed_Unfed, data=Ply_FR_1026_df)
leveneTest(Ply_ANOVAmod_1026_TRANSFORMED) # 0.544
shapiro.test(resid(Ply_ANOVAmod_1026_TRANSFORMED)) # 0.5117
summary(Ply_ANOVAmod_1026_TRANSFORMED)
leveneTest(residuals(Ply_LMERmod_1026) ~ Ply_FR_1026_df$pH) # 0.05927
shapiro.test(resid(Ply_LMERmod_1026)) # 0.06153
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Ply_ANOVAmod_1026, Ply_LMERmod_1026) # the LME model is 1 point lower  in explaining the variance
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Chaet_ANOVAmod_0930_TRANSFORMED, Chaet_LMERmod_0930) # the one way anova is the better fit model - NOTE: meet with team regarding this, may want to report the LME since values are so close
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Seston_ANOVAmod_0930_TRANSFORMED, Seston_LMERmod_0930) # the one way anova is the better fit model
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Ply_ANOVAmod_0930_TRANSFORMED, Ply_LMERmod_0930) # the LME model is 1 point lower  in explaining the variance
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Chaet_ANOVAmod_0930_TRANSFORMED, Chaet_LMERmod_0930) # the one way anova is the better fit model - NOTE: meet with team regarding this, may want to report the LME since values are so close
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Ply_ANOVAmod_0930_TRANSFORMED, Ply_LMERmod_0930) # the LME model is 1 point lower  in explaining the variance
kable(as.data.frame(anova(Ply_ANOVAmod_0930_TRANSFORMED))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210930_figs_tables/20210930_PLY_CR_OneWayANOVA_Table.png", zoom = 1.5)
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/ClearanceRates/20210930_figs_tables/20210930_PLY_CR_OneWayANOVA_Diagnostics.pdf"))
check_model(Ply_
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Ply_ANOVAmod_1026, Ply_LMERmod_1026) # the LME model is 1 point lower  in explaining the variance
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Ply_ANOVAmod_1026, Ply_LMERmod_1026) # the LME model is 1 point lower  in explaining the variance
# AIC - determine the use of the random factor in the linear mixed effects model
AIC(Ply_ANOVAmod_1026_TRANSFORMED, Ply_LMERmod_1026) # the LME model is 1 point lower  in explaining the variance
t
t
# chaet - Linear Mixed Effects Model
Chaet_LMEmod_1026 <-lme(CR_mL.hr.mmlength ~ pH * Fed_Unfed, random=~1|random_fact, data=Chaet_FR_1026_df) #nlme
shapiro.test(resid(Chaet_LMEmod_1026)) #3.877e-10
pander(anova(Chaet_LMEmod_1026), style='rmarkdown') # anova table of lmer
# |      &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:----------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)**  |   1   |  14   |  45.77  | 9.091e-06 |
# |      **pH**      |   1   |  10   | 0.2495  |  0.6282   |
# |  **Fed_Unfed**   |   1   |  10   |  17.84  | 0.001763  |
# | **pH:Fed_Unfed** |   1   |  10   | 0.5351  |  0.4813   |
Chaet_LMERmod_1026 <- lmer(CR_mL.hr.mmlength ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_1026_df, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_1026) ~ Chaet_FR_1026_df$pH) # 0.5066
shapiro.test(resid(Chaet_LMERmod_1026)) # 3.877e-10 - NON NORMAL
hist(resid(Chaet_LMERmod_1026)) # positive skew
Chaet_ANOVAmod_1026_TRANSFORMED <-aov(log(CR_mL.hr.mmlength) ~ pH * Fed_Unfed, data=Chaet_FR_1026_df)
leveneTest(Chaet_ANOVAmod_1026_TRANSFORMED) # 0.05982
shapiro.test(resid(Chaet_ANOVAmod_1026_TRANSFORMED)) # 0.1789
Chaet_ANOVAmod_1026_TRANSFORMED <-aov(sqrt(CR_mL.hr.mmlength) ~ pH * Fed_Unfed, data=Chaet_FR_1026_df)
leveneTest(Chaet_ANOVAmod_1026_TRANSFORMED) # 0.3323
shapiro.test(resid(Chaet_ANOVAmod_1026_TRANSFORMED)) # 0.0003287
summary(Chaet_ANOVAmod_1026_TRANSFORMED)
Chaet_LMERmod_1026_TRANSFORMED <- lmer(log(CR_mL.hr.mmlength) ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_1026_df, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_1026_TRANSFORMED) ~ Chaet_FR_1026_df$pH) # 0.1524
shapiro.test(resid(Chaet_LMERmod_1026_TRANSFORMED)) # 0.1789
Chaet_LMERmod_1026_TRANSFORMED <- lmer(sqrt(CR_mL.hr.mmlength) ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_1026_df, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_1026_TRANSFORMED) ~ Chaet_FR_1026_df$pH) # 0.1069
shapiro.test(resid(Chaet_LMERmod_1026_TRANSFORMED)) # 0.0003287
Master_1026_plotting         <- rbind(Chaet_FR_1026_df, Ply_FR_1026_df, Seston_FR_1026_df)
Master_1026_plotting$pHxfood <- paste(Master_1026_plotting$pH, Master_1026_plotting$Fed_Unfed, sep = '_')
CR_1026_boxplot <- Master_1026_plotting %>%
ggplot(aes(pHxfood , CR_mL.hr.mmlength , fill = pHxfood)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pHxfood)) +
scale_fill_manual(values=c("grey50","grey50","white","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Clearance rate, F1 Scallops 20211026") +
facet_wrap(~type)
CR_1026_boxplot
# perhaps an outlier> there is a value over twice greater than the second highest
max(Chaet_FR_1026_df)
# perhaps an outlier> there is a value over twice greater than the second highest
max(Chaet_FR_1026_df$CR_mL.hr.mmlength)
Chaet_FR_1026_df_OM <- Chaet_FR_1026_df %>% dplyr::filter(CR_mL.hr.mmlength < (47.66838 - 0.001))
Chaet_LMERmod_1026_OM <- lmer(CR_mL.hr.mmlength ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_1026_df_OM, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_1026_OM) ~ Chaet_FR_1026_df_OM$pH) # 0.1017
shapiro.test(resid(Chaet_LMERmod_1026_OM)) # 9.188e-05 - NON NORMAL
Chaet_LMERmod_1026_OM <- lmer(log(CR_mL.hr.mmlength) ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_1026_df_OM, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_1026_OM) ~ Chaet_FR_1026_df_OM$pH) # 0.1279
shapiro.test(resid(Chaet_LMERmod_1026_OM)) # 0.002004 - NON NORMAL
Chaet_LMERmod_1026_OM <- lmer(swrt(CR_mL.hr.mmlength) ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_1026_df_OM, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
Chaet_LMERmod_1026_OM <- lmer(sqrt(CR_mL.hr.mmlength) ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_1026_df_OM, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_1026_OM) ~ Chaet_FR_1026_df_OM$pH) # 0.1279
shapiro.test(resid(Chaet_LMERmod_1026_OM)) # 0.002004 - NON NORMAL
Chaet_FR_1026_df_OM
CR_1026_boxplot
qqnorm(resid(Chaet_LMERmod_1026_OM))
Chaet_FR_1026_df_OM <- Chaet_FR_1026_df %>% dplyr::filter(CR_mL.hr.mmlength < (47.66838 - 0.001)) %>% dplyr::filter(!CR_mL.hr.mmlength < (0.03))
Chaet_LMERmod_1026_OM <- lmer(sqrt(CR_mL.hr.mmlength) ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_1026_df_OM, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_1026_OM) ~ Chaet_FR_1026_df_OM$pH) # 0.1279
shapiro.test(resid(Chaet_LMERmod_1026_OM)) # 0.002004 - NON NORMAL
qqnorm(resid(Chaet_LMERmod_1026_OM))
Chaet_FR_1026_df_OM <- Chaet_FR_1026_df %>% dplyr::filter(CR_mL.hr.mmlength < (47.66838 - 0.001)) %>% dplyr::filter(!CR_mL.hr.mmlength < (1))
Chaet_LMERmod_1026_OM <- lmer(sqrt(CR_mL.hr.mmlength) ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_1026_df_OM, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_1026_OM) ~ Chaet_FR_1026_df_OM$pH) # 0.1279
shapiro.test(resid(Chaet_LMERmod_1026_OM)) # 0.002004 - NON NORMAL
Chaet_LMERmod_1026_OM <- lmer((CR_mL.hr.mmlength) ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_1026_df_OM, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_1026_OM) ~ Chaet_FR_1026_df_OM$pH) # 0.1279
shapiro.test(resid(Chaet_LMERmod_1026_OM)) # 0.002004 - NON NORMAL
qqnorm(resid(Chaet_LMERmod_1026_OM))
summary(Chaet_LMERmod_1026_TRANSFORMED) # random factor accounts fo 0 percent of the variance
pander(anova(Chaet_LMERmod_1026), style='rmarkdown') # anova table of lmer
leveneTest(residuals(Chaet_LMERmod_1026_OM) ~ Chaet_FR_1026_df_OM$pH) # 0.1279
# |      &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:----------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)**  |   1   |  14   |  45.77  | 9.091e-06 |
# |      **pH**      |   1   |  10   | 0.2495  |  0.6282   |
# |  **Fed_Unfed**   |   1   |  10   |  17.84  | 0.001763  |
# | **pH:Fed_Unfed** |   1   |  10   | 0.5351  |  0.4813   |
Chaet_LMERmod_1026 <- lmer(CR_mL.hr.mmlength ~ pH * Fed_Unfed + (1|random_fact), data=Chaet_FR_1026_df, REML = FALSE) # lme4 (can run leenes test with this package output), TRUE when NOT addressing AIC for model selection
leveneTest(residuals(Chaet_LMERmod_1026) ~ Chaet_FR_1026_df$pH) # 0.1017
shapiro.test(resid(Chaet_LMERmod_1026)) # 9.188e-05 - NON NORMAL
hist(resid(Chaet_LMERmod_1026)) # positive skew
summary(Chaet_LMERmod_1026)
# Chaet - two-way anova
Chaet_ANOVAmod_1026 <-aov(CR_mL.hr.mmlength ~ pH * Fed_Unfed, data=Chaet_FR_1026_df)
leveneTest(Chaet_ANOVAmod_1026) # 0.06993
shapiro.test(resid(Chaet_ANOVAmod_1026)) # 3.877e-10
hist(resid(Chaet_ANOVAmod_1026)) # positive skew
Chaet_ANOVAmod_1026_TRANSFORMED <-aov(sqrt(CR_mL.hr.mmlength) ~ pH * Fed_Unfed, data=Chaet_FR_1026_df)
leveneTest(Chaet_ANOVAmod_1026_TRANSFORMED) # 0.3323
shapiro.test(resid(Chaet_ANOVAmod_1026_TRANSFORMED)) # 0.0003287
summary(Chaet_ANOVAmod_1026_TRANSFORMED)
Master_1026_plotting         <- rbind(Chaet_FR_1026_df, Ply_FR_1026_df, Seston_FR_1026_df)
Master_1026_plotting$pHxfood <- paste(Master_1026_plotting$pH, Master_1026_plotting$Fed_Unfed, sep = '_')
CR_1026_boxplot <- Master_1026_plotting %>%
ggplot(aes(pHxfood , CR_mL.hr.mmlength , fill = pHxfood)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pHxfood)) +
scale_fill_manual(values=c("grey50","grey50","white","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Clearance rate, F1 Scallops 20211026") +
facet_wrap(~type)
CR_1026_boxplot
>>>>>>> a36aed445fc47039e4c15de27b1db62f623dccdf
