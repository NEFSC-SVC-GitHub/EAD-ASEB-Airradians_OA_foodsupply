Cend_Seston          <- (min(c(dat[t_end_min1,]$Low_chlorophyll_cell.ml, dat[t_end,]$Low_chlorophyll_cell.ml)))
t0_Seston            <- dat$time[dat$Low_chlorophyll_cell.ml==C0_Seston]
t_Seston             <- max((dat$time[dat$Low_chlorophyll_cell.ml==Cend_Seston]) - t0_Seston) # call max becasue (although unlikely) there can be a case of the same count - calling multiple values
ClearanceRate.Seston <- (V * ((ln( C0_Seston / Cend_Seston )/(t_Seston/60)) - A.Seston)) / (dat$Length_um[1] / 1000) # seston cells mL-1  hr-1 mm shell length-1
dat2 <- dat[1,] %>%
dplyr::select(c('Date','pH', 'Replicate', 'Fed_Unfed','Run', 'Plate', 'Number', 'Length_um')) %>%
mutate(Chaet_mL.hr.mmlength = ClearanceRate.Chaet) %>%
mutate(Ply_mL.hr.mmlength = ClearanceRate.Ply) %>%
mutate(Seston_mL.hr.mmlength = ClearanceRate.Seston)
if (nrow(dat2) > 0) {
FeedRate.table           <- data.frame(matrix(nrow = nrow(dat2), ncol = 12)) # create dataframe to save cumunalitively during for loop
colnames(FeedRate.table) <- c('Date', 'ID', 'pH', 'Replicate', 'Fed_Unfed','Run', 'Plate', 'Number', 'Length_um', 'Chaet_mL.hr.mmlength', 'Ply_mL.hr.mmlength', 'Seston_mL.hr.mmlength')
FeedRate.table$Date                       <- dat2$Date
FeedRate.table$ID                         <- loop_914[i,]
FeedRate.table$pH                         <- gsub("_.*", "\\1", FeedRate.table$ID)
FeedRate.table$Replicate                  <- gsub("^(?:[^_]+_){4}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Fed_Unfed                  <- dat2$Fed_Unfed
FeedRate.table$Run                        <- gsub("^(?:[^_]+_){2}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Plate                      <- dat2$Plate
FeedRate.table$Number                     <- gsub("^(?:[^_]+_){6}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Length_um                  <- dat2$Length_um
FeedRate.table$Chaet_mL.hr.mmlength       <- dat2$Chaet_mL.hr.mmlength
FeedRate.table$Ply_mL.hr.mmlength         <- dat2$Ply_mL.hr.mmlength
FeedRate.table$Seston_mL.hr.mmlength      <- dat2$Seston_mL.hr.mmlength
df       <- data.frame(FeedRate.table) # name dataframe for this single row
df_total.914 <- rbind(df_total.914,df) #bind to a cumulative list dataframe
#print(df_total.914) # print to monitor progress
} else {}
}
df_total.914 <- df_total.914  %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm")) %>%
dplyr::mutate(random_fact = as.factor(paste(Replicate, pH, sep = '_')))
Ply_CR_914_Means <- df_total.914 %>%
dplyr::group_by(pCO2) %>%
dplyr::filter(Ply_mL.hr.mmlength > 0) %>% # ommit negative values
dplyr::summarise(
Ply_meanCR = mean(Ply_mL.hr.mmlength),
Ply_sdCR   = sd(Ply_mL.hr.mmlength),
Ply_seCR   = sd(Ply_mL.hr.mmlength) / sqrt(length(Ply_mL.hr.mmlength)),
n = n())
Chaet_CR_914_Means <- df_total.914 %>%
dplyr::group_by(pCO2) %>%
dplyr::filter(Chaet_mL.hr.mmlength > 0) %>% # ommit negative values
dplyr::summarise(
Ply_meanCR = mean(Chaet_mL.hr.mmlength),
Ply_sdCR   = sd(Chaet_mL.hr.mmlength),
Ply_seCR   = sd(Chaet_mL.hr.mmlength) / sqrt(length(Chaet_mL.hr.mmlength)),
n = n())
Seston_CR_914_Means <- df_total.914 %>%
dplyr::group_by(pCO2) %>%
dplyr::filter(Seston_mL.hr.mmlength > 0) %>% # ommit negative values
dplyr::summarise(
Ply_meanCR = mean(Seston_mL.hr.mmlength),
Ply_sdCR   = sd(Seston_mL.hr.mmlength),
Ply_seCR   = sd(Seston_mL.hr.mmlength) / sqrt(length(Seston_mL.hr.mmlength)),
n = n())
print(Seston_CR_914_Means)
# Data
Ply_FR_914_df      <- df_total.914 %>% filter(Ply_mL.hr.mmlength > 0) %>% mutate(type = 'ply') %>%
dplyr::rename(CR_mL.hr.mmlength = Ply_mL.hr.mmlength) %>% dplyr::select(!c('Chaet_mL.hr.mmlength','Seston_mL.hr.mmlength'))
Chaet_FR_914_df    <- df_total.914 %>% filter(Chaet_mL.hr.mmlength > 0) %>% mutate(type = 'chaet') %>%
dplyr::rename(CR_mL.hr.mmlength = Chaet_mL.hr.mmlength) %>% dplyr::select(!c('Ply_mL.hr.mmlength','Seston_mL.hr.mmlength'))
Seston_FR_914_df   <- df_total.914 %>% filter(Seston_mL.hr.mmlength > 0) %>% mutate(type = 'seston') %>%
dplyr::rename(CR_mL.hr.mmlength = Seston_mL.hr.mmlength) %>% dplyr::select(!c('Chaet_mL.hr.mmlength','Ply_mL.hr.mmlength'))
# library
require(nlme)
# Ply - Linear Mixed Effects Model
Ply_LMEmod_0914 <-lme(CR_mL.hr.mmlength ~ pH, random=~1|random_fact, data=Ply_FR_914_df)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |   8   |  61.6   | 5.011e-05 |
# |     **pH**      |   1   |   6   | 0.1432  |  0.7181   |
pander(anova(Ply_LMEmod_0914), style='rmarkdown') # anova table of lmer
# Chaet - Linear Mixed Effects Model
Chaet_LMEmod_0914 <-lme(CR_mL.hr.mmlength ~ pH, random=~1|random_fact, data=Chaet_FR_914_df)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  64.57  | 8.153e-07 |
# |     **pH**      |   1   |   6   |  4.102  |  0.08924  |
pander(anova(Chaet_LMEmod_0914), style='rmarkdown') # anova table of lmer
# Seston - Linear Mixed Effects Model
Seston_LMEmod_0914 <-lme(CR_mL.hr.mmlength ~ pH, random=~1|random_fact, data=Seston_FR_914_df)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  48.89  | 4.339e-06 |
# |     **pH**      |   1   |   6   |  1.496  |  0.2672   |
pander(anova(Seston_LMEmod_0914), style='rmarkdown') # anova table of lmer
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Clearance Rate for loop     ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
V = 25 # V == Volume of the vessel (in mL as 25 ml)
df_total.930<- data.frame() # start dataframe
for (i in 1:nrow(loop_930)) {
dat <- ClearanceRate_Master.930 %>%
dplyr::filter(uniq_Identifier == loop_930[i,]) %>%
dplyr::mutate(Date_pH = paste(Date, pH, sep = '_')) %>%
dplyr::arrange(time)
t_end      <- nrow(dat)
t_end_min1 <- nrow(dat) - 1
blanks <- meanBLANKS.Summary %>% dplyr::filter(Date_pH %in% dat$Date_pH[1])
# ply
A.ply               <- blanks$meanBlank[blanks$Type == 'Ply']
C0_Ply              <- if ( (max(c(dat[1,]$PLY_cell.ml, dat[2,]$PLY_cell.ml))) < (1.25*  (min(c(dat[1,]$PLY_cell.ml, dat[2,]$PLY_cell.ml)))) )  {
C0_Ply <-  (max(c(dat[1,]$PLY_cell.ml, dat[2,]$PLY_cell.ml)))
} else (C0_Ply <-  (min(c(dat[1,]$PLY_cell.ml, dat[2,]$PLY_cell.ml)))) # C0 for the ply
Cend_Ply            <- (min(c(dat[t_end_min1,]$PLY_cell.ml, dat[t_end,]$PLY_cell.ml)))
t0_Ply              <- dat$time[dat$PLY_cell.ml==C0_Ply]
t_Ply               <- max((dat$time[dat$PLY_cell.ml==Cend_Ply]) - t0_Ply) # call max becasue (although unlikely) there can be a case of the same count - calling multiple values
ClearanceRate.Ply   <- (V * ((ln( C0_Ply / Cend_Ply )/(t_Ply/60)) - A.ply)) / (dat$Length_um[1] / 1000) # Tetraselmis cells mL-1  hr-1 mm shell length-1
# chaet
A.chaet             <- blanks$meanBlank[blanks$Type == 'Chaet']
C0_Chaet            <- if ( (max(c(dat[1,]$Chaet_cell.ml, dat[2,]$Chaet_cell.ml))) < (1.25*  (min(c(dat[1,]$Chaet_cell.ml, dat[2,]$Chaet_cell.ml)))) )  {
C0_Chaet <-  (max(c(dat[1,]$Chaet_cell.ml, dat[2,]$Chaet_cell.ml)))
} else (C0_Chaet <-  (min(c(dat[1,]$Chaet_cell.ml, dat[2,]$Chaet_cell.ml)))) # C0 for the ply
Cend_Chaet          <- (min(c(dat[t_end_min1,]$Chaet_cell.ml, dat[t_end,]$Chaet_cell.ml)))
t0_Chaet            <- dat$time[dat$Chaet_cell.ml==C0_Chaet]
t_Chaet             <- max((dat$time[dat$Chaet_cell.ml==Cend_Chaet]) - t0_Chaet) # call max becasue (although unlikely) there can be a case of the same count - calling multiple values
ClearanceRate.Chaet <- (V * ((ln( C0_Chaet / Cend_Chaet )/(t_Chaet/60)) - A.chaet)) / (dat$Length_um[1] / 1000) # Chaetoceros cells mL-1  hr-1 mm shell length-1
# low chl a (seston)
A.Seston             <- blanks$meanBlank[blanks$Type == 'Seston']
C0_Seston            <- if ( (max(c(dat[1,]$Low_chlorophyll_cell.ml, dat[2,]$Low_chlorophyll_cell.ml))) < (1.25*  (min(c(dat[1,]$Low_chlorophyll_cell.ml, dat[2,]$Low_chlorophyll_cell.ml)))) )  {
C0_Seston <-  (max(c(dat[1,]$Low_chlorophyll_cell.ml, dat[2,]$Low_chlorophyll_cell.ml)))
} else (C0_Seston <-  (min(c(dat[1,]$Low_chlorophyll_cell.ml, dat[2,]$Low_chlorophyll_cell.ml)))) # C0 for the ply
Cend_Seston          <- (min(c(dat[t_end_min1,]$Low_chlorophyll_cell.ml, dat[t_end,]$Low_chlorophyll_cell.ml)))
t0_Seston            <- dat$time[dat$Low_chlorophyll_cell.ml==C0_Seston]
t_Seston             <- max((dat$time[dat$Low_chlorophyll_cell.ml==Cend_Seston]) - t0_Seston) # call max becasue (although unlikely) there can be a case of the same count - calling multiple values
ClearanceRate.Seston <- (V * ((ln( C0_Seston / Cend_Seston )/(t_Seston/60)) - A.Seston)) / (dat$Length_um[1] / 1000) # seston cells mL-1  hr-1 mm shell length-1
dat2 <- dat[1,] %>%
dplyr::select(c('Date','pH', 'Replicate', 'Fed_Unfed','Run', 'Plate', 'Number', 'Length_um')) %>%
mutate(Chaet_mL.hr.mmlength = ClearanceRate.Chaet) %>%
mutate(Ply_mL.hr.mmlength = ClearanceRate.Ply) %>%
mutate(Seston_mL.hr.mmlength = ClearanceRate.Seston)
if (nrow(dat2) > 0) {
FeedRate.table           <- data.frame(matrix(nrow = nrow(dat2), ncol = 12)) # create dataframe to save cumunalitively during for loop
colnames(FeedRate.table) <- c('Date', 'ID', 'pH', 'Replicate', 'Fed_Unfed','Run', 'Plate', 'Number', 'Length_um', 'Chaet_mL.hr.mmlength', 'Ply_mL.hr.mmlength', 'Seston_mL.hr.mmlength')
FeedRate.table$Date                       <- dat2$Date
FeedRate.table$ID                         <- loop_930[i,]
FeedRate.table$pH                         <- gsub("_.*", "\\1", FeedRate.table$ID)
FeedRate.table$Replicate                  <- gsub("^(?:[^_]+_){5}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Fed_Unfed                  <- dat2$Fed_Unfed
FeedRate.table$Run                        <- gsub("^(?:[^_]+_){3}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Plate                      <- dat2$Plate
FeedRate.table$Number                     <- gsub("^(?:[^_]+_){7}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Length_um                  <- dat2$Length_um
FeedRate.table$Chaet_mL.hr.mmlength       <- dat2$Chaet_mL.hr.mmlength
FeedRate.table$Ply_mL.hr.mmlength         <- dat2$Ply_mL.hr.mmlength
FeedRate.table$Seston_mL.hr.mmlength      <- dat2$Seston_mL.hr.mmlength
df       <- data.frame(FeedRate.table) # name dataframe for this single row
df_total.930 <- rbind(df_total.930,df) #bind to a cumulative list dataframe
#print(df_total.930) # print to monitor progress
} else {}
}
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# clean & view means...       ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
df_total.930 <- df_total.930  %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm")) %>%
dplyr::mutate(random_fact = as.factor(paste(Replicate, pH, Fed_Unfed, sep = '_')))
Ply_CR_930_Means <- df_total.930 %>%
dplyr::group_by(pCO2, Fed_Unfed) %>%
dplyr::filter(Ply_mL.hr.mmlength > 0) %>% # ommit negative values
dplyr::summarise(
Ply_meanCR = mean(Ply_mL.hr.mmlength),
Ply_sdCR   = sd(Ply_mL.hr.mmlength),
Ply_seCR   = sd(Ply_mL.hr.mmlength) / sqrt(length(Ply_mL.hr.mmlength)),
n = n())
print(Ply_CR_930_Means)
Chaet_CR_930_Means <- df_total.930 %>%
dplyr::group_by(pCO2, Fed_Unfed) %>%
dplyr::filter(Chaet_mL.hr.mmlength > 0) %>% # ommit negative values
dplyr::summarise(
Chaet_meanCR = mean(Chaet_mL.hr.mmlength),
Chaet_sdCR   = sd(Chaet_mL.hr.mmlength),
Chaet_seCR   = sd(Chaet_mL.hr.mmlength) / sqrt(length(Chaet_mL.hr.mmlength)),
n = n())
print(Chaet_CR_930_Means)
Seston_CR_930_Means <- df_total.930 %>%
dplyr::group_by(pCO2, Fed_Unfed) %>%
dplyr::filter(Seston_mL.hr.mmlength > 0) %>% # ommit negative values
dplyr::summarise(
Seston_meanCR = mean(Seston_mL.hr.mmlength),
Seston_sdCR   = sd(Seston_mL.hr.mmlength),
Seston_seCR   = sd(Seston_mL.hr.mmlength) / sqrt(length(Seston_mL.hr.mmlength)),
n = n())
print(Seston_CR_930_Means)
# Data
Ply_FR_930_df      <- df_total.930 %>% filter(Ply_mL.hr.mmlength > 0) %>% mutate(type = 'ply') %>%
dplyr::rename(CR_mL.hr.mmlength = Ply_mL.hr.mmlength) %>% dplyr::select(!c('Chaet_mL.hr.mmlength','Seston_mL.hr.mmlength'))
Chaet_FR_930_df    <- df_total.930 %>% filter(Chaet_mL.hr.mmlength > 0) %>% mutate(type = 'chaet') %>%
dplyr::rename(CR_mL.hr.mmlength = Chaet_mL.hr.mmlength) %>% dplyr::select(!c('Ply_mL.hr.mmlength','Seston_mL.hr.mmlength'))
Seston_FR_930_df   <- df_total.930 %>% filter(Seston_mL.hr.mmlength > 0) %>% mutate(type = 'seston') %>%
dplyr::rename(CR_mL.hr.mmlength = Seston_mL.hr.mmlength) %>% dplyr::select(!c('Chaet_mL.hr.mmlength','Ply_mL.hr.mmlength'))
# library
require(nlme)
# Ply - Linear Mixed Effects Model
Ply_LMEmod_0930 <-lme(CR_mL.hr.mmlength ~ pH*Fed_Unfed, random=~1|random_fact, data=Ply_FR_930_df)
# |      &nbsp;      | numDF | denDF | F-value  | p-value  |
# |:----------------:|:-----:|:-----:|:--------:|:--------:|
# | **(Intercept)**  |   1   |  10   |  10.95   | 0.007887 |
# |      **pH**      |   1   |   6   | 0.004046 |  0.9513  |
# |  **Fed_Unfed**   |   1   |   6   |  1.365   |  0.287   |
# | **pH:Fed_Unfed** |   1   |   6   |  0.1011  |  0.7612  |
pander(anova(Ply_LMEmod_0930), style='rmarkdown') # anova table of lmer
# Chaet - Linear Mixed Effects Model
Chaet_LMEmod_0930 <-lme(CR_mL.hr.mmlength ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_930_df)
# |      &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:----------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)**  |   1   |  52   |  44.02  | 1.893e-08 |
# |      **pH**      |   1   |  12   | 0.06041 |   0.81    |
# |  **Fed_Unfed**   |   1   |  12   |  6.973  |  0.02155  | **
# | **pH:Fed_Unfed** |   1   |  12   | 0.01714 |   0.898   |
pander(anova(Chaet_LMEmod_0930), style='rmarkdown') # anova table of lmer
shapiro.test(resid(Chaet_LMEmod_0930)) # 3.877e-10 non-normal
qqnorm(resid(Chaet_LMEmod_0930)) # nonnonormal residuals
hist(resid(Chaet_LMEmod_0930)) # right skew - log should resolve normality
Chaet_LMEmod_0930_LOG <-lme( log(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_930_df)
pander(anova(Chaet_LMEmod_0930_LOG), style='rmarkdown') # anova table of lmer
# |      &nbsp;      | numDF | denDF | F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:--------:|:---------:|
# | **(Intercept)**  |   1   |  52   |  75.88   | 9.753e-12 |
# |      **pH**      |   1   |  12   |  0.5087  |  0.4894   |
# |  **Fed_Unfed**   |   1   |  12   |  7.169   |  0.02013  | # did not change the outcome of the LME!
# | **pH:Fed_Unfed** |   1   |  12   | 0.001205 |  0.9729   |
shapiro.test(resid(Chaet_LMEmod_0930_LOG)) # 0.1789 - now it is normal
hist(resid(Chaet_LMEmod_0930_LOG)) # normality resolved using log (no longer right skew)
leveneTest(Chaet_LMEmod_0930_LOG)
# Chaet - two-way anova
Chaet_ANOVAmod_0930 <-aov(CR_mL.hr.mmlength ~ pH*Fed_Unfed, data=Chaet_FR_930_df)
leveneTest(Chaet_ANOVAmod_0930) # 0.002288 **
shapiro.test(resid(Chaet_ANOVAmod_0930)) # 5.859e-15 - non-normal
hist(resid(Chaet_ANOVAmod_0930)) # right skew - appears like two outliers - tranform to resolve normality
Chaet_ANOVAmod_0930_TRANSFORMED <-aov((CR_mL.hr.mmlength)^3 ~ pH*Fed_Unfed, data=Chaet_FR_930_df) # sqrt transformaed
leveneTest(Chaet_ANOVAmod_0930_TRANSFORMED) # 0.1681
shapiro.test(resid(Chaet_ANOVAmod_0930_TRANSFORMED)) # < 2.2e-16 - non-normal
Chaet_ANOVAmod_0930_TRANSFORMED <-aov(log(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, data=Chaet_FR_930_df) # sqrt transformaed
leveneTest(Chaet_ANOVAmod_0930_TRANSFORMED) # 0.1681
shapiro.test(resid(Chaet_ANOVAmod_0930_TRANSFORMED)) # < 2.2e-16 - non-normal
summary(Chaet_ANOVAmod_0930_TRANSFORMED)
# Seston - Linear Mixed Effects Model
Seston_LMEmod_0930 <-lme(CR_mL.hr.mmlength ~ pH*Fed_Unfed, random=~1|random_fact, data=Seston_FR_930_df)
# |      &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:----------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)**  |   1   |  34   |  33.37  | 1.682e-06 |
# |      **pH**      |   1   |  12   | 0.05125 |  0.8247   |
# |  **Fed_Unfed**   |   1   |  12   | 0.3996  |  0.5391   |
# | **pH:Fed_Unfed** |   1   |  12   |  1.247  |   0.286   |
pander(anova(Seston_LMEmod_0930), style='rmarkdown') # anova table of lmer
shapiro.test(resid(Seston_LMEmod_0930)) # 2.236e-06 non-normal
qqnorm(resid(Seston_LMEmod_0930)) # nonnonormal residuals
hist(resid(Seston_LMEmod_0930)) #right skew - log should resolve normality
Seston_LMEmod_0930_LOG <-lme( log(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, random=~1|random_fact, data=Seston_FR_930_df)
pander(anova(Seston_LMEmod_0930_LOG), style='rmarkdown') # anova table of lmer
# |      &nbsp;      | numDF | denDF | F-value |  p-value  | # still no marginal  nor significant effects - normality did not change the statistical outcome of the model...
# |:----------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)**  |   1   |  34   |  23.41  | 2.784e-05 |
# |      **pH**      |   1   |  12   | 0.2759  |  0.6089   |
# |  **Fed_Unfed**   |   1   |  12   | 0.6224  |  0.4455   |
# | **pH:Fed_Unfed** |   1   |  12   |  2.677  |  0.1277   |
shapiro.test(resid(Seston_LMEmod_0930_LOG)) # 0.8217 normal with log transformation
qqnorm(resid(Seston_LMEmod_0930_LOG)) # normal residuals
hist(resid(Seston_LMEmod_0930_LOG)) # normality resolved
# Seston - two-way anova
Seston_ANOVAmod_0930 <-aov(CR_mL.hr.mmlength ~ pH*Fed_Unfed, data=Seston_FR_930_df)
leveneTest(Seston_ANOVAmod_0930) # 0.06993 .
shapiro.test(resid(Seston_ANOVAmod_0930)) # 3.877e-10 - non-normal
hist(resid(Seston_ANOVAmod_0930)) # right skew - appears like two outliers - tranform to resolve normality
Seston_ANOVAmod_0930_TRANSFORMED <-aov(log(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, data=Seston_FR_930_df) # sqrt transformaed
leveneTest(Seston_ANOVAmod_0930_TRANSFORMED) # 0.05982 .
shapiro.test(resid(Seston_ANOVAmod_0930_TRANSFORMED)) # 0.1789 - normal
summary(Seston_ANOVAmod_0930_TRANSFORMED)
Master_930_plotting         <- rbind(Chaet_FR_930_df, Ply_FR_930_df, Seston_FR_930_df)
Master_930_plotting$pHxfood <- paste(Master_930_plotting$pH, Master_930_plotting$Fed_Unfed, sep = '_')
CR_930_boxplot <- Master_930_plotting %>%
ggplot(aes(pHxfood , CR_mL.hr.mmlength , fill = pHxfood)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pHxfood)) +
scale_fill_manual(values=c("grey50","grey50","white","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Clearance rate, F1 Scallops 20210930") +
facet_wrap(~type)
CR_930_boxplot
V = 25 # V == Volume of the vessel (in mL as 25 ml)
df_total.1026<- data.frame() # start dataframe
for (i in 1:nrow(loop_1026)) {
dat <- ClearanceRate_Master.1026 %>%
dplyr::filter(uniq_Identifier == loop_1026[i,]) %>%
dplyr::mutate(Date_pH = paste(Date, pH, sep = '_')) %>%
dplyr::arrange(time)
t_end      <- nrow(dat)
t_end_min1 <- nrow(dat) - 2
blanks <- meanBLANKS.Summary %>% dplyr::filter(Date_pH %in% dat$Date_pH[1])
# ply
A.ply               <- blanks$meanBlank[blanks$Type == 'Ply']
C0_Ply              <- max(dat$PLY_cell.ml[c(1:2)])
Cend_Ply            <- min(dat$PLY_cell.ml[c(t_end_min1:t_end)])
t0_Ply              <- dat$time[dat$PLY_cell.ml==C0_Ply]
t_Ply               <- max(  (min(dat$time[dat$PLY_cell.ml==Cend_Ply])) - t0_Ply) # call max becasue (although unlikely) there can be a case of the same count - calling multiple values
if (Cend_Ply == 0) {
ClearanceRate.Ply <- (V * ((ln( C0_Ply / 0.0001 )/(t_Ply/60)) - A.ply)) / (dat$Length_um[1] / 1000) # Chaetoceros cells mL-1  hr-1 mm shell length-1
} else ( ClearanceRate.Ply <- (V * ((ln( C0_Ply / Cend_Ply )/(t_Ply/60)) - A.ply)) / (dat$Length_um[1] / 1000))
# chaet
A.chaet             <- blanks$meanBlank[blanks$Type == 'Chaet']
C0_Chaet            <- max(dat$Chaet_cell.ml[c(1:2)])
Cend_Chaet          <- min(dat$Chaet_cell.ml[c(t_end_min1:t_end)])
t0_Chaet            <- dat$time[dat$Chaet_cell.ml==C0_Chaet]
t_Chaet             <- max((dat$time[dat$Chaet_cell.ml==Cend_Chaet]) - t0_Chaet) # call max becasue (although unlikely) there can be a case of the same count - calling multiple values
if (Cend_Chaet == 0) {
ClearanceRate.Chaet <- (V * ((ln( C0_Chaet / 0.0001 )/(t_Chaet/60)) - A.chaet)) / (dat$Length_um[1] / 1000) # Chaetoceros cells mL-1  hr-1 mm shell length-1
} else ( ClearanceRate.Chaet <- (V * ((ln( C0_Chaet / Cend_Chaet )/(t_Chaet/60)) - A.chaet)) / (dat$Length_um[1] / 1000))
# low chl a (seston)
A.Seston             <- blanks$meanBlank[blanks$Type == 'Seston']
C0_Seston            <- max(dat$Low_chlorophyll_cell.ml[c(1:2)])
Cend_Seston          <- min(dat$Low_chlorophyll_cell.ml[c(t_end_min1:t_end)])
t0_Seston            <- dat$time[dat$Low_chlorophyll_cell.ml==C0_Seston]
t_Seston             <- max((dat$time[dat$Low_chlorophyll_cell.ml==Cend_Seston]) - t0_Seston) # call max becasue (although unlikely) there can be a case of the same count - calling multiple values
if (Cend_Seston == 0) {
ClearanceRate.Seston <- (V * ((ln( C0_Seston / 0.0001 )/(t_Seston/60)) - A.Seston)) / (dat$Length_um[1] / 1000) # Chaetoceros cells mL-1  hr-1 mm shell length-1
} else ( ClearanceRate.Seston <- (V * ((ln( C0_Seston / Cend_Seston )/(t_Seston/60)) - A.Seston)) / (dat$Length_um[1] / 1000))
dat2 <- dat[1,] %>%
dplyr::select(c('Date','pH', 'Replicate', 'Fed_Unfed','Run', 'Plate', 'Number', 'Length_um')) %>%
mutate(Chaet_mL.hr.mmlength = ClearanceRate.Chaet) %>%
mutate(Ply_mL.hr.mmlength = ClearanceRate.Ply) %>%
mutate(Seston_mL.hr.mmlength = ClearanceRate.Seston)
if (nrow(dat2) > 0) {
FeedRate.table           <- data.frame(matrix(nrow = nrow(dat2), ncol = 12)) # create dataframe to save cumunalitively during for loop
colnames(FeedRate.table) <- c('Date', 'ID', 'pH', 'Replicate', 'Fed_Unfed','Run', 'Plate', 'Number', 'Length_um', 'Chaet_mL.hr.mmlength', 'Ply_mL.hr.mmlength', 'Seston_mL.hr.mmlength')
FeedRate.table$Date                       <- dat2$Date
FeedRate.table$ID                         <- loop_1026[i,]
FeedRate.table$pH                         <- gsub("_.*", "\\1", FeedRate.table$ID)
FeedRate.table$Replicate                  <- gsub("^(?:[^_]+_){5}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Fed_Unfed                  <- dat2$Fed_Unfed
FeedRate.table$Run                        <- gsub("^(?:[^_]+_){3}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Plate                      <- dat2$Plate
FeedRate.table$Number                     <- gsub("^(?:[^_]+_){7}([^_]+).*", "\\1", FeedRate.table$ID)
FeedRate.table$Length_um                  <- dat2$Length_um
FeedRate.table$Chaet_mL.hr.mmlength       <- dat2$Chaet_mL.hr.mmlength
FeedRate.table$Ply_mL.hr.mmlength         <- dat2$Ply_mL.hr.mmlength
FeedRate.table$Seston_mL.hr.mmlength      <- dat2$Seston_mL.hr.mmlength
df       <- data.frame(FeedRate.table) # name dataframe for this single row
df_total.1026 <- rbind(df_total.1026,df) #bind to a cumulative list dataframe
#print(df_total.1026) # print to monitor progress
} else {}
}
df_total.1026 <- df_total.1026  %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm")) %>%
dplyr::mutate(random_fact = as.factor(paste(Replicate, pH, Fed_Unfed, sep = '_')))
Ply_CR_1026_Means <- df_total.1026 %>%
dplyr::group_by( Fed_Unfed) %>%
dplyr::filter(Ply_mL.hr.mmlength > 0) %>% # ommit negative values
dplyr::summarise(
Ply_meanCR = mean(Ply_mL.hr.mmlength),
Ply_sdCR   = sd(Ply_mL.hr.mmlength),
Ply_seCR   = sd(Ply_mL.hr.mmlength) / sqrt(length(Ply_mL.hr.mmlength)),
n = n())
Chaet_CR_1026_Means <- df_total.1026 %>%
dplyr::group_by(Fed_Unfed) %>%
dplyr::filter(Chaet_mL.hr.mmlength > 0) %>% # ommit negative values
dplyr::summarise(
Chaet_meanCR = mean(Chaet_mL.hr.mmlength),
Chaet_sdCR   = sd(Chaet_mL.hr.mmlength),
Chaet_seCR   = sd(Chaet_mL.hr.mmlength) / sqrt(length(Chaet_mL.hr.mmlength)),
n = n())
Seston_CR_1026_Means <- df_total.1026 %>%
dplyr::group_by(Fed_Unfed) %>%
dplyr::filter(Seston_mL.hr.mmlength > 0) %>% # ommit negative values
dplyr::summarise(
Seston_meanCR = mean(Seston_mL.hr.mmlength),
Seston_sdCR   = sd(Seston_mL.hr.mmlength),
Seston_seCR   = sd(Seston_mL.hr.mmlength) / sqrt(length(Seston_mL.hr.mmlength)),
n = n())
print(Seston_CR_1026_Means)
# Data
Ply_FR_1026_df      <- df_total.1026 %>% filter(Ply_mL.hr.mmlength > 0) %>% mutate(type = 'ply') %>%
dplyr::rename(CR_mL.hr.mmlength = Ply_mL.hr.mmlength) %>% dplyr::select(!c('Chaet_mL.hr.mmlength','Seston_mL.hr.mmlength'))
Chaet_FR_1026_df    <- df_total.1026 %>% filter(Chaet_mL.hr.mmlength > 0) %>% mutate(type = 'chaet') %>%
dplyr::rename(CR_mL.hr.mmlength = Chaet_mL.hr.mmlength) %>% dplyr::select(!c('Ply_mL.hr.mmlength','Seston_mL.hr.mmlength'))
Seston_FR_1026_df   <- df_total.1026 %>% filter(Seston_mL.hr.mmlength > 0) %>% mutate(type = 'seston') %>%
dplyr::rename(CR_mL.hr.mmlength = Seston_mL.hr.mmlength) %>% dplyr::select(!c('Chaet_mL.hr.mmlength','Ply_mL.hr.mmlength'))
# library
require(nlme)
# Ply - Linear Mixed Effects Model
Ply_LMEmod_1026 <-lme(CR_mL.hr.mmlength ~ pH*Fed_Unfed, random=~1|random_fact, data=Ply_FR_1026_df)
# |      &nbsp;      | numDF | denDF | F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:--------:|:---------:|
# | **(Intercept)**  |   1   |  15   |  36.13   | 2.384e-05 |
# |      **pH**      |   1   |  12   | 4.12e-07 |  0.9995   |
# |  **Fed_Unfed**   |   1   |  12   |  19.18   | 0.0008971 | ***
# | **pH:Fed_Unfed** |   1   |  12   | 0.02747  |  0.8711   |
pander(anova(Ply_LMEmod_1026), style='rmarkdown') # anova table of lmer
shapiro.test(resid(Ply_LMEmod_1026)) # 0.06153 normal!
# Chaet - Linear Mixed Effects Model
Chaet_LMEmod_1026 <-lme(CR_mL.hr.mmlength ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_1026_df)
# |      &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:----------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)**  |   1   |  14   |  45.77  | 9.091e-06 |
# |      **pH**      |   1   |  10   | 0.2495  |  0.6282   |
# |  **Fed_Unfed**   |   1   |  10   |  17.84  | 0.001763  | ***
# | **pH:Fed_Unfed** |   1   |  10   | 0.5351  |  0.4813   |
pander(anova(Chaet_LMEmod_1026), style='rmarkdown') # anova table of lmer
shapiro.test(resid(Chaet_LMEmod_1026)) # 9.188e-05 non-normal residuals
qqnorm(resid(Chaet_LMEmod_1026)) # s-dhaped or left skew
hist(resid(Chaet_LMEmod_1026)) #
Chaet_LMEmod_1026_LOG <-lme( log(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_1026_df)
pander(anova(Chaet_LMEmod_1026_LOG), style='rmarkdown') # anova table of lmer
# |      &nbsp;      | numDF | denDF |  F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:---------:|:---------:|
# | **(Intercept)**  |   1   |  14   |   114.1   | 4.102e-08 |
# |      **pH**      |   1   |  10   |  0.7543   |  0.4055   |
# |  **Fed_Unfed**   |   1   |  10   |   27.49   | 0.0003774 | *
# | **pH:Fed_Unfed** |   1   |  10   | 0.0007722 |  0.9784   |
shapiro.test(resid(Chaet_LMEmod_1026_LOG)) # 0.1789 - now it is normal
Chaet_LMEmod_1026_LOG <-lme( sqrt(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_1026_df)
# |      &nbsp;      | numDF | denDF |  F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:---------:|:---------:|
# | **(Intercept)**  |   1   |  14   |   114.1   | 4.102e-08 |
# |      **pH**      |   1   |  10   |  0.7543   |  0.4055   |
# |  **Fed_Unfed**   |   1   |  10   |   27.49   | 0.0003774 | *
# | **pH:Fed_Unfed** |   1   |  10   | 0.0007722 |  0.9784   |
shapiro.test(resid(Chaet_LMEmod_1026_LOG)) # 0.0003287 - now it is normal
Chaet_LMEmod_1026_LOG <-lme((CR_mL.hr.mmlength)^3 ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_1026_df)
# |      &nbsp;      | numDF | denDF |  F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:---------:|:---------:|
# | **(Intercept)**  |   1   |  14   |   114.1   | 4.102e-08 |
# |      **pH**      |   1   |  10   |  0.7543   |  0.4055   |
# |  **Fed_Unfed**   |   1   |  10   |   27.49   | 0.0003774 | *
# | **pH:Fed_Unfed** |   1   |  10   | 0.0007722 |  0.9784   |
shapiro.test(resid(Chaet_LMEmod_1026_LOG)) # 0.0003287 - now it is normal
Chaet_LMEmod_1026_LOG <-lme(sqrt(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_1026_df)
# |      &nbsp;      | numDF | denDF |  F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:---------:|:---------:|
# | **(Intercept)**  |   1   |  14   |   114.1   | 4.102e-08 |
# |      **pH**      |   1   |  10   |  0.7543   |  0.4055   |
# |  **Fed_Unfed**   |   1   |  10   |   27.49   | 0.0003774 | *
# | **pH:Fed_Unfed** |   1   |  10   | 0.0007722 |  0.9784   |
shapiro.test(resid(Chaet_LMEmod_1026_LOG)) # 0.0003287 - now it is normal
qqnorm(resid(Chaet_LMEmod_1026_LOG)) # normal
# |      &nbsp;      | numDF | denDF |  F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:---------:|:---------:|
# | **(Intercept)**  |   1   |  14   |   114.1   | 4.102e-08 |
# |      **pH**      |   1   |  10   |  0.7543   |  0.4055   |
# |  **Fed_Unfed**   |   1   |  10   |   27.49   | 0.0003774 | *
# | **pH:Fed_Unfed** |   1   |  10   | 0.0007722 |  0.9784   |
shapiro.test(resid(Chaet_LMEmod_1026_LOG)) # 0.0003287 - now it is normal
hist(resid(Chaet_LMEmod_1026_LOG)) # normality resolved using log (no longer right skew)
# Chaet - two-way anova
Chaet_ANOVAmod_1026 <-aov(CR_mL.hr.mmlength ~ pH*Fed_Unfed, data=Chaet_FR_1026_df)
leveneTest(Chaet_ANOVAmod_1026) # 0.06993 .
shapiro.test(resid(Chaet_ANOVAmod_1026)) # 3.877e-10 - non-normal
Chaet_ANOVAmod_1026_TRANSFORMED <-aov(log(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, data=Chaet_FR_1026_df) # sqrt transformaed
leveneTest(Chaet_ANOVAmod_1026_TRANSFORMED) # 0.05982 .
shapiro.test(resid(Chaet_ANOVAmod_1026_TRANSFORMED)) # 0.1789 - normal
Chaet_ANOVAmod_1026_TRANSFORMED <-aov(sqrt(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, data=Chaet_FR_1026_df) # sqrt transformaed
leveneTest(Chaet_ANOVAmod_1026_TRANSFORMED) # 0.3323
shapiro.test(resid(Chaet_ANOVAmod_1026_TRANSFORMED)) # 0.0003287 - non-normal
summary(Chaet_ANOVAmod_1026_TRANSFORMED)
Master_1026_plotting         <- rbind(Chaet_FR_1026_df, Ply_FR_1026_df, Seston_FR_1026_df)
Master_1026_plotting$pHxfood <- paste(Master_1026_plotting$pH, Master_1026_plotting$Fed_Unfed, sep = '_')
CR_1026_boxplot <- Master_1026_plotting %>%
ggplot(aes(pHxfood , CR_mL.hr.mmlength , fill = pHxfood)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pHxfood)) +
scale_fill_manual(values=c("grey50","grey50","white","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=10)) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
ggtitle("Clearance rate, F1 Scallops 20211026") +
facet_wrap(~type)
CR_1026_boxplot
Chaet_FR_1026_df
# Chaet - Linear Mixed Effects Model
Chaet_LMEmod_1026 <-lme(CR_mL.hr.mmlength ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_1026_df)
shapiro.test(resid(Chaet_LMEmod_1026)) # 9.188e-05 non-normal residuals
Chaet_LMEmod_1026_LOG <-lme(sqrt(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_1026_df)
pander(anova(Chaet_LMEmod_1026_LOG), style='rmarkdown') # anova table of lmer
# |      &nbsp;      | numDF | denDF |  F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:---------:|:---------:|
# | **(Intercept)**  |   1   |  14   |   114.1   | 4.102e-08 |
# |      **pH**      |   1   |  10   |  0.7543   |  0.4055   |
# |  **Fed_Unfed**   |   1   |  10   |   27.49   | 0.0003774 | *
# | **pH:Fed_Unfed** |   1   |  10   | 0.0007722 |  0.9784   |
shapiro.test(resid(Chaet_LMEmod_1026_LOG)) # 0.001118 - now it is normal
Chaet_LMEmod_1026_LOG <-lme(log(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_1026_df)
# |      &nbsp;      | numDF | denDF |  F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:---------:|:---------:|
# | **(Intercept)**  |   1   |  14   |   114.1   | 4.102e-08 |
# |      **pH**      |   1   |  10   |  0.7543   |  0.4055   |
# |  **Fed_Unfed**   |   1   |  10   |   27.49   | 0.0003774 | *
# | **pH:Fed_Unfed** |   1   |  10   | 0.0007722 |  0.9784   |
shapiro.test(resid(Chaet_LMEmod_1026_LOG)) # 0.001118 - now it is normal
Chaet_LMEmod_1026_LOG <-lme(log(CR_mL.hr.mmlength)-1 ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_1026_df)
# |      &nbsp;      | numDF | denDF |  F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:---------:|:---------:|
# | **(Intercept)**  |   1   |  14   |   114.1   | 4.102e-08 |
# |      **pH**      |   1   |  10   |  0.7543   |  0.4055   |
# |  **Fed_Unfed**   |   1   |  10   |   27.49   | 0.0003774 | *
# | **pH:Fed_Unfed** |   1   |  10   | 0.0007722 |  0.9784   |
shapiro.test(resid(Chaet_LMEmod_1026_LOG)) # 0.001118 - now it is normal
Chaet_LMEmod_1026_LOG <-lme(log(CR_mL.hr.mmlength) ~ pH*Fed_Unfed, random=~1|random_fact, data=Chaet_FR_1026_df)
# |      &nbsp;      | numDF | denDF |  F-value  |  p-value  |
# |:----------------:|:-----:|:-----:|:---------:|:---------:|
# | **(Intercept)**  |   1   |  14   |   114.1   | 4.102e-08 |
# |      **pH**      |   1   |  10   |  0.7543   |  0.4055   |
# |  **Fed_Unfed**   |   1   |  10   |   27.49   | 0.0003774 | *
# | **pH:Fed_Unfed** |   1   |  10   | 0.0007722 |  0.9784   |
shapiro.test(resid(Chaet_LMEmod_1026_LOG)) # 0.001118 - now it is normal
qqnorm(resid(Chaet_LMEmod_1026_LOG)) # normal
