library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(reshape2)
library(lubridate)
library(SciViews)
library(reshape2)
library(SciViews)
library(kableExtra)
library(latex2exp)
library(pander)
library(performance)
library(ggpubr)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_data       <- read.csv(file="Data/Feeding_rates/Feeding_MasterData.csv", header=T) # master data file
clear.rate_914    <- Master_data  %>% dplyr::filter(Date %in% "20210914")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep=''))
clear.rate_930    <- Master_data  %>% dplyr::filter(Date %in%"20210930")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep=''))
clear.rate_1026    <- Master_data  %>% dplyr::filter(Date %in%"20211026")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep=''))
length.resp.clear <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T) %>%
dplyr::select(!c('Instrument','Center')) %>%
dplyr::mutate(Date = paste("20",(format(as.Date(Date, "%m/%d/%Y"), "%y%m%d")), sep =''))
length.resp.clear <- length.resp.clear[!is.na(length.resp.clear$Length.um.),]
length.resp.clear
length.resp.clear
# Purpose: Bay Scallop Project - Feeding Rates
# analysis of respiration rate data
# Written by: Sam J Gurr (last edit 10/12/2021)
# Review Riisgard 2001 defining the clearance rate of bivalves
# NOTE: clearance rate is defined as the volume of water cleared of suspended particles per unit time, and only equals filtration rate when
# 100% of suspended particles are efficiently retained
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(reshape2)
library(lubridate)
library(SciViews)
library(reshape2)
library(SciViews)
library(kableExtra)
library(latex2exp)
library(pander)
library(performance)
library(ggpubr)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_data       <- read.csv(file="Data/Feeding_rates/Feeding_MasterData.csv", header=T) # master data file
clear.rate_914    <- Master_data  %>% dplyr::filter(Date %in% "20210914")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep=''))
clear.rate_930    <- Master_data  %>% dplyr::filter(Date %in%"20210930")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep=''))
clear.rate_1026    <- Master_data  %>% dplyr::filter(Date %in%"20211026")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep=''))
length.resp.clear <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T) %>%
dplyr::mutate(Date = paste("20",(format(as.Date(Date, "%m/%d/%Y"), "%y%m%d")), sep =''))
length.resp.clear <- length.resp.clear[!is.na(length.resp.clear$Length_um),]
length.resp.clear
clear.rate_914
# Purpose: Bay Scallop Project - Feeding Rates
# analysis of respiration rate data
# Written by: Sam J Gurr (last edit 10/12/2021)
# Review Riisgard 2001 defining the clearance rate of bivalves
# NOTE: clearance rate is defined as the volume of water cleared of suspended particles per unit time, and only equals filtration rate when
# 100% of suspended particles are efficiently retained
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(reshape2)
library(lubridate)
library(SciViews)
library(reshape2)
library(SciViews)
library(kableExtra)
library(latex2exp)
library(pander)
library(performance)
library(ggpubr)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_data       <- read.csv(file="Data/Feeding_rates/Feeding_MasterData.csv", header=T) # master data file
clear.rate_914    <- Master_data  %>% dplyr::filter(Date %in% "20210914")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep='_'))
clear.rate_930    <- Master_data  %>% dplyr::filter(Date %in%"20210930")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep='_'))
clear.rate_1026    <- Master_data  %>% dplyr::filter(Date %in%"20211026")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep='_'))
length.resp.clear <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T) %>%
dplyr::mutate(Date = paste("20",(format(as.Date(Date, "%m/%d/%Y"), "%y%m%d")), sep =''))
length.resp.clear <- length.resp.clear[!is.na(length.resp.clear$Length_um),]
# 20210914 DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# formatting for merge
# call the 914 data and remove blanks
clear.rate_914_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_914 %>% dplyr::filter(!Chamber_tank %in% 'Blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20210914) %>%
dplyr::mutate(Chamber_tank = sub("_", "", Chamber_tank))) ) %>%
dplyr::select(!c('Food'))
clear.rate_914_Scallops
clear.rate_914
# 20210914 DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# formatting for merge
# call the 914 data and remove blanks
clear.rate_914_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_914 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20210914) %>%
dplyr::mutate(Chamber_tank = sub("_", "", Chamber_tank))) ) %>%
dplyr::select(!c('Food'))
clear.rate_914_Scallops
clear.rate_914 %>% dplyr::filter(!Replicate %in% 'blank')
length.resp.clear
# 20210914 DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# formatting for merge
# call the 914 data and remove blanks
clear.rate_914_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_914 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20210914) %>%
dplyr::mutate(Chamber_tank = sub("_", "", Chamber_tank))) ) %>%
dplyr::select(!c('Food'))
clear.rate_914_Scallops
length.resp.clear
merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_914 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% "20210914")
clear.rate_914_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
clear.rate_914_Scallops
clear.rate_914_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_914 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% "20210914")
clear.rate_914_Scallops
length.resp.clear %>%
dplyr::filter(Date %in% 20210914)
# 20210914 DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# formatting for merge
# call the 914 data and remove blanks
clear.rate_914_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_914 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20210914)) ) %>%
#dplyr::mutate(Chamber_tank = sub("_", "", Chamber_tank))) ) %>%
dplyr::select(!c('Food'))
clear.rate_914_Scallops
clear.rate_914
clear.rate_914 %>% dplyr::filter(!Replicate %in% 'blank')
length.resp.clear %>%
dplyr::filter(Date %in% 20210914))
length.resp.clear %>%
dplyr::filter(Date %in% 20210914)
# 20210914 DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# formatting for merge
# call the 914 data and remove blanks
clear.rate_914_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_914 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20210914)) ) %>%
#dplyr::mutate(Chamber_tank = sub("_", "", Chamber_tank))) ) %>%
dplyr::select(!c('Food'))
clear.rate_914_Scallops
length.resp.clear
clear.rate_930_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_930 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20210930)) ) %>%
#dplyr::mutate(Chamber_tank = sub("_", "", Chamber_tank))) ) %>%
dplyr::select(!c('Food'))
clear.rate_930_Scallops
clear.rate_930
# Purpose: Bay Scallop Project - Feeding Rates
# analysis of respiration rate data
# Written by: Sam J Gurr (last edit 10/12/2021)
# Review Riisgard 2001 defining the clearance rate of bivalves
# NOTE: clearance rate is defined as the volume of water cleared of suspended particles per unit time, and only equals filtration rate when
# 100% of suspended particles are efficiently retained
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(reshape2)
library(lubridate)
library(SciViews)
library(reshape2)
library(SciViews)
library(kableExtra)
library(latex2exp)
library(pander)
library(performance)
library(ggpubr)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Master_data       <- read.csv(file="Data/Feeding_rates/Feeding_MasterData.csv", header=T) # master data file
clear.rate_914    <- Master_data  %>% dplyr::filter(Date %in% "20210914")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep='_'))
clear.rate_930    <- Master_data  %>% dplyr::filter(Date %in%"20210930")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep='_'))
clear.rate_1026    <- Master_data  %>% dplyr::filter(Date %in%"20211026")  %>%
dplyr::mutate(Chamber_tank = paste(pH, Replicate, sep='_'))
length.resp.clear <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T) %>%
dplyr::mutate(Date = paste("20",(format(as.Date(Date, "%m/%d/%Y"), "%y%m%d")), sep =''))
length.resp.clear <- length.resp.clear[!is.na(length.resp.clear$Length_um),]
# 20210914 DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# formatting for merge
# call the 914 data and remove blanks
clear.rate_914_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_914 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20210914)) ) %>%
#dplyr::mutate(Chamber_tank = sub("_", "", Chamber_tank))) ) %>%
dplyr::select(!c('Food'))
clear.rate_930_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_930 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20210930)) ) %>%
#dplyr::mutate(Chamber_tank = sub("_", "", Chamber_tank))) ) %>%
dplyr::select(!c('Food'))
clear.rate_930_Scallops
# 20210930 DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# formatting for merge
# call the 20210930 data and remove blanks
clear.rate_1026_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_1026 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20211026)) ) %>%
dplyr::select(!c('Food'))
clear.rate_1026_Scallops
ClearRate_Master          <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops)
ClearRate_Master
ClearRate_Master          <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml = tet.ply*(1000/33)) %>%
dplyr::mutate(Chaet_cells_ml = tet.ply*(1000/33)) %>%
dplyr::mutate(TotLiveAlgae_cells_ml = total_algae*(1000/33)) %>%
dplyr::mutate(Seston_cells_ml = seston*(1000/33))
ClearRate_Master          <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml   <- tet.ply*(1000/33))
rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml  == tet.ply*(1000/33))
rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml = tet.ply*(1000/33))
rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops)
rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml = tet.ply*(1000/33))
rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml = as.numeric(tet.ply)*(1000/33))
ClearRate_Master          <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml == as.numeric(tet.ply)*(1000/33))
ClearRate_Master          <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml <- as.numeric(tet.ply)*(1000/33))
ClearRate_Master
ClearRate_Master          <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml = (tet.ply*(1000/33)))
rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml = as.numeric(tet.ply*(1000/33)))
ClearRate_Master          <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(tet.ply = as.numeric(tet.ply))
ClearRate_Master
clear.rate_914_Scallops$tet.ply <- as.numeric(clear.rate_914_Scallops$tet.ply)
clear.rate_914_Scallops$tet.ply
# 20210914 DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# formatting for merge
# call the 20210914 data and remove blanks
clear.rate_914_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_914 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20210914)) ) %>%
dplyr::select(!c('Food'))
clear.rate_914_Scallops
clear.rate_914_Scallops$tet.ply <- as.numeric(gsub(",", "", clear.rate_914_Scallops$tet.ply))
clear.rate_914_Scallops$tet.ply
ClearRate_Master          <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml = (as.numeric(gsub(",", "", tet.ply)))*(1000/33)) %>%
dplyr::mutate(Chaet_cells_ml = (as.numeric(gsub(",", "", chaet)))*(1000/33)) %>%
dplyr::mutate(TotLiveAlgae_cells_ml = (as.numeric(gsub(",", "", TotLiveAlgae_cells_ml)))*(1000/33)) %>%
dplyr::mutate(Seston_cells_ml = (as.numeric(gsub(",", "", Seston_cells_ml)))*(1000/33))
rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops)
ClearRate_Master          <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops) %>%
dplyr::mutate(Tet_cells_ml = (as.numeric(gsub(",", "", tet.ply)))*(1000/33)) %>%
dplyr::mutate(Chaet_cells_ml = (as.numeric(gsub(",", "", chaet)))*(1000/33)) %>%
dplyr::mutate(TotLiveAlgae_cells_ml = (as.numeric(gsub(",", "", total_algae)))*(1000/33)) %>%
dplyr::mutate(Seston_cells_ml = (as.numeric(gsub(",", "", seston)))*(1000/33))
print(head(ClearRate_Master))
ClearRate_Master          <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops)
ClearRate_Master             <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops)
ClearRate_Master$tet.ply     <- (as.numeric(gsub(",", "", ClearRate_Master$tet.ply )))*(1000/33)
ClearRate_Master$tet.ply
ClearRate_Master             <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops)
(as.numeric(gsub(",", "", ClearRate_Master$tet.ply )))
ClearRate_Master$tet.ply
ClearRate_Master             <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops)
ClearRate_Master$tet.ply
ClearRate_Master             <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops)
ClearRate_Master$tet.ply     <- (as.numeric(gsub(",", "", ClearRate_Master$tet.ply )))*(1000/33)
# 20210914 DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# formatting for merge
# call the 20210914 data and remove blanks
clear.rate_914_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_914 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20210914)) ) %>%
dplyr::select(!c('Food'))
# 20210930 DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# formatting for merge
# call the 20210930 data and remove blanks
clear.rate_930_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_930 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20210930)) ) %>%
dplyr::select(!c('Food'))
# 20210930 DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# formatting for merge
# call the 20210930 data and remove blanks
clear.rate_1026_Scallops <- merge( # note - merging with th elengths removed the blanks from the clearance rate data (no lengths for them! )
(clear.rate_1026 %>% dplyr::filter(!Replicate %in% 'blank')),
(length.resp.clear %>%
dplyr::filter(Date %in% 20211026)) ) %>%
dplyr::select(!c('Food'))
ClearRate_Master             <- rbind(clear.rate_914_Scallops, clear.rate_930_Scallops, clear.rate_1026_Scallops)
ClearRate_Master$tet.ply     <- (as.numeric(gsub(",", "", ClearRate_Master$tet.ply )))*(1000/33)
ClearRate_Master$chaet       <- (as.numeric(gsub(",", "", ClearRate_Master$chaet )))*(1000/33)
ClearRate_Master$total_algae <- (as.numeric(gsub(",", "", ClearRate_Master$total_algae )))*(1000/33)
ClearRate_Master$total_algae
ClearRate_Master$seston      <- (as.numeric(gsub(",", "", ClearRate_Master$seston )))*(1000/33)
print(head(ClearRate_Master))
ClearRate_Master
ClearRate_Master
SlopePlots_914 <- ClearRate_Master[!is.na(ClearRate_Master$total_algae),] %>%
SlopePlots_914 <- ClearRate_Master[!is.na(ClearRate_Master$total_algae),] %>%
SlopePlots_914 <- ClearRate_Master[!is.na(ClearRate_Master$total_algae),] %>%
SlopePlots_914
ClearRate_Master[!is.na(ClearRate_Master$total_algae),] %>%
dplyr::filter(Date %in% "20210914")
SlopePlots_914 <- ClearRate_Master[!is.na(ClearRate_Master$total_algae),] %>%
dplyr::filter(Date %in% "20210914") %>%
dplyr::mutate(Time._min = as.numeric(as.character(minutes))) %>%
ggplot(aes(minutes, total_algae, color=Replicate)) +
geom_point(shape=1, color = "black")+
ggtitle("RAW DATA: F1 Scallops, Clearance Rate 20210914")+
labs(y = expression(Live~algae~cells~"("~cells~mL^{-1}~")"),
x = expression(Time~"("~minutes~")")) +
theme(plot.title= element_text(size =16, face ="bold",
lineheight = 8, vjust=1), aspect.ratio=1)+
stat_smooth(method="lm", se = F) +
theme_bw() +
scale_shape_identity() +
facet_wrap( ~ pH, scales = "free_x" )
SlopePlots_914
# Clearance rate anlaysis for 9/30 data
ClearRate_Master.914 <- ClearRate_Master %>%
dplyr::filter(Date %in% 20210914) %>%
dplyr::mutate(uniq_Identifier = paste(pH, "Run", Run, "Rep",Replicate, "Num", Number, sep='_'))
ClearRate_Master.914
loop_914 <- as.data.frame(unique(ClearRate_Master.914$uniq_Identifier)) %>% dplyr::rename(ID = "unique(ClearRate_Master.914$uniq_Identifier)")
SlopeTable_914 <- data.frame() # run this before the loop
for(i in 1:nrow(loop_914)){
dat <- ClearRate_Master.914 %>%  filter(uniq_Identifier %in% loop_914[i,])
slope<- summary(lm((dat$Cells_ml) ~ as.numeric(dat$Time._min)))$coef[2,"Estimate"]
SLOPE  <- summary(lm((dat$Cells_ml) ~ as.numeric(dat$Time._min)))$r.squared
pval <- summary(lm((dat$Cells_ml) ~ as.numeric(dat$Time._min)))$coef[2,"Pr(>|t|)"]
mod  <- lm(as.numeric(dat$Time._min) ~ dat$Cells_ml)
norm_assum <- shapiro.test(resid(mod))
shapiro_pval <- norm_assum$p.value
# assign the data table
SLOPE.loop <- data.frame(matrix(nrow = 1, ncol = 5)) # create a new data table
colnames(SLOPE.loop) <- c('pH', 'Replicate', 'slope', 'SLOPE', 'pval') # assign headers
SLOPE.loop$pH        <- gsub("_.*", "\\1", loop_914[i,])
SLOPE.loop$Replicate <- gsub("^(?:[^_]+_){4}([^_]+).*", "\\1", loop_914[i,])
SLOPE.loop$slope     <- slope * 60  # cells per mL per hour
SLOPE.loop$Number    <- gsub("^(?:[^_]+_){6}([^_]+).*", "\\1", loop_914[i,])
SLOPE.loop$SLOPE       <- SLOPE
SLOPE.loop$pval      <- pval
SLOPE.loop$shapiro_pval <- shapiro_pval
# loop additions
df <- data.frame(SLOPE.loop) # name dataframe for this single row
SlopeTable_914 <- rbind(SlopeTable_914,df) # bind to a cumulative list dataframe
# print(SlopeTable_914) # show loop progress in the console
}# outside loo
for(i in 1:nrow(loop_914)){
dat <- ClearRate_Master.914 %>%  filter(uniq_Identifier %in% loop_914[i,])
slope<- summary(lm((dat$total_algae) ~ as.numeric(dat$minutes)))$coef[2,"Estimate"]
SLOPE  <- summary(lm((dat$total_algae) ~ as.numeric(dat$minutes)))$r.squared
pval <- summary(lm((dat$total_algae) ~ as.numeric(dat$minutes)))$coef[2,"Pr(>|t|)"]
mod  <- lm(as.numeric(dat$minutes) ~ dat$total_algae)
norm_assum <- shapiro.test(resid(mod))
shapiro_pval <- norm_assum$p.value
# assign the data table
SLOPE.loop <- data.frame(matrix(nrow = 1, ncol = 5)) # create a new data table
colnames(SLOPE.loop) <- c('pH', 'Replicate', 'slope', 'SLOPE', 'pval') # assign headers
SLOPE.loop$pH        <- gsub("_.*", "\\1", loop_914[i,])
SLOPE.loop$Replicate <- gsub("^(?:[^_]+_){4}([^_]+).*", "\\1", loop_914[i,])
SLOPE.loop$slope     <- slope * 60  # cells per mL per hour
SLOPE.loop$Number    <- gsub("^(?:[^_]+_){6}([^_]+).*", "\\1", loop_914[i,])
SLOPE.loop$SLOPE       <- SLOPE
SLOPE.loop$pval      <- pval
SLOPE.loop$shapiro_pval <- shapiro_pval
# loop additions
df <- data.frame(SLOPE.loop) # name dataframe for this single row
SlopeTable_914 <- rbind(SlopeTable_914,df) # bind to a cumulative list dataframe
# print(SlopeTable_914) # show loop progress in the console
}# outside loo
SLOPE_mod_914 <- aov(lm(slope ~ pH, data= SlopeTable_914))
DF   <- paste( (summary(SLOPE_mod_914)[[1]][["Df"]])[1], (summary(SLOPE_mod_914)[[1]][["Df"]])[2], sep = '/')
Fval <- (summary(SLOPE_mod_914)[[1]][["F value"]])[1]
pval <- (summary(SLOPE_mod_914)[[1]][["Pr(>F)"]])[1]
SlopeFig914_geombox <- ggplot(SlopeTable_914, aes(pH , abs(slope) , fill = pH)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pH)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Elevated (H)', 'Ambient (L)')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: Slope algae cells/time - feeding rate trials 20210914",
y = expression(Slope~"="~absolute~value~"("~Live~algae~cells~mL^{-1}~hour^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
annotate("text", x=2, y= 25000, size = 4, label = "aov(slope~pH Treatment)") +
annotate("text", x=2, y= 24300, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
SlopeFig914_geombox
# Clearance rate anlaysis for 9/30 data
ClearRate_Master.930       <- ClearRate_Master %>%
dplyr::filter(Date %in% 20210930) %>%
dplyr::mutate(uniq_Identifier = paste(pH, Fed_Unfed, "Run", Run, "Rep",Replicate, "Num", Number, sep='_'))
loop_930 <- as.data.frame(unique(ClearRate_Master.930$uniq_Identifier)) %>% dplyr::rename(ID = "unique(ClearRate_Master.930$uniq_Identifier)")
SlopeTable_930 <- data.frame() # run this before the loop
for(i in 1:nrow(loop_930)){
dat <- ClearRate_Master.930 %>%  filter(uniq_Identifier %in% loop_930[i,])
slope<- summary(lm((dat$total_algae) ~ as.numeric(dat$minutes)))$coef[2,"Estimate"]
SLOPE  <- summary(lm((dat$total_algae) ~ as.numeric(dat$minutes)))$r.squared
pval <- summary(lm((dat$total_algae) ~ as.numeric(dat$minutes)))$coef[2,"Pr(>|t|)"]
mod  <- lm(as.numeric(dat$minutes) ~ dat$total_algae)
norm_assum <- shapiro.test(resid(mod))
shapiro_pval <- norm_assum$p.value
# assign the data table
SLOPE.loop <- data.frame(matrix(nrow = 1, ncol = 6)) # create a new data table
colnames(SLOPE.loop) <- c('pH', 'Replicate', 'Fed_Unfed','slope', 'SLOPE', 'pval') # assign headers
SLOPE.loop$pH        <- gsub("_.*", "\\1", loop_930[i,])
SLOPE.loop$Replicate <- gsub("^(?:[^_]+_){5}([^_]+).*", "\\1", loop_930[i,])
SLOPE.loop$Fed_Unfed <- gsub("^(?:[^_]+_){1}([^_]+).*", "\\1", loop_930[i,])
SLOPE.loop$slope     <- slope * 60  # cells per mL per hour
SLOPE.loop$Number    <- gsub("^(?:[^_]+_){7}([^_]+).*", "\\1", loop_930[i,])
SLOPE.loop$SLOPE       <- SLOPE
SLOPE.loop$pval      <- pval
SLOPE.loop$shapiro_pval <- shapiro_pval
# loop additions
df <- data.frame(SLOPE.loop) # name dataframe for this single row
SlopeTable_930 <- rbind(SlopeTable_930,df) # bind to a cumulative list dataframe
#print(SlopeTable_930) # show loop progress in the console
}# outside loo
# Clearance rate anlaysis for 9/30 data
ClearRate_Master.930       <- ClearRate_Master %>%
dplyr::filter(Date %in% 20210930) %>%
dplyr::mutate(uniq_Identifier = paste(pH, Fed_Unfed, "Run", Run, "Rep",Replicate, "Num", Number, sep='_'))
loop_930 <- as.data.frame(unique(ClearRate_Master.930$uniq_Identifier)) %>% dplyr::rename(ID = "unique(ClearRate_Master.930$uniq_Identifier)")
SlopeTable_930 <- data.frame() # run this before the loop
for(i in 1:nrow(loop_930)){
dat <- ClearRate_Master.930 %>%  filter(uniq_Identifier %in% loop_930[i,])
slope<- summary(lm((dat$total_algae) ~ as.numeric(dat$minutes)))$coef[2,"Estimate"]
SLOPE  <- summary(lm((dat$total_algae) ~ as.numeric(dat$minutes)))$r.squared
pval <- summary(lm((dat$total_algae) ~ as.numeric(dat$minutes)))$coef[2,"Pr(>|t|)"]
mod  <- lm(as.numeric(dat$minutes) ~ dat$total_algae)
norm_assum <- shapiro.test(resid(mod))
shapiro_pval <- norm_assum$p.value
# assign the data table
SLOPE.loop <- data.frame(matrix(nrow = 1, ncol = 6)) # create a new data table
colnames(SLOPE.loop) <- c('pH', 'Replicate', 'Fed_Unfed','slope', 'SLOPE', 'pval') # assign headers
SLOPE.loop$pH        <- gsub("_.*", "\\1", loop_930[i,])
SLOPE.loop$Replicate <- gsub("^(?:[^_]+_){5}([^_]+).*", "\\1", loop_930[i,])
SLOPE.loop$Fed_Unfed <- gsub("^(?:[^_]+_){1}([^_]+).*", "\\1", loop_930[i,])
SLOPE.loop$slope     <- slope * 60  # cells per mL per hour
SLOPE.loop$Number    <- gsub("^(?:[^_]+_){7}([^_]+).*", "\\1", loop_930[i,])
SLOPE.loop$SLOPE       <- SLOPE
SLOPE.loop$pval      <- pval
SLOPE.loop$shapiro_pval <- shapiro_pval
# loop additions
df <- data.frame(SLOPE.loop) # name dataframe for this single row
SlopeTable_930 <- rbind(SlopeTable_930,df) # bind to a cumulative list dataframe
#print(SlopeTable_930) # show loop progress in the console
}# outside loo
ClearRate_Master.930
