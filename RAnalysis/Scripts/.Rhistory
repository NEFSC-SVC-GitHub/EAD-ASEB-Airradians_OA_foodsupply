density.plot_CR_CHAET_1026 <-ggplot(p.box.data.CHAET) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = Master_1026_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: respiration rates 92 DPF)",
x = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_CHAET_1026
CHAET_plotting <- Master_1026_plotting %>% dplyr::filter(type %in% 'chaet')
df_mean_CHAET <- CHAET_plotting %>%
dplyr::group_by(pHxfood) %>%
dplyr::summarize(average = mean(CR_mL.hr.mmlength)) %>%
dplyr::ungroup()
p.box_CHAET <- ggplot(CHAET_plotting, aes(x = pHxfood, y = CR_mL.hr.mmlength)) + geom_boxplot() + geom_point(data= df_mean_CHAET, mapping = aes(x = pHxfood, y = average),
color="red")
p.box.data.CHAET <- layer_data(p.box_CHAET) %>%
select(x, ymin, lower, middle, upper, ymax, outliers, flipped_aes) %>%
dplyr::rename(mean = flipped_aes) %>%
dplyr::mutate(mean  = df_mean_CHAET$average) %>%
mutate(pHxfood = factor(x, labels = levels(CHAET_plotting$pHxfood), ordered = TRUE)) %>%
select(-x)
p.box.data.CHAET %>% unnest(outliers)
density.plot_CR_CHAET_1026 <-ggplot(p.box.data.CHAET) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = CHAET_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: respiration rates 92 DPF)",
x = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%m^{-1}~shell~length%.% hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_CHAET_1026
density.plot_CR_CHAET_1026 <-ggplot(p.box.data.CHAET) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = CHAET_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (Chaetoceros) 92 DPF)",
x = expression(Clearance~rate~"("~cells~mL^{-1}~Chaetoceros%.%mm^{-1}~shell~length%.% hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_CHAET_1026
density.plot_CR_CHAET_1026 <-ggplot(p.box.data.CHAET) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = CHAET_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (Chaetoceros) 92 DPF",
x = expression(Clearance~rate~"("~cells~mL^{-1}~Chaetoceros%.%mm^{-1}~shell~length%.% hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_CHAET_1026
density.plot_CR_CHAET_1026 <-ggplot(p.box.data.CHAET) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = CHAET_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (Chaetoceros) 92 DPF",
x = expression(Clearance~rate~"("Chaetoceros~cells~mL^{-1}~mm~shell~length^{-1}%.%hr^{-1}~")"),
density.plot_CR_CHAET_1026 <-ggplot(p.box.data.CHAET) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = CHAET_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (Chaetoceros) 92 DPF",
x = expression(Clearance~rate~"("~Chaetoceros~cells~mL^{-1}~mm~shell~length^{-1}%.%hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_CHAET_1026
density.plot_CR_CHAET_1026 <-ggplot(p.box.data.CHAET) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = CHAET_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (Chaetoceros) 92 DPF",
x = expression(Clearance~rate~"("~Chaetoceros~cells~mL^{-1}%.%~mm~shell~length^{-1}%.%hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_CHAET_1026
pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/20211026_figs_tables/20211026_CR_CHAET_density_plot.pdf"), width = 5, height = 5)
density.plot_CR_CHAET_1026 # print the model diagnostics
dev.off()
PLY_plotting <- Master_1026_plotting %>% dplyr::filter(type %in% 'ply')
SESTON_plotting <- Master_1026_plotting %>% dplyr::filter(type %in% 'seston')
df_mean_PLY <- PLY_plotting %>%
dplyr::group_by(pHxfood) %>%
dplyr::summarize(average = mean(CR_mL.hr.mmlength)) %>%
dplyr::ungroup()
p.box_PLY <- ggplot(PLY_plotting, aes(x = pHxfood, y = CR_mL.hr.mmlength)) + geom_boxplot() + geom_point(data= df_mean_PLY, mapping = aes(x = pHxfood, y = average),
color="red")
p.box.data.PLY <- layer_data(p.box_PLY) %>%
select(x, ymin, lower, middle, upper, ymax, outliers, flipped_aes) %>%
dplyr::rename(mean = flipped_aes) %>%
dplyr::mutate(mean  = df_mean_PLY$average) %>%
mutate(pHxfood = factor(x, labels = levels(PLY_plotting$pHxfood), ordered = TRUE)) %>%
select(-x)
p.box.data.PLY %>% unnest(outliers)
density.plot_CR_PLY_1026 <-ggplot(p.box.data.PLY) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = PLY_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (PLYoceros) 92 DPF",
x = expression(Clearance~rate~"("~PLYoceros~cells~mL^{-1}%.%~mm~shell~length^{-1}%.%hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_PLY_1026 <-ggplot(p.box.data.PLY) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = PLY_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (Tetraselmis/PLY) 92 DPF",
x = expression(Clearance~rate~"("~Tetraselmis~cells~mL^{-1}%.%~mm~shell~length^{-1}%.%hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_PLY_1026
pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/20211026_figs_tables/20211026_CR_PLY_density_plot.pdf"), width = 5, height = 5)
density.plot_CR_PLY_1026 # print the model diagnostics
dev.off()
df_mean_SESTON <- SESTON_plotting %>%
dplyr::group_by(pHxfood) %>%
dplyr::summarize(average = mean(CR_mL.hr.mmlength)) %>%
dplyr::ungroup()
p.box_SESTON <- ggplot(SESTON_plotting, aes(x = pHxfood, y = CR_mL.hr.mmlength)) + geom_boxplot() + geom_point(data= df_mean_SESTON, mapping = aes(x = pHxfood, y = average),
color="red")
p.box.data.SESTON <- layer_data(p.box_SESTON) %>%
select(x, ymin, lower, middle, upper, ymax, outliers, flipped_aes) %>%
dplyr::rename(mean = flipped_aes) %>%
dplyr::mutate(mean  = df_mean_SESTON$average) %>%
mutate(pHxfood = factor(x, labels = levels(SESTON_plotting$pHxfood), ordered = TRUE)) %>%
select(-x)
p.box.data.SESTON %>% unnest(outliers)
density.plot_CR_SESTON_1026 <-ggplot(p.box.data.SESTON) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = SESTON_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (SESTONoceros) 92 DPF",
x = expression(Clearance~rate~"("~SESTONoceros~cells~mL^{-1}%.%~mm~shell~length^{-1}%.%hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_SESTON_1026
density.plot_CR_SESTON_1026 <-ggplot(p.box.data.SESTON) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = SESTON_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (seston) 92 DPF",
x = expression(Clearance~rate~"("~SESTONoceros~cells~mL^{-1}%.%~mm~shell~length^{-1}%.%hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_SESTON_1026
pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/20211026_figs_tables/20211026_CR_SESTON_density_plot.pdf"), width = 5, height = 5)
density.plot_CR_SESTON_1026 # print the model diagnostics
dev.off()
Master_930_plotting$pHxfood <- as.factor(Master_930_plotting$pHxfood)
CHAET_plotting  <- Master_930_plotting %>% dplyr::filter(type %in% 'chaet')
PLY_plotting    <- Master_930_plotting %>% dplyr::filter(type %in% 'ply')
SESTON_plotting <- Master_930_plotting %>% dplyr::filter(type %in% 'seston')
df_mean_CHAET <- CHAET_plotting %>%
dplyr::group_by(pHxfood) %>%
dplyr::summarize(average = mean(CR_mL.hr.mmlength)) %>%
dplyr::ungroup()
p.box_CHAET <- ggplot(CHAET_plotting, aes(x = pHxfood, y = CR_mL.hr.mmlength)) + geom_boxplot() + geom_point(data= df_mean_CHAET, mapping = aes(x = pHxfood, y = average),
color="red")
p.box.data.CHAET <- layer_data(p.box_CHAET) %>%
select(x, ymin, lower, middle, upper, ymax, outliers, flipped_aes) %>%
dplyr::rename(mean = flipped_aes) %>%
dplyr::mutate(mean  = df_mean_CHAET$average) %>%
mutate(pHxfood = factor(x, labels = levels(CHAET_plotting$pHxfood), ordered = TRUE)) %>%
select(-x)
p.box.data.CHAET %>% unnest(outliers)
density.plot_CR_CHAET_1026 <-ggplot(p.box.data.CHAET) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = CHAET_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (Chaetoceros) 92 DPF",
x = expression(Clearance~rate~"("~Chaetoceros~cells~mL^{-1}%.%~mm~shell~length^{-1}%.%hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_CHAET_1026
density.plot_CR_CHAET_930 <-ggplot(p.box.data.CHAET) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = CHAET_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (Chaetoceros) 92 DPF",
x = expression(Clearance~rate~"("~Chaetoceros~cells~mL^{-1}%.%~mm~shell~length^{-1}%.%hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_CHAET_930
pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/20210930_figs_tables/20210930_CR_CHAET_density_plot.pdf"), width = 5, height = 5)
density.plot_CR_CHAET_930 # print the model diagnostics
dev.off()
df_mean_PLY <- PLY_plotting %>%
dplyr::group_by(pHxfood) %>%
dplyr::summarize(average = mean(CR_mL.hr.mmlength)) %>%
dplyr::ungroup()
p.box_PLY <- ggplot(PLY_plotting, aes(x = pHxfood, y = CR_mL.hr.mmlength)) + geom_boxplot() + geom_point(data= df_mean_PLY, mapping = aes(x = pHxfood, y = average),
color="red")
p.box.data.PLY <- layer_data(p.box_PLY) %>%
select(x, ymin, lower, middle, upper, ymax, outliers, flipped_aes) %>%
dplyr::rename(mean = flipped_aes) %>%
dplyr::mutate(mean  = df_mean_PLY$average) %>%
mutate(pHxfood = factor(x, labels = levels(PLY_plotting$pHxfood), ordered = TRUE)) %>%
select(-x)
p.box.data.PLY %>% unnest(outliers)
density.plot_CR_PLY_930 <-ggplot(p.box.data.PLY) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = PLY_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (Tetraselmis/PLY) 92 DPF",
x = expression(Clearance~rate~"("~Tetraselmis~cells~mL^{-1}%.%~mm~shell~length^{-1}%.%hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_PLY_930
pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/20210930_figs_tables/20210930_CR_SESTON_density_plot.pdf"), width = 5, height = 5)
density.plot_CR_SESTON_0930 # print the model diagnostics
density.plot_CR_SESTON_0930
density.plot_CR_SESTON_0930 <-ggplot(p.box.data.SESTON) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = SESTON_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (seston) 92 DPF",
x = expression(Clearance~rate~"("~SESTONoceros~cells~mL^{-1}%.%~mm~shell~length^{-1}%.%hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/20210930_figs_tables/20210930_CR_PLY_density_plot.pdf"), width = 5, height = 5)
density.plot_CR_PLY_930 # print the model diagnostics
dev.off()
df_mean_SESTON <- SESTON_plotting %>%
dplyr::group_by(pHxfood) %>%
dplyr::summarize(average = mean(CR_mL.hr.mmlength)) %>%
dplyr::ungroup()
p.box_SESTON <- ggplot(SESTON_plotting, aes(x = pHxfood, y = CR_mL.hr.mmlength)) + geom_boxplot() + geom_point(data= df_mean_SESTON, mapping = aes(x = pHxfood, y = average),
color="red")
p.box.data.SESTON <- layer_data(p.box_SESTON) %>%
select(x, ymin, lower, middle, upper, ymax, outliers, flipped_aes) %>%
dplyr::rename(mean = flipped_aes) %>%
dplyr::mutate(mean  = df_mean_SESTON$average) %>%
mutate(pHxfood = factor(x, labels = levels(SESTON_plotting$pHxfood), ordered = TRUE)) %>%
select(-x)
p.box.data.SESTON %>% unnest(outliers)
density.plot_CR_SESTON_0930 <-ggplot(p.box.data.SESTON) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.15, yend = -0.15)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.3, ymax = 0,  fill = pHxfood),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.15), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pHxfood, lower, mean, upper) %>% gather(key, value, -pHxfood), aes(xintercept = value)) +
# density plot
geom_density(data = SESTON_plotting, aes(x = CR_mL.hr.mmlength, group=pHxfood, fill=pHxfood, ..scaled..), alpha=.4, adjust=1.5) +
#  theme
theme_classic() +
facet_grid(pHxfood ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(title = "F1 Scallops: Clearance rates (seston) 92 DPF",
x = expression(Clearance~rate~"("~SESTONoceros~cells~mL^{-1}%.%~mm~shell~length^{-1}%.%hr^{-1}~")"),
y = "Scaled density") +
scale_fill_manual(values=c("grey40", "grey40", "grey85", "grey85"))
density.plot_CR_SESTON_0930
pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/FeedingRates/20210930_figs_tables/20210930_CR_SESTON_density_plot.pdf"), width = 5, height = 5)
density.plot_CR_SESTON_0930 # print the model diagnostics
dev.off()
# LOAD PACKAGES
library(dplyr)
library(ggplot2)
library(kableExtra)
library(kableExtra)
library(data.table)
library(stringr)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(Rmisc)
library(kableExtra)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# LOAD & FORMAT THE DATA
# All data  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
chem    <- data.frame(read.csv(file="Data/Seawater_chemistry/Water_Chemistry_Scallops_2021.csv", header=T)) %>%
dplyr::filter(!X  %in% c('Checking the system', 'RESPO', 'Tank Farm', 'Blue bucket check')) %>%  # ommit all occurances of 'checks' of the system
dplyr::rename(Date = ï..Date)
# LOAD PACKAGES
library(dplyr)
library(ggplot2)
library(kableExtra)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(kableExtra)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# LOAD & FORMAT THE DATA
# All data  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
chem    <- data.frame(read.csv(file="Data/Seawater_chemistry/Water_Chemistry_Scallops_2021.csv", header=T)) %>%
dplyr::filter(!X  %in% c('Checking the system', 'RESPO', 'Tank Farm', 'Blue bucket check')) %>%  # ommit all occurances of 'checks' of the system
dplyr::rename(Date = ï..Date)
# LOAD PACKAGES
library(dplyr)
library(ggplot2)
library(kableExtra)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(kableExtra)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# LOAD & FORMAT THE DATA
# All data  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# chem    <- data.frame(read.csv(file="Data/Seawater_chemistry/Water_Chemistry_Scallops_2021.csv", header=T)) %>%
#   dplyr::filter(!X  %in% c('Checking the system', 'RESPO', 'Tank Farm', 'Blue bucket check')) %>%  # ommit all occurances of 'checks' of the system
#   dplyr::rename(Date = ï..Date)
# chem$Date <- as.factor(gsub("/2021.*","", chem$Date))
# FOOD  OA CHALLENGE ONLY  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# foodxOAchem    <- data.frame(read.csv(file="Data/Seawater_chemistry/Water_Chemistry_FoodxOA_Challenge.csv", header=T))[,c(1:20)] %>%
#   dplyr::filter(!(Date %in% "10/12/2021" & Food.Treatment %in% 'Low')) %>% # omit 10/12/2021 measurements for the 'Low' Food treatment (check notebook, I think CO2 turned off overnight?)
#   dplyr::filter(!X %in% 'checking the system') %>%  # ommit all occurances of 'checks' of the system
#   na.omit()
foodxOAchem    <- data.frame(read.csv(file="Data/Seawater_chemistry/MasterTable_FoodxOA.csv", header=T))
foodxOAchem
# FOOD  OA CHALLENGE ONLY  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# foodxOAchem    <- data.frame(read.csv(file="Data/Seawater_chemistry/Water_Chemistry_FoodxOA_Challenge.csv", header=T))[,c(1:20)] %>%
#   dplyr::filter(!(Date %in% "10/12/2021" & Food.Treatment %in% 'Low')) %>% # omit 10/12/2021 measurements for the 'Low' Food treatment (check notebook, I think CO2 turned off overnight?)
#   dplyr::filter(!X %in% 'checking the system') %>%  # ommit all occurances of 'checks' of the system
#   na.omit()
CarbChemfoodxOAchem    <- data.frame(read.csv(file="Data/Seawater_chemistry/MasterTable_FoodxOA.csv", header=T))
# LOAD PACKAGES
library(dplyr)
library(ggplot2)
library(kableExtra)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(kableExtra)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# LOAD & FORMAT THE DATA
# All data  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# chem    <- data.frame(read.csv(file="Data/Seawater_chemistry/Water_Chemistry_Scallops_2021.csv", header=T)) %>%
#   dplyr::filter(!X  %in% c('Checking the system', 'RESPO', 'Tank Farm', 'Blue bucket check')) %>%  # ommit all occurances of 'checks' of the system
#   dplyr::rename(Date = ï..Date)
# chem$Date <- as.factor(gsub("/2021.*","", chem$Date))
# FOOD  OA CHALLENGE ONLY  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# foodxOAchem    <- data.frame(read.csv(file="Data/Seawater_chemistry/Water_Chemistry_FoodxOA_Challenge.csv", header=T))[,c(1:20)] %>%
#   dplyr::filter(!(Date %in% "10/12/2021" & Food.Treatment %in% 'Low')) %>% # omit 10/12/2021 measurements for the 'Low' Food treatment (check notebook, I think CO2 turned off overnight?)
#   dplyr::filter(!X %in% 'checking the system') %>%  # ommit all occurances of 'checks' of the system
#   na.omit()
CarbChemfoodxOAchem    <- data.frame(read.csv(file="Data/Seawater_chemistry/MasterTable_FoodxOA.csv", header=T))
CarbChemfoodxOAchem
Measured_values <- CarbChemfoodxOAchem %>% dplry::select(contains("CO2SYS_TA.DIC"))
Measured_values <- CarbChemfoodxOAchem %>% dplyr::select(contains("CO2SYS_TA.DIC"))
Measured_values <- CarbChemfoodxOAchem[c(2:3),]
Measured_values
CO2SYS_TA.DIC   <- CarbChemfoodxOAchem %>% dplyr::select(c('Date', (contains("CO2SYS_TA.DIC"))))
CO2SYS_TA.DIC
CO2SYS_TA.DIC   <- CarbChemfoodxOAchem %>% dplyr::select(c('Date', 'Fed_Unfed', 'pH', 'OA.pCO2.treat.', (contains("CO2SYS_TA.DIC"))))
CO2SYS_TA.DIC
Measured_values <- CarbChemfoodxOAchem[,c(2:6,10,12:14)]
Measured_values
Measured_values <- CarbChemfoodxOAchem[,c(1:6,10,12:14)]
Measured_values <- CarbChemfoodxOAchem[,c(1:6,10,12:14)] %>% dplur::mutate(Calculation = 'Measured_values')
Measured_values <- CarbChemfoodxOAchem[,c(1:6,10,12:14)] %>% dplur::mutate('Calculation' = 'Measured_values')
Measured_values <- CarbChemfoodxOAchem[,c(1:6,10,12:14)] %>% dplur::mutate('Calculation' == 'Measured_values')
Measured_values <- CarbChemfoodxOAchem[,c(1:6,10,12:14)] %>% dplyr::mutate(Calculation == 'Measured_values')
Measured_values <- CarbChemfoodxOAchem[,c(1:6,10,12:14)] %>% dplyr::mutate(Calculation = 'Measured_values')
CO2SYS_TA.DIC   <- CarbChemfoodxOAchem %>% dplyr::select(c('Date', 'Fed_Unfed', 'pH', 'OA.pCO2.treat.', (contains("CO2SYS_TA.DIC")))) %>% dplyr::mutate(Calculation = 'TA.DIC')
CO2SYS_TA.pH    <- CarbChemfoodxOAchem %>% dplyr::select(c('Date', 'Fed_Unfed', 'pH', 'OA.pCO2.treat.', (contains("CO2SYS_TA.pH"))))  %>% dplyr::mutate(Calculation = 'TA.pH')
CO2SYS_DIC.pH   <- CarbChemfoodxOAchem %>% dplyr::select(c('Date', 'Fed_Unfed', 'pH', 'OA.pCO2.treat.', (contains("CO2SYS_DIC.pH")))) %>% dplyr::mutate(Calculation = 'DIC.pH')
sub("DIC_.*", "", CO2SYS_TA.DIC[,5])
colnames(CO2SYS_TA.DIC[,5])
colnames(CO2SYS_TA.DIC)[,5]
colnames(CO2SYS_TA.DIC)[5]
sub("DIC_.*", "", colnames(CO2SYS_TA.DIC)[5])
sub("*.DIC_", "", colnames(CO2SYS_TA.DIC)[5])
sub(".*DIC_", "", colnames(CO2SYS_TA.DIC)[5])
