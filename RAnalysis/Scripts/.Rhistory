geom_text(x = 4000, y = .06, label = AllLength_lm_eqn(Resp.Master_OM), parse = TRUE) +
geom_text(x = 4000, y = .05, label = Length_8_lm_eqn(Length_pH8), color="#56B4E9", parse = TRUE) +
geom_text(x = 4000, y = .04, label = Length_7.5_lm_eqn(Length_pH7.5), color="#E69F00", parse = TRUE)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="lm", formula= (resp_volStand_mg_L_hr ~ exp(Length_um)), se=FALSE, color=1) +
#geom_smooth(method = "loess", se=FALSE, color="black", formula = Length_um ~ resp_volStand_mg_L_hr) +
geom_point(aes(colour = as.factor(pH)), size=3) +
scale_color_manual(values=c("#E69F00", "#56B4E9")) +
theme_classic() +
geom_text(x = 4000, y = .06, label = AllLength_lm_eqn(Resp.Master_OM), parse = TRUE) +
geom_text(x = 4000, y = .05, label = Length_8_lm_eqn(Length_pH8), color="#56B4E9", parse = TRUE) +
geom_text(x = 4000, y = .04, label = Length_7.5_lm_eqn(Length_pH7.5), color="#E69F00", parse = TRUE)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
#geom_smooth(method="lm", formula= (resp_volStand_mg_L_hr ~ exp(Length_um)), se=FALSE, color=1) +
#geom_smooth(method = "loess", se=FALSE, color="black", formula = Length_um ~ resp_volStand_mg_L_hr) +
geom_point(aes(colour = as.factor(pH)), size=3) +
scale_color_manual(values=c("#E69F00", "#56B4E9")) +
theme_classic() +
geom_text(x = 4000, y = .06, label = AllLength_lm_eqn(Resp.Master_OM), parse = TRUE) +
geom_text(x = 4000, y = .05, label = Length_8_lm_eqn(Length_pH8), color="#56B4E9", parse = TRUE) +
geom_text(x = 4000, y = .04, label = Length_7.5_lm_eqn(Length_pH7.5), color="#E69F00", parse = TRUE)
AllLength_lm_eqn
lm(resp_volStand_mg_L_hr ~ exp(Length_um), Resp.Master_OM)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="lm", formula= (resp_volStand_mg_L_hr ~ exp(Length_um)), se=FALSE, color=1)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="lm", formula= (resp_volStand_mg_L_hr ~ exp(Length_um)), se=FALSE, color=1) +
#geom_smooth(method = "loess", se=FALSE, color="black", formula = Length_um ~ resp_volStand_mg_L_hr) +
geom_point(aes(colour = as.factor(pH)), size=3)
ggplot(data = Resp.Master_OM, aes(x =  Length_mm, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="lm", formula= (resp_volStand_mg_L_hr ~ exp(Length_mm)), se=FALSE, color=1) +
#geom_smooth(method = "loess", se=FALSE, color="black", formula = Length_um ~ resp_volStand_mg_L_hr) +
geom_point(aes(colour = as.factor(pH)), size=3)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="lm", formula= (resp_volStand_mg_L_hr ~ exp(Length_um)), se=FALSE, color=1) +
#geom_smooth(method = "loess", se=FALSE, color="black", formula = Length_um ~ resp_volStand_mg_L_hr) +
geom_point(aes(colour = as.factor(pH)), size=3) +
scale_color_manual(values=c("#E69F00", "#56B4E9")) +
theme_classic() +
geom_text(x = 4000, y = .06, label = AllLength_lm_eqn(Resp.Master_OM), parse = TRUE) +
geom_text(x = 4000, y = .05, label = Length_8_lm_eqn(Length_pH8), color="#56B4E9", parse = TRUE) +
geom_text(x = 4000, y = .04, label = Length_7.5_lm_eqn(Length_pH7.5), color="#E69F00", parse = TRUE)
Resp.Master_OM
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="lm", formula= (resp_volStand_mg_L_hr ~ exp(Length_um)), se=FALSE, color=1) +
#geom_smooth(method = "loess", se=FALSE, color="black", formula = Length_um ~ resp_volStand_mg_L_hr) +
geom_point(aes(colour = as.factor(pH)), size=3) +
scale_color_manual(values=c("#E69F00", "#56B4E9")) +
theme_classic() +
geom_text(x = 4000, y = .06, label = AllLength_lm_eqn(Resp.Master_OM), parse = TRUE) +
geom_text(x = 4000, y = .05, label = Length_8_lm_eqn(Length_pH8), color="#56B4E9", parse = TRUE) +
geom_text(x = 4000, y = .04, label = Length_7.5_lm_eqn(Length_pH7.5), color="#E69F00", parse = TRUE)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
#geom_smooth(method="lm", formula= (resp_volStand_mg_L_hr ~ exp(Length_um)), se=FALSE, color=1) +
#geom_smooth(method = "loess", se=FALSE, color="black", formula = Length_um ~ resp_volStand_mg_L_hr) +
geom_point(aes(colour = as.factor(pH)), size=3) +
scale_color_manual(values=c("#E69F00", "#56B4E9")) +
theme_classic() +
geom_text(x = 4000, y = .06, label = AllLength_lm_eqn(Resp.Master_OM), parse = TRUE) +
geom_text(x = 4000, y = .05, label = Length_8_lm_eqn(Length_pH8), color="#56B4E9", parse = TRUE) +
geom_text(x = 4000, y = .04, label = Length_7.5_lm_eqn(Length_pH7.5), color="#E69F00", parse = TRUE)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
#geom_smooth(method="lm", formula= (resp_volStand_mg_L_hr ~ exp(Length_um)), se=FALSE, color=1) +
#geom_smooth(method = "loess", se=FALSE, color="black", formula = Length_um ~ resp_volStand_mg_L_hr) +
geom_point(aes(colour = as.factor(pH)), size=3) +
scale_color_manual(values=c("#E69F00", "#56B4E9"))
AllLength_lm_eqn <- function(Resp.Master_OM){
#m <- lm(resp_volStand_mg_L_hr ~ Length_um, Resp.Master_OM);
m <- lm(resp_volStand_mg_L_hr ~ exp(Length_um), Resp.Master_OM);
eq <- substitute(italic(y) == a %.% (x)^b*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
AllLength_lm_eqn
eq
lm(resp_volStand_mg_L_hr ~ exp(Length_um), Resp.Master_OM)
lm(resp_volStand_mg_L_hr ~ exp(Length_mm), Resp.Master_OM)
Resp.Master_OM$y = 9.125e-03*(Resp.Master_OM$Length_mm^3.695e-08)
Resp.Master_OM$y = 9.125e-03*(Resp.Master_OM$Length_mm^3.695e-08)
Resp.Master_OM$resp_volStand_mg_L_hr
Resp.Master_OM$y
9.125e-03*(Resp.Master_OM$Length_mm^3.695e-08)
3.695e-08
Resp.Master_OM$y = (Resp.Master_OM$Length_mm^3.695e-08)
Resp.Master_OM$resp_volStand_mg_L_hr
Resp.Master_OM$y
Resp.Master_OM$Length_mm
Resp.Master_OM$y = (Resp.Master_OM$Length_mm^.0000000369)
Resp.Master_OM$resp_volStand_mg_L_hr
Resp.Master_OM$y
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="lm", formula= (resp_volStand_mg_L_hr ~ exp(Length_um)), se=FALSE, color=1)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="lm", formula= (resp_volStand_mg_L_hr ~ exp(Length_um)), se=FALSE)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm", se=FALSE)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm", ,
method.args=list(family=gaussian(link="log")))
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm", ,
method.args=list(family=gaussian(link="exp")))
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm", ,
method.args=list(family= = quasibinomial(link = 'logit')))
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm", ,
method.args=list(family= quasibinomial(link = 'logit')))
?method.args
??method.args
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm", ,
# method.args=list(family= quasibinomial(link = 'logit'))) +
method.args=list(family="binomial"))
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm",
# method.args=list(family= quasibinomial(link = 'logit'))) +
method.args=list(family="binomial"))
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm",
method.args=list(family= quasibinomial(link = 'logit'))) +
# method.args=list(family="binomial"))
#geom_smooth(method = "loess", se=FALSE, color="black", formula = Length_um ~ resp_volStand_mg_L_hr) +
geom_point(aes(colour = as.factor(pH)), size=3) +
scale_color_manual(values=c("#E69F00", "#56B4E9")) +
theme_classic() +
geom_text(x = 4000, y = .06, label = AllLength_lm_eqn(Resp.Master_OM), parse = TRUE) +
geom_text(x = 4000, y = .05, label = Length_8_lm_eqn(Length_pH8), color="#56B4E9", parse = TRUE) +
geom_text(x = 4000, y = .04, label = Length_7.5_lm_eqn(Length_pH7.5), color="#E69F00", parse = TRUE)
ggplot(data = Resp.Master_OM, aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm",
method.args=list(family= quasibinomial(link = 'logit'))) #+
Resp.Master_OM %>% dplyr::filter(pH %in% 7.5) %>%
ggplot(aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm",
method.args=list(family= quasibinomial(link = 'logit'))) #+
Resp.Master_OM %>% dplyr::filter(pH %in% 8) %>%
ggplot(aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm",
method.args=list(family= quasibinomial(link = 'logit'))) #+
Resp.Master_OM %>% dplyr::filter(pH %in% 8) %>%
ggplot(aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm",
method.args=list(family= quasibinomial(link = 'logit'))) #+
Resp.Master_OM %>% dplyr::filter(pH %in% 7.5) %>%
ggplot(aes(x =  Length_um, y = resp_volStand_mg_L_hr)) +
geom_point() +
geom_smooth(method="glm",
method.args=list(family= quasibinomial(link = 'logit'))) #+
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
library(ggplot2)
library(tidyverse)
library(car)
library(nlme)
library(multcompView)
library(agricolae)
library(Rmisc)
library(lmerTest)
library(lme4)
library(pander)
library(performance)
library(Rmisc)
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
#setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length            <-read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Data/Survival_Size/Length_master.csv", header = TRUE)
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
#setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length            <-read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis/Data/Survival_Size/Length_master.csv", header = TRUE)
survival_juvenile <-read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis/Data/Survival_Size/JuvenileSurvival_LengthMeans.csv", header = TRUE)
survival_larvae   <-read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis/Data/Survival_Size/Survival_2d_18d.csv", header = TRUE)
# Structure of the data - to check that variables are properly assigned to factor or variable
str(length)
#First make calculations for means and standard error
Length_summ <- summarySE(length, measurevar="Length_um", groupvars=c("Age_DPF", "pH", "Fed_Unfed"))
Length_summ
## Use geom_line and geom_point to plot over time
pPlot1<-ggplot(data=Length_summ, aes(x=Age_DPF, y=Length_um, color=pH)) +
geom_line( stat = "identity", size=1.0)+
geom_point()+
#  scale_color_manual(values=c( "orange1","darkorange2","springgreen2","forestgreen", "grey"))+
geom_errorbar(aes(ymin=Length_um-se, ymax=Length_um+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Length (µm)")
pPlot1
#First make calculations for means and standard error
LarvaeSurvival_Summ <- summarySE(survival_larvae, measurevar="Survival", groupvars=c("Day", "Treatment")) %>%
dplyr::mutate(pCO2 = case_when(Treatment == "Low"  ~ "500 μatm", Treatment == "Moderate" ~ "800 μatm", Treatment == "High" ~ "1200 μatm")) # cahmber volumes on different dates with different instruments
#stL$Treatment <- factor(stL$trt,                 # Relevel group factor
#                         levels = c("Low OA", "Moderate OA", "High OA"))
LarvaeSurvival_Summ$pCO2 <- factor(LarvaeSurvival_Summ$pCO2, c("500 μatm","800 μatm","1200 μatm"))
## Use geom_line and geom_point to plot over time
LarvaeSurvival_Plot <-ggplot(data=LarvaeSurvival_Summ, aes(x=Day, y=Survival, color=pCO2)) +
geom_line( stat = "identity", size=1.0)+
geom_point()+
scale_color_manual(values=c("darkorange2","forestgreen", "purple"))+
geom_errorbar(aes(ymin=Survival-se, ymax=Survival+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Survival (%)")+
theme(text = element_text(size=15))
LarvaeSurvival_Plot
LarvaeSurvival_Plot
#First make calculations for means and standard erro
survival_juvenile$Fed_Unfed <-  as.factor(gsub("^(?:[^_]+_){2}([^_]+).*", "\\1", survival_juvenile$trt))
levels(survival_juvenile$Fed_Unfed) <- c("High food", "Low food")
survival_juvenile$pCO2 <-  as.factor(gsub("^(?:[^_]+_){1}([^_]+).*", "\\1", survival_juvenile$trt))
levels(survival_juvenile$pCO2) <- c("800 μatm", "500 μatm")
Survival_Means <- summarySE(survival_juvenile, measurevar="Survival", groupvars=c("Age_DPF", "pCO2", "Fed_Unfed"))
Survival_Means$pCO2 <- factor(Survival_Means$pCO2, c("500 μatm","800 μatm"))
## Use geom_line and geom_point to plot over time
Survival_All_plot <- ggplot(data=Survival_Means, aes(x=Age_DPF, y=Survival, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=Survival-se, ymax=Survival+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Survival (%)")  +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
Survival_All_plot
Length_Means <- summarySE(length, measurevar="Length_um", groupvars=c("Age_DPF", "pH", "Fed_Unfed"))
Length_Means <- Length_Means %>%
dplyr::mutate(pCO2 = case_when(pH == 8 ~ "500 μatm",  pH == 7.5 ~ "800 μatm")) %>%
dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == "fed" ~ "High food",  Fed_Unfed == "unfed" ~ "Low food"))
## Use geom_line and geom_point to plot over time
Length_All_plot <- ggplot(data=Length_Means, aes(x=Age_DPF, y=(Length_um/1000), color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=(Length_um/1000)-(se/1000), ymax=(Length_um/1000)+(se/1000)), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Shell length (mm)")  +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
Length_All_plot
length
length %>%
dplyr::filter(Age %in% 92)
length %>%
dplyr::filter(Age_DPF %in% 92)
survival_juvenile
survival_larvae
dryweight_CI      <-read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis/Data/Survival_Size/20211026_length_CI_raw.csv", header = TRUE)
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
#setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
dryweight_CI      <-read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis/Data/Survival_Size/20211026_length_CI_raw.csv", header = TRUE)
dryweight_CI      <-read.csv(file="C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis/Data/Survival_Size/20211026_length_CI.csv", header = TRUE)
dryweight_CI
#First make calculations for means and standard error
REGRESSION_LengthD.Drytissue<- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "tissue") %>%
ggplot(aes(x=Shell.Length, y=weight, color=pH)) +
geom_line( stat = "identity", size=1.0)+
geom_point()+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Length (µm)") +
scale_y_continuous(name ="Tissue weight (g)")
REGRESSION_LengthD.Drytissue
#First make calculations for means and standard error
REGRESSION_LengthD.Drytissue<- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "tissue") %>%
ggplot(aes(x=Shell.Length, y=weight, color=pH)) +
geom_point()+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Length (µm)") +
scale_y_continuous(name ="Tissue weight (g)")
REGRESSION_LengthD.Drytissue
#First make calculations for means and standard error
REGRESSION_LengthD.Drytissue<- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "tissue") %>%
ggplot(aes(x=Shell.Length, y=weight, color=pH)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Length (µm)") +
scale_y_continuous(name ="Tissue weight (g)")
REGRESSION_LengthD.Drytissue
#First make calculations for means and standard error
REGRESSION_Length.Drytissue<- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "tissue") %>%
ggplot(aes(x=Shell.Length, y=weight, color=pH)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Length (µm)") +
scale_y_continuous(name ="Tissue weight (g)")
REGRESSION_Length.Drytissue
dryweight_CI
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
reshape2::melt(value.name = "weights")
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
reshape2::melt(value.name = "shell.or.tissue")
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
reshape2::cast(value.name = "shell.or.tissue")
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
reshape2::dcast(shell.or.tissue ~ weights)
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
reshape2::dcast(shell.or.tissue ~ weights, weights)
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
reshape2::dcast(shell.or.tissue, weights)
install.packages("maditr")
library(maditr)
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
maditr::dcast(shell.or.tissue, weights)
?dcast
library(reshape2)
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
reshape2::dcast(shell.or.tissue, weights)
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
reshape2::dcast(shell.or.tissue ~ weights)
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
reshape2::dcast("shell.or.tissue" ~ "weights")
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
reshape2::dcast("weights" ~ "shell.or.tissue")
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
tidyr::spread(shell.or.tissue, weight)
REGRESSION_DryShell.Drytissue<- dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
tidyr::spread(shell.or.tissue, weight)
REGRESSION_DryShell.Drytissue<- dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
tidyr::spread(weight,shell.or.tissue)
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
tidyr::spread(weight,shell.or.tissue
dryweight_CI %>%
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight"))
REGRESSION_DryShell.Drytissue<-
Tissue <- dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
filter(shell.or.tissue %in% "tissue") %>%
dplyr::rename(shell.or.tissue = tissue)
REGRESSION_DryShell.Drytissue<-
Tissue <- dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
filter(shell.or.tissue %in% "tissue") %>%
dplyr::rename(tissue = shell.or.tissue && tissue_weight = weight)
REGRESSION_DryShell.Drytissue<-
Tissue <- dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
filter(shell.or.tissue %in% "tissue") %>%
dplyr::rename(tissue = shell.or.tissue) && tissue_weight = weight)
dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
filter(shell.or.tissue %in% "tissue") %>%
dplyr::rename(tissue = shell.or.tissue)
REGRESSION_DryShell.Drytissue<-
Tissue <- dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
filter(shell.or.tissue %in% "tissue") %>%
dplyr::rename(tissue = shell.or.tissue | tissue_weight = weight)
REGRESSION_DryShell.Drytissue<-
Tissue <- dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
filter(shell.or.tissue %in% "tissue") %>%
dplyr::rename(c(tissue = shell.or.tissue, tissue_weight = weight))
Tissue
Shell <- dryweight_CI %>%
dplyr::select(c("shell.or.tissue", "weight")) %>%
filter(shell.or.tissue %in% "shell") %>%
dplyr::rename(c(tissue = shell.or.tissue, shell_weight = weight))
Tissue.Shell.Dryweights <- cbind(Tissue, Shell)
REGRESSION_DryShell.Drytissue <-   Tissue.Shell.Dryweights %>%
ggplot(aes(x=tissue_weight, y=shell_weight)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell weight (s)") +
scale_y_continuous(name ="Tissue weight (g)")
REGRESSION_DryShell.Drytissue
Tissue.Shell.Dryweights %>%
ggplot(aes(x=tissue_weight, y=shell_weight)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell weight (s)") +
scale_y_continuous(name ="Tissue weight (g)")
Tissue.Shell.Dryweights
Tissue.Shell.Dryweights %>%
ggplot(aes(x=tissue_weight, y=shell_weight)) +
geom_point()+
theme_classic()
Tissue.Shell.Dryweights
Tissue.Shell.Dryweights$tissue_weight <- as.numeric(Tissue.Shell.Dryweights$tissue_weight)
Tissue.Shell.Dryweights$shell_weight <- as.numeric(Tissue.Shell.Dryweights$shell_weight)
REGRESSION_DryShell.Drytissue <-  Tissue.Shell.Dryweights %>%
ggplot(aes(x=tissue_weight, y=shell_weight)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell weight (s)") +
scale_y_continuous(name ="Tissue weight (g)")
REGRESSION_DryShell.Drytissue
REGRESSION_DryShell.Drytissue <-  Tissue.Shell.Dryweights %>%
ggplot(data = Tissue.Shell.Dryweights, aes(x=tissue_weight, y=shell_weight)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell weight (s)") +
scale_y_continuous(name ="Tissue weight (g)")
ggplot(data = Tissue.Shell.Dryweights, aes(x=tissue_weight, y=shell_weight)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell weight (s)") +
scale_y_continuous(name ="Tissue weight (g)")
Tissue.Shell.Dryweights
Tissue.Shell.Dryweights %>%
dplyr::select(!"tissue")
Tissue.Shell.Dryweights %>%
dplyr::select(!c("tissue", "tissue")) %>%
ggplot(aes(x=tissue_weight, y=shell_weight)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell weight (s)") +
scale_y_continuous(name ="Tissue weight (g)")
REGRESSION_DryShell.Drytissue <- Tissue.Shell.Dryweights %>%
dplyr::select(!c("tissue", "tissue")) %>%
ggplot(aes(x=tissue_weight, y=shell_weight)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell weight (s)") +
scale_y_continuous(name ="Tissue weight (g)")
REGRESSION_DryShell.Drytissue
REGRESSION_DryShell.Drytissue <- Tissue.Shell.Dryweights %>%
dplyr::select(!c("tissue", "tissue")) %>%
ggplot(aes(x=tissue_weight, y=shell_weight)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Shell weight (g)") +
scale_y_continuous(name ="Tissue weight (g)")
REGRESSION_DryShell.Drytissue
REGRESSION_DryShell.Drytissue <- Tissue.Shell.Dryweights %>%
dplyr::select(!c("tissue", "tissue")) %>%
ggplot(aes(x=tissue_weight, y=shell_weight)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Dry shell weight (g)") +
scale_y_continuous(name ="Dry tissue weight (g)")
REGRESSION_DryShell.Drytissue
REGRESSION_Length.Drytissue
REGRESSION_DryShell.Drytissue <- Tissue.Shell.Dryweights %>%
dplyr::select(!c("tissue", "tissue")) %>%
ggplot(aes(x=tissue_weight, y=shell_weight)) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Dry shell weight (g)") +
scale_y_continuous(name ="Dry tissue weight (g)")
REGRESSION_DryShell.Drytissue
