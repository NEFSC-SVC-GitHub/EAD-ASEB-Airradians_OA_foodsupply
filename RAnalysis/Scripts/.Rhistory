stL <- summarySE(df, measurevar="Length", groupvars=c("Age_DPF", "pCO2", "Fed_Unfed")) %>% dplyr::filter(Age_DPF %in% 92)
#stL$Treatment <- factor(stL$trt,                 # Relevel group factor
#                         levels = c("Low OA", "Moderate OA", "High OA"))
stL$pCO2 <- factor(stL$pCO2, c("500 μatm","800 μatm"))
## Use geom_line and geom_point to plot over time
pPlot1<-ggplot(data=stL, aes(x=Age_DPF, y=Length, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=Survival-se, ymax=Survival+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Survival (%)")  +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
pPlot1
## Use geom_line and geom_point to plot over time
pPlot1<-ggplot(data=stL, aes(x=Age_DPF, y=Length, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Survival (%)")  +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
pPlot1
stL
stL <- summarySE(df, measurevar="Length", groupvars=c("Age_DPF", "pCO2", "Fed_Unfed")) %>% dplyr::filter(!Age_DPF %in% 92)
#stL$Treatment <- factor(stL$trt,                 # Relevel group factor
#                         levels = c("Low OA", "Moderate OA", "High OA"))
stL$pCO2 <- factor(stL$pCO2, c("500 μatm","800 μatm"))
## Use geom_line and geom_point to plot over time
pPlot1<-ggplot(data=stL, aes(x=Age_DPF, y=Length, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Survival (%)")  +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
pPlot1
pPlot1<-ggplot(data=stL, aes(x=Age_DPF, y=Length, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="shell length (μm)")  +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
pPlot1
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Survival_size/Juvenile_length_FoodxOA.pdf"))
pPlot1
dev.off()
pPlot1<-ggplot(data=stL, aes(x=Age_DPF, y=Length, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=Length-se, ymax=Length+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
scale_y_continuous(name ="Shell length (μm)")  +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
pPlot1
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Survival_size/Juvenile_length_FoodxOA.pdf"))
pPlot1
dev.off()
ggplot(Resp_0930, aes(x = factor(pCO2, level = c('Low', 'High')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
ylim(0, 3) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 66 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
ggplot(Resp_01026, aes(x = factor(pCO2, level = c('Low', 'High')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/202101026_respiration.pdf"))
ggplot(Resp_01026, aes(x = factor(pCO2, level = c('Low', 'High')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
dev.off()
Resp_01026 %>% dplyr::filter(Fed_Unfed %in% 'High food') %>%
ggplot(aes(x = factor(pCO2, level = c('Low', 'High')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
# ylim(0, 1) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_01026 %>% dplyr::filter(Fed_Unfed %in% 'Low food') %>%
ggplot(aes(x = factor(pCO2, level = c('Low', 'High')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
# ylim(0, 1) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
pval_pCO2
pval_Fed
pander(summary(LMmod_01026), style='rmarkdown')
DF_Fed    <- paste( (summary(LMmod_01026)[[1]][["Df"]])[3], (summary(LMmod_01026)[[1]][["Df"]])[4], sep = '/')
Fval_Fed  <- (summary(LMmod_01026)[[1]][["F value"]])[3]
pval_Fed  <- (summary(LMmod_01026)[[1]][["Pr(>F)"]])[3]
Fval_Int  <- (summary(LMmod_01026)[[1]][["F value"]])[3]
pval_Int  <- (summary(LMmod_01026)[[1]][["Pr(>F)"]])[3]
pval_Int
Fval_Int
DF_Int
DF_Int    <- paste( (summary(LMmod_01026)[[1]][["Df"]])[3], (summary(LMmod_01026)[[1]][["Df"]])[4], sep = '/')
DF_Int
pander(summary(LMmod_0930), style='rmarkdown')
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(latex2exp)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # personal computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
#setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
resp.data    <- read.csv(file="Output/Respiration/Cumulative_resp_alpha0.4_15sectrunc1hour.csv", header=T) %>% dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt') # read the calculate raw rates from 'resp_LoLin' script - contains the calculated rate (not normalized for blanks) for each sensor-channel
exp_metadata <- read.csv(file="Data/ExperimentMetadata.csv", header=T) # treatment assignments to 'Chamber_Tank'
lengths      <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T)
resp.ref     <- read.csv(file="Data/Respiration/Reference_master.csv", header=T) %>% dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt')
# merge the exp_metadata with the resp.data
resp.ref_length_merged                 <- merge(resp.ref, lengths) # all TRUE allows us to keep the blanks
resp.data_merged                       <- merge(resp.data, resp.ref_length_merged) %>% # out master file moving forward....
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data")))
kable(head(resp.data_merged))
resp.data_merged[94,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lpc
resp.data_merged[110,c(1:6)] #  C5 RR_9.30.21_PM_Plate_2_Run_2.csv	0.029052351	-0.076034441	-0.076034441
resp.data_merged[95,c(1:6)]  # 	C1 RR_9.30.21_PM_Plate_1_Run_2.csv	0.011656487	0.011656487	0.011656487  - ommit this
resp.data_merged[94,4] <- resp.data_merged[94,5] # 20210930_Plate_2_Run_2_C5_regression - Lz and Leq call better regression than Lpc
resp.data_merged[110,4] <- resp.data_merged[110,5] # 20210930_Plate_2_Run_1_C1_regression - Lz and Leq call better regression than Lpc
resp.data_merged[95,4] <- NA # 20210930_Plate_1_Run_2_C1_regression  - ommit this
resp.data_merged[94,c(1:6)]
resp.data_merged[110,c(1:6)]
resp.data_merged[95,c(1:6)]
blanks_total <- data.frame() # start dataframe
blanks.table <- data.frame(matrix(nrow = 1,ncol = 5)) # make a table template
colnames(blanks.table)<-c('Date', 'Channel', 'mean_Lpc', 'mean_Leq' , 'mean_Lz') # names for comuns in the for loop
blanks_all_raw <- data.frame(merge(resp.ref, resp.data, by = c('Date', 'Channel', 'Filename')) %>%
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data"))) %>%
dplyr::filter(Chamber_tank  == 'blank') %>%
dplyr::filter(Lpc <0) %>%
dplyr::filter(!Date == '9/30/2021' | !Lpc < -0.035) %>%
dplyr::filter(!Date == '10/26/2021'  | !Channel == "CH8" | !Run == "2" )) # omit a bad blank that contained a bad seal, noted on the respiration sampling day during the trial
blanks_means <- blanks_all_raw %>%
dplyr::group_by(Date, pH, filetype) %>%
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
kable((blanks_all_raw)[,c(1:3,6,8,12:14)])
kable(blanks_means)
Resp.Master <- merge(resp.data_merged, blanks_means, by=c("Date", "pH", "filetype")) %>% # NOTE: this repeats for every distinct length value
dplyr::mutate(resp_norm = Lpc - BLANK.mean_Lpc) # ommits respiration rate values showing an increase in O2 over time
Resp.Master_OM <- Resp.Master %>% dplyr::filter(!resp_norm > 0) %>% # ommit respiration values that are positive
dplyr::mutate(volume = case_when(filetype == "LoLigo_data" & Date == '9/14/2021' ~ 1.7, filetype == "LoLigo_data" & Date == '10/26/2021' ~ 40, filetype == "SDR_data" ~ 2.2)) %>% # cahmber volumes on different dates with
dplyr::mutate(volume = case_when(filetype == "LoLigo_data" & Date == '9/14/2021' ~ 1.7, filetype == "LoLigo_data" & Date == '10/26/2021' ~ 40, filetype == "SDR_data" ~ 2.2)) %>%  # cahmber volumes on different dates with different instruments
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food", Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp.outliers <- Resp.Master %>% dplyr::filter(resp_norm > 0) # call the values with positive resp rates, measing they were slower than the blank!
print(Resp.outliers)
write.csv(Resp.Master_OM, "C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
Resp.Master_OM$resp_norm
abs(Resp.Master_OM$resp_norm)*1000000
Resp.Master_OM$volume/1000
Resp.Master_OM <- Resp.Master_OM[!is.na(Resp.Master_OM$Length_um),]
Resp.Master_OM$resp_ng_L_umlLength_hr <- (
( ( (abs(Resp.Master_OM$resp_norm)*1000000) * # call absolute value of resp in mg per minute - convert to ng min-1
(Resp.Master_OM$volume/1000) ) / # vial volume for loligo 8 channel runs was 2.2 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master_OM$Length_um) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ng Liter-1 individual-1 hour-1
RespSumTab <- summarySE(Resp.Master_OM, measurevar="resp_ng_L_umlLength_hr", groupvars=c("Age", "pCO2", "Fed_Unfed"))
RespSumTab$pCO2 <- factor(RespSumTab$pCO2, c("500 μatm","800 μatm"))
## Use geom_line and geom_point to plot over time
Resp_geomline<-ggplot(data=RespSumTab, aes(x=Age, y=resp_ng_L_umlLength_hr, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=resp_ng_L_umlLength_hr-se, ymax=resp_ng_L_umlLength_hr+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "F1 Scallops: Food x OA Experiment",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%μ*m^{-1}%.% hr^{-1}~")")) +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
Resp_geomline
# model effect of treatment on resp rate 20210507
Resp_0914 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/14/2021')  %>% # call only 9/14
dplyr::filter(!Chamber_tank  %in% 'blank')
Resp_0914 %>% dplyr::group_by(Chamber_tank) %>% dplyr::summarise(n()) # tank replication
LMmod_0914 <- aov(lm(resp_ng_L_umlLength_hr~pCO2,data=Resp_0914))
pander(summary(LMmod_0914), style='rmarkdown')
check_model(LMmod_0914) # observe the diagnostics of the model
shapiro.test(residuals(LMmod_0914)) #  normal - 0.3875
leveneTest(LMmod_0914) # good - 0.6186
ggplot(Resp_0914, aes(x = factor(pCO2, level = c('Low', 'High')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
ylim(0, 3) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%μ*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) # +
ggplot(Resp_0914, aes(x = factor(pCO2, level = c('Low', 'High')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
ylim(0, 3) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%μ*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) # +
Resp_0914
ggplot(Resp_0914, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
ylim(0, 3) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%μ*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) # +
ggplot(Resp_0914, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Low OA', 'Moderate OA')) +
ylim(0, 3) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%μ*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) # +
ggplot(Resp_0914, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Low OA', 'Moderate OA')) +
ylim(0, 3) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%μ*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) # +
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/20210914_respiration.pdf"))
ggplot(Resp_0914, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('Low OA', 'Moderate OA')) +
ylim(0, 3) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%μ*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) # +
# annotate("text", x=1.2, y=2.8, size = 4, label = "aov(Resp~pCO2)") +
# annotate("text", x=1.2, y=2.6, size = 4, label= paste('DF =',DF,'F =', signif(Fval, digits=3), 'p value =', signif(pval, digits=3), sep=" "))
dev.off()
Resp_0930 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/30/2021')  %>% # call only 9/14
dplyr::select(-Center)
Resp_0930 %>% dplyr::group_by(Chamber_tank, Food ) %>% dplyr::summarise(n()) # tank replication
LMmod_0930 <- aov(lm(resp_ng_L_umlLength_hr~pCO2*Fed_Unfed ,data=Resp_0930))
pander(summary(LMmod_0930), style='rmarkdown')
check_model(LMmod_0930) # observe the diagnostics of the model
shapiro.test(residuals(LMmod_0930)) #  normal - 0.07641
leveneTest(LMmod_0930) # good - 0.1648
ggplot(Resp_0930, aes(x = factor(pCO2, level = c('Low', 'High')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
ylim(0, 3) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 66 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
ggplot(Resp_0930, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
ylim(0, 3) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 66 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
ggplot(Resp_0930, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
ylim(0, 3) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 66 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
ggplot(Resp_0930, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
ylim(0, 3) +
scale_x_discrete(labels=c('Low OA', 'Moderate OA')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 66 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
Resp_01026 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '10/26/2021')  %>% # call only 10/14
dplyr::select(-Center)
Resp_01026 %>% dplyr::group_by(Chamber_tank, Food ) %>% dplyr::summarise(n()) # tank replication
LMmod_01026 <- aov(lm(resp_ng_L_umlLength_hr~pCO2*Fed_Unfed ,data=Resp_01026))
pander(summary(LMmod_01026), style='rmarkdown')
check_model(LMmod_01026) # observe the diagnostics of the model
check_model(LMmod_01026) # observe the diagnostics of the model
shapiro.test(residuals(LMmod_01026)) #  normal - 0.3096
shapiro.test(residuals(LMmod_01026)) #  normal - 0.3096
leveneTest(LMmod_01026) # 0.1998
TukeyHSD(LMmod_01026)
ggplot(Resp_01026, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
ggplot(Resp_01026, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
TukeyHSD(LMmod_01026)
ggplot(Resp_01026, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/202101026_respiration.pdf"))
ggplot(Resp_01026, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_umlLength_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels=c('~500 μatm', '~800 μatm')) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
dev.off()
