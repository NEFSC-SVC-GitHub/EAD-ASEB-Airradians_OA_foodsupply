Length_time
# resp_µmol_L_mm_Length_hr
RespSumTab_Len      <- Resp.Master_OM[!is.na(Resp.Master_OM$resp_µmol_L_mm_Length_hr),] %>%
summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=c("Age", "pCO2", "Fed_Unfed"))
RespSumTab_Len$pCO2 <- factor(RespSumTab_Len$pCO2, c("500 μatm","800 μatm"))
## Use geom_line and geom_point to plot over time
Resp_LengthStand    <- ggplot(data=RespSumTab_Len, aes(x=Age, y=resp_µmol_L_mm_Length_hr, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=resp_µmol_L_mm_Length_hr-se, ymax=resp_µmol_L_mm_Length_hr+se), width=.2,
position=position_dodge(.1))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
scale_x_continuous(name ="Age (d)") +
labs(title = "Resp corrected by shell length",
y = expression(μmol~L^{-1}~O[2]%.%mm^{-1}~shell~length%.% hr^{-1})) +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
# resp_µmol_mg_hr
SumTab_WholeDW      <- Resp.Master_OM[!is.na(Resp.Master_OM$resp_µmol_mg_hr),] %>%
summarySE(measurevar="whole_Dry_weight", groupvars=c("Age", "pCO2", "Fed_Unfed"))
SumTab_WholeDW$pCO2 <- factor(SumTab_WholeDW$pCO2, c("500 μatm","800 μatm"))
## Use geom_line and geom_point to plot over time
WholeDW_time    <- ggplot(data=SumTab_WholeDW, aes(x=Age, y=whole_Dry_weight, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=whole_Dry_weight-se, ymax=whole_Dry_weight+se), width=.2,
position=position_dodge(.1))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
scale_x_continuous(name ="Age (d)") +
labs(title = "Whole dry weight over time..",
y = "Whole dry weight (mg)") +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
RespSumTab_DW      <- Resp.Master_OM[!is.na(Resp.Master_OM$resp_µmol_mg_hr),] %>%
summarySE(measurevar="resp_µmol_mg_hr", groupvars=c("Age", "pCO2", "Fed_Unfed"))
RespSumTab_DW$pCO2 <- factor(RespSumTab_DW$pCO2, c("500 μatm","800 μatm"))
## Use geom_line and geom_point to plot over time
Resp_DryWgtStand   <- ggplot(data=RespSumTab_DW, aes(x=Age, y=resp_µmol_mg_hr, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=resp_µmol_mg_hr-se, ymax=resp_µmol_mg_hr+se), width=.2,
position=position_dodge(.1))+
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
scale_x_continuous(name ="Age (d)") +
labs(title = "Resp corrected by whole animal dry weight",
y = expression(μmol~L^{-1}~O[2]%.%mg^{-1}~whole~DW%.% hr^{-1})) +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
# pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/All_Respiration_normalized_summary.pdf"), width = 10, height = 8)
ggarrange(P_Length_resp_all ,Length_time, Resp_LengthStand,
P_WholeDW_resp_all, WholeDW_time, Resp_DryWgtStand, ncol = 3, nrow = 2, heights=c(1,1))
# model effect of treatment on resp rate 20210507
Resp_0914 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/14/2021')  %>% # call only 9/14
dplyr::filter(!Chamber_tank  %in% 'blank')
Resp_0914 %>% dplyr::group_by(Chamber_tank) %>% dplyr::summarise(n()) # tank replication
Resp_0914 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=c("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp_0930 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/30/2021')  %>% # call only 9/14
dplyr::select(-Center) %>%
dplyr::mutate(pHxFood = paste(pH,Food, sep = "_")) %>%
dplyr::mutate(random_fact = as.factor(paste(Chamber_tank, Food, sep="_")))
kable(Resp_0930 %>% dplyr::group_by(Chamber_tank, Food) %>% dplyr::summarise(n())) # tank replication - lowest value was 2 for 7.5_D unfed
Resp_0930 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=(c("pH", "Food"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# Linear mixed effects model with random effect of Replicate
LMEmod_0930<-lme(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, random=~1|random_fact, data=Resp_0930)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  48   |  133.9  | 1.776e-15 |
# |    **pCO2**     |   1   |  12   |  2.021  |  0.1806   |
# |    **Food**     |   1   |  12   |  8.888  |  0.01146  |
# |  **pCO2:Food**  |   1   |  12   |  1.032  |  0.3298   |
pander(anova(LMEmod_0930), style='rmarkdown')
# plot
Resp930_Length <- ggplot(Resp_0930, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_mm_Length_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 120)) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930 (shell length stand.)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%mm^{-1}~shell~length%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")"))  +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
Resp930_Length
summary(aov(lm(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, data=Resp_0930)))
Resp_0930
Resp_0930_HF <- Resp_0930 %>% dplyr::filter(Food %in% 'fed')
summary(aov(lm(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, data=Resp_0930_HF)))
summary(aov(lm(resp_µmol_L_mm_Length_hr ~ pCO2, data=Resp_0930_HF)))
summary(Resp930_ANOVA) # summary mod
# Two-way ANOVA (without the random effect)
Resp930_ANOVA <- aov(resp_µmol_L_mm_Length_hr ~ pCO2*Food, data=Resp_0930) # run mod
summary(Resp930_ANOVA) # summary mod
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
# library(devtools)
library(ggpubr)
library(hrbrthemes)
library(nlme)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # personal computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
resp.data       <- read.csv(file="Output/Respiration/Cumulative_resp_alpha0.4_15sectrunc1hour.csv", header=T) %>%
dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt') # read the calculate raw rates from 'resp_LoLin' script - contains the calculated rate (not normalized for blanks) for each sensor-channel
exp_metadata    <- read.csv(file="Data/ExperimentMetadata.csv", header=T) # treatment assignments to 'Chamber_Tank'
lengths         <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T)
resp.ref        <- read.csv(file="Data/Respiration/Reference_master.csv", header=T) %>% dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt')
DWs_Len_1026    <- read.csv(file="Data/Survival_Size/20211026_lengths_dryweights.csv", header=T)
DWs_Len_914.930 <- read.csv(file="Data/Survival_Size/2021914_930_dryweights.csv", header=T)
# merge the exp_metadata with the resp.data
resp.ref_length_merged                 <- merge(resp.ref, lengths) # all TRUE allows us to keep the blanks
resp.data_merged                       <- merge(resp.data, resp.ref_length_merged) %>% # out master file moving forward....
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data")))
kable(head(resp.data_merged))
resp.data_merged[95 ,c(1:6)]  # 	C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq call better regression than Lpc
resp.data_merged[111,c(1:6)] #  C5 RR_9.30.21_PM_Plate_2_Run_2.csv	0.029052351	-0.076034441	-0.076034441
resp.data_merged[96 ,c(1:6)]  # 	C1 RR_9.30.21_PM_Plate_1_Run_2.csv	0.011656487	0.011656487	0.011656487  - ommit this
resp.data_merged[23 ,c(1:6)] # CH5	Run_1_raw.txt	-0.00704407	-0.005910146	-0.005910146 - omit and change based on visual of the raw data - resp between 60-100 minuntss = -0.0275 (LoLin.R scrip tat the end - redo error data)
resp.data_merged[95 ,4]  <- resp.data_merged[95,5] # 20210930_Plate_2_Run_2_C5_regression - Lz and Leq call better regression than Lpc
resp.data_merged[111,4]  <- resp.data_merged[111,5] # 20210930_Plate_2_Run_1_C1_regression - Lz and Leq call better regression than Lpc
resp.data_merged[96 ,4]  <- as.numeric(-0.0296) # 20210930_Plate_1_Run_2_C1_regression - plot shows noise after the 20 minutes mark, we reran this at the end of the LoLin script, insert here!
resp.data_merged[23 ,4]  <- as.numeric(-0.0275)
resp.data_merged[95 ,c(1:6)]  # -0.0608251
resp.data_merged[111,c(1:6)] # -0.07603444
resp.data_merged[96 ,c(1:6)]  # -0.0296
resp.data_merged[23 ,c(1:6)]  # -0.0275
# View(resp.data_merged)
blanks_total <- data.frame() # start dataframe
blanks.table <- data.frame(matrix(nrow = 1,ncol = 5)) # make a table template
colnames(blanks.table)<-c('Date', 'Channel', 'mean_Lpc', 'mean_Leq' , 'mean_Lz') # names for comuns in the for loop
blanks_all_raw <- data.frame(merge(resp.ref, resp.data, by = c('Date', 'Channel', 'Filename')) %>%
dplyr::filter(!Date ==  '9/14/2021'   | !Filename == 'Run_1_raw.txt') %>%  # run 1 was restarted due to poor data
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data"))) %>%
dplyr::filter(Chamber_tank  == 'blank') %>%
# dplyr::filter(Lpc <0) %>%
dplyr::filter(!Date == '9/30/2021' | !Lpc < -0.035) %>% #omits C6 RR_9.30.21_AM_Plate_1_Run_1.csv	8.0	blank - View the Lolin plot, looks noisy and a fast outlier from the others
dplyr::filter(!Date == '10/26/2021'  | !Channel == "CH8" | !Run == "2" ) %>%  # omit a bad blank that contained a bad seal, noted on the respiration sampling day during the trial
dplyr::filter(!Date == '10/26/2021'  | !Channel == "CH8" | !Run == "3" ) %>%  # omit a bad blank that contained a bad seal, noted on the respiration sampling day during the trial
dplyr::filter(!Date ==  '9/30/2021'   | !pH == "7.5" | !Channel == "B2" | !Run == "1" | !Plate == "1" ) %>%
dplyr::select(c(Date, pH, Run, Plate, Lpc, Leq ,Lz, Channel, Food, Filename, filetype, Chamber_tank)) %>%
dplyr::arrange(Date, Run, pH))
kable(blanks_all_raw)
blanks_means <- blanks_all_raw %>%
dplyr::group_by(Date, pH, Run, filetype) %>%
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n()) %>%
dplyr::arrange(Date, Run)
kable(blanks_means)
dups_to_add <- blanks_means[c(5:7),] %>% mutate(pH = 7.5) # only pH 8 contains a positive blank on 9/14 Run 1 and 10/26 Run 2- duplicate and save as pH 7.5
blanks_means <- rbind(blanks_means, dups_to_add) %>% dplyr::arrange(Date, Run)
kable(blanks_means) # you can now see that each Date, Run, has a pH 8 and pH 7.5 blank
Resp.Master <- merge(resp.data_merged, blanks_means, by=c("Date", "pH", "Run", "filetype")) %>% # NOTE: this repeats for every distinct length value
dplyr::mutate(resp_blankStand = abs(Lpc) - BLANK.mean_Lpc) # ommits respiration rate values showing an increase in O2 over time
Resp.less.than.blank <- Resp.Master %>% dplyr::filter(resp_blankStand < 0) %>% dplyr::select(c(1:7,15,18,29)) %>% mutate(Lpc = abs(Lpc)) # call the values with positive resp rates, measing they were slower than the blank!
print(Resp.less.than.blank) # 15 total samples were less than the blank after the correction... (Lpc < BLANK.mean_LPC)
Resp.Master_OM <- Resp.Master[!is.na(Resp.Master$Length_um),] %>% dplyr::filter(!resp_blankStand < 0) %>% # omit respiration values subtracted by blank (resp_blankStand) that are negative (less than the blank)
dplyr::mutate(volume = case_when(filetype == "LoLigo_data" & Date == '9/14/2021' ~ 2.2, # small vessels for loligo system - 22 ml vessels
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH1' ~ 68.55323, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH2' ~ 68.85583, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH3' ~ 68.87473, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH4' ~ 68.95481, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "SDR_data" ~ 1.7)) %>% # 24-well plate - 1700ul
# mg minute -> mg L hr
dplyr::mutate(resp_mg_L_hr =(resp_blankStand *  # resp corrected for blank (remember within Date, Run and treatment!) - currently as raw units of mg O2 per minute (output from LoLinR script)
(volume/1000) * # mult by volume of the resp vessel corrected in Liters - now units in  mg per L per min
60))  %>% # mult by 60 to convert to hours - now units in mg L per hour
# mg L hr -> umol L hr
dplyr::mutate(resp_umol_L_hr = ( (resp_mg_L_hr * 1000) / 16) ) %>% #  convert mg L per hr to umol L hr- first by mg to ug (mg*1000 = ug) and then ug to umol (1 umol = 32 ug -  ug O2 div 32 ug/umol)
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food", Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp.Master %>% dplyr::filter(resp_blankStand < 0) # 15 rows omitted
Resp.Master_OM %>% ggplot(aes(x = Length_um, y = resp_umol_L_hr)) +
geom_smooth(method = "lm") +
theme_classic() +
ylab("resp_umol_L_hr") +
xlab("Length_um") +
geom_point()  +
facet_wrap(~Age + Fed_Unfed, scales = 'free')
# outlier in 'fed' Day 92 3X higher than all other rates - visual of this data appears shows an abrupt anomaly
Resp.Master_OM <- Resp.Master_OM %>% filter(!resp_umol_L_hr > (max(resp_umol_L_hr) - 0.001))
# view the above ggplot again, youll see the fed day 92 now show a regression that was once lacking with this outlier
Resp.Master_OM %>% ggplot(aes(x = Length_um, y = resp_umol_L_hr)) +
geom_smooth(method = "lm") +
theme_classic() +
ylab("resp_umol_L_hr") +
xlab("Length_um") +
geom_point()  +
facet_wrap(~Age + Fed_Unfed, scales = 'free')
# outlier in 'fed' Day 92 3X higher than all other rates - visual of this data appears shows an abrupt anomaly
Resp.Master_OM <- Resp.Master_OM %>% filter(!resp_umol_L_hr > (max(resp_umol_L_hr) - 0.001))
# view the above ggplot again, youll see the fed day 92 now show a regression that was once lacking with this outlier
# (1)  umol O2 L-1 g mm shell length-1 ::::::::::::::::::::::::::::::::::::::::::::::::::
# NORMALIZED for Shell length
Resp.Master_OM$resp_µmol_L_mm_Length_hr <- (Resp.Master_OM$resp_umol_L_hr / # multiple by 1000 to convert mmol/ O2 to umol/L O2
(Resp.Master_OM$Length_um/1000)) # normalize by shell size as to mg O2 L-1 g mm-1
# (2) mg O2 L-1 g dry tissue weight-1 :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# NORMALIZED for Whole animal dry weight (g)
Resp.Master_OM$resp_µmol_mg_hr <- (Resp.Master_OM$resp_umol_L_hr /
(Resp.Master_OM$whole_Dry_weight)) # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
P_Length_resp_all <- Resp.Master_OM[!is.na(Resp.Master_OM$resp_umol_L_hr),] %>%
ggplot(aes(x = (Length_um/1000), y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
labs(title = "Raw Resp v. Shell length (mm)", y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Shell length (mm)") +
theme(legend.position="none") +
geom_point()
P_Length_resp_facet <- Resp.Master_OM[!is.na(Resp.Master_OM$resp_umol_L_hr),] %>%
ggplot(aes(x = (Length_um/1000), y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Shell length (mm)") +
geom_point() +
facet_wrap(~Age*Food, scales = "free")
# print in markdown file
ggarrange(P_Length_resp_all, P_Length_resp_facet,nrow = 2)
ggarrange(P_Length_resp_all, P_Length_resp_facet,ncol = 2)
P_WholeDW_resp_all  <- Resp.Master_OM[!is.na(Resp.Master_OM$resp_umol_L_hr),] %>%
ggplot(aes(x = whole_Dry_weight, y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ whole_Dry_weight) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
labs(title = "Raw Resp v. Whole dry weight (mg)", y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
theme(legend.position="none") +
xlab("Whole dry weight (mg)") +
geom_point()
P_WholeDW_resp_facet <- Resp.Master_OM[!is.na(Resp.Master_OM$resp_umol_L_hr),] %>%
ggplot(aes(x = whole_Dry_weight, y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ whole_Dry_weight) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none",plot.title = element_text(size=10))+
labs(y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Whole dry weight (mg)") +
geom_point() +
facet_wrap(~Age*Food, scales = "free")
# Resp.Master_OM    <- read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv", header=T) # personnel computer
Resp.Master_OM    <- read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv", header=T) # work computer
# model effect of treatment on resp rate 20210507
Resp_0914 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/14/2021')  %>% # call only 9/14
dplyr::filter(!Chamber_tank  %in% 'blank')
Resp_0914 %>% dplyr::group_by(Chamber_tank) %>% dplyr::summarise(n()) # tank replication
Resp_0914 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=c("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# Shell length standardized (SL) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Resp_0914 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# plot the replicates (visual diagnostics of random factor)
Resp914_Length_reps<- ggboxplot(Resp_0914, x = "pH", y = "resp_µmol_L_mm_Length_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
Resp914_Length_reps
# One-way ANOVA (without the random effect)
Resp914_ANOVA <- aov(resp_µmol_L_mm_Length_hr ~ pCO2, data=Resp_0914) # run mod
summary(Resp914_ANOVA) # summary mod
kable(  data.frame(unclass(summary(Resp914_ANOVA)), check.names = FALSE, stringsAsFactors = FALSE)  ) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/20210914_figs_tables/20210914_resp_OneWayANOVA_Table.png", zoom = 1.5)
kable(  data.frame(unclass(summary(Resp914_ANOVA)), check.names = FALSE, stringsAsFactors = FALSE)  )
#              Df   Sum Sq   Mean Sq F value Pr(>F)
# pCO2         1 0.000004 0.0000036   0.007  0.932
# Residuals   19 0.009096 0.000478
shapiro.test(residuals(Resp914_ANOVA)) # normal - 0.3276
leveneTest(Resp914_ANOVA) # homogeneity of variance (equal variance - 0.4131
# Linear mixed effects model with random effect of Replicate
LMEmod_0914_SL<-lme(resp_µmol_L_mm_Length_hr ~ pCO2, random=~1|Chamber_tank, data=Resp_0914) # with the random effect as an LME model
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  13   |  32.12  | 7.699e-05 |
# |    **pCO2**     |   1   |   6   | 0.02054 |  0.8907   |
pander(anova(LMEmod_0914_SL), style='rmarkdown') # anova table of lmer
leveneTest(LMEmod_0914_SL)
leveneTest(residuals(LMEmod_0914_SL) ~ Resp_0914$pCO2) # 0.2793 PASS
Resp_0930 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/30/2021')  %>% # call only 9/14
dplyr::select(-Center) %>%
dplyr::mutate(pHxFood = paste(pH,Food, sep = "_")) %>%
dplyr::mutate(random_fact = as.factor(paste(Chamber_tank, Food, sep="_")))
kable(Resp_0930 %>% dplyr::group_by(Chamber_tank, Food) %>% dplyr::summarise(n())) # tank replication - lowest value was 2 for 7.5_D unfed
Resp_0930 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=(c("pH", "Food"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
kable(Resp_0930 %>% dplyr::group_by(Chamber_tank, Food) %>% dplyr::summarise(n())) # tank replication - lowest value was 2 for 7.5_D unfed
# Visualize the data with the random effet as treplicate
Resp930_Length_reps <- ggboxplot(Resp_0930, x = "pHxFood", y = "resp_µmol_L_mm_Length_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
Resp930_Length_reps
# Two-way ANOVA (without the random effect)
Resp930_ANOVA <- aov(resp_µmol_L_mm_Length_hr ~ pCO2*Food, data=Resp_0930) # run mod
summary(Resp930_ANOVA) # summary mod
#              Df  Sum Sq  Mean Sq F value  Pr(>F)
# pCO2         1 0.00154 0.001539   2.094 0.15313
# Food         1 0.00671 0.006713   9.135 0.00368 **
# pCO2:Food    1 0.00079 0.000786   1.070 0.30516
# Residuals   60 0.04409 0.000735
shapiro.test(residuals(Resp930_ANOVA)) # NON normal - 0.009643
leveneTest(Resp930_ANOVA) # homogeneity of variance (equal) variance - 0.2709
# Linear mixed effects model with random effect of Replicate
LMEmod_0930<-lme(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, random=~1|random_fact, data=Resp_0930)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  48   |  133.9  | 1.776e-15 |
# |    **pCO2**     |   1   |  12   |  2.021  |  0.1806   |
# |    **Food**     |   1   |  12   |  8.888  |  0.01146  |
# |  **pCO2:Food**  |   1   |  12   |  1.032  |  0.3298   |
pander(anova(LMEmod_0930), style='rmarkdown')
check_model(LMEmod_0930)
# levene's test
leveneTest(residuals(LMEmod_0930) ~ Resp_0930$pCO2*Resp_0930$Food) # 0.2558 PASS
# plot
Resp930_Length <- ggplot(Resp_0930, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_µmol_L_mm_Length_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 120)) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210930 (shell length stand.)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%mm^{-1}~shell~length%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")"))  +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
Resp930_Length
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  48   |  133.9  | 1.776e-15 |
# |    **pCO2**     |   1   |  12   |  2.021  |  0.1806   |
# |    **Food**     |   1   |  12   |  8.888  |  0.01146  |
# |  **pCO2:Food**  |   1   |  12   |  1.032  |  0.3298   |
pander(anova(LMEmod_0930), style='rmarkdown')
Resp930_Length
Resp_0930 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=(c("pH", "Food"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# food supply diff
Resp_0930 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars="Food") %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# food supply diff
Resp_0930 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars="Food")
perc_diff <- (0.04864072 - 0.02785341)/0.04864072*100
perc_diff
Resp_0930 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=(c("pH", "Food"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp_1026 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '10/26/2021')  %>% # call only 10/14
dplyr::select(-Center) %>%
dplyr::mutate(pHxFood = paste(pH,Food, sep = "_")) %>%
dplyr::mutate(random_fact = as.factor(paste(Chamber_tank, Food, sep="_")))
kable(Resp_1026 %>% dplyr::group_by(Chamber_tank, Food) %>% dplyr::summarise(n())) # tank replication
Resp_1026 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=(c("Food","pH"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# Visualize the data with the random effet as treplicate
Res1026_Length_reps <- ggboxplot(Resp_1026, x = "pHxFood", y = "resp_µmol_L_mm_Length_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
Res1026_Length_reps
Res1026_Length_reps
# ANOVA (wihtout the random effect
summary(aov(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, data=Resp_1026)) # 0.0392 * (pCO2) 0.0499 * (food) - without the random effect of tank)
require(nlme)
# Linear mixed effects model with random effect of Replicate
LMEmod_1026_SL<-lme(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, random=~1|random_fact, data=Resp_1026)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  72.15  | 4.086e-07 |
# |    **pCO2**     |   1   |  12   | 0.2441  |  0.6302   |
# |    **Food**     |   1   |  12   |  23.56  | 0.0003955 | **
# |  **pCO2:Food**  |   1   |  12   | 0.5343  |  0.4788   |
pander(anova(LMEmod_1026_SL), style='rmarkdown')
shapiro.test(residuals(LMEmod_1026_SL)) # NON normal - 5.562e-09
# levene's test
leveneTest(residuals(LMEmod_1026_SL) ~ Resp_1026$pCO2*Resp_1026$Food) # 0.2745 PASS
Res1026_Length_reps
# Linear mixed effects model with random effect of Replicate
LMEmod_1026_SL<-lme(log(resp_µmol_L_mm_Length_hr) ~ pCO2 * Food, random=~1|random_fact, data=Resp_1026)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  72.15  | 4.086e-07 |
# |    **pCO2**     |   1   |  12   | 0.2441  |  0.6302   |
# |    **Food**     |   1   |  12   |  23.56  | 0.0003955 | **
# |  **pCO2:Food**  |   1   |  12   | 0.5343  |  0.4788   |
pander(anova(LMEmod_1026_SL), style='rmarkdown')
# shapiro wilk normality test
shapiro.test(residuals(LMEmod_1026_SL)) #  normal - 0.9677
# levene's test
leveneTest(residuals(LMEmod_1026_SL) ~ Resp_1026$pCO2*Resp_1026$Food) # 2.08e-06 *** no pass
# Linear mixed effects model with random effect of Replicate
LMEmod_1026_SL<-lme(sqrt(resp_µmol_L_mm_Length_hr) ~ pCO2 * Food, random=~1|random_fact, data=Resp_1026)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  72.15  | 4.086e-07 |
# |    **pCO2**     |   1   |  12   | 0.2441  |  0.6302   |
# |    **Food**     |   1   |  12   |  23.56  | 0.0003955 | **
# |  **pCO2:Food**  |   1   |  12   | 0.5343  |  0.4788   |
pander(anova(LMEmod_1026_SL), style='rmarkdown')
# shapiro wilk normality test
shapiro.test(residuals(LMEmod_1026_SL)) #  normal - 0.9677
# levene's test
leveneTest(residuals(LMEmod_1026_SL) ~ Resp_1026$pCO2*Resp_1026$Food) # 2.08e-06 *** no pass
# Linear mixed effects model with random effect of Replicate
LMEmod_1026_SL<-lme(sqrt(resp_µmol_L_mm_Length_hr)+1 ~ pCO2 * Food, random=~1|random_fact, data=Resp_1026)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  72.15  | 4.086e-07 |
# |    **pCO2**     |   1   |  12   | 0.2441  |  0.6302   |
# |    **Food**     |   1   |  12   |  23.56  | 0.0003955 | **
# |  **pCO2:Food**  |   1   |  12   | 0.5343  |  0.4788   |
pander(anova(LMEmod_1026_SL), style='rmarkdown')
# shapiro wilk normality test
shapiro.test(residuals(LMEmod_1026_SL)) #  normal - 0.9677
# levene's test
leveneTest(residuals(LMEmod_1026_SL) ~ Resp_1026$pCO2*Resp_1026$Food) # 2.08e-06 *** no pass
# Linear mixed effects model with random effect of Replicate
LMEmod_1026_SL<-lme(log10(resp_µmol_L_mm_Length_hr) ~ pCO2 * Food, random=~1|random_fact, data=Resp_1026)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  72.15  | 4.086e-07 |
# |    **pCO2**     |   1   |  12   | 0.2441  |  0.6302   |
# |    **Food**     |   1   |  12   |  23.56  | 0.0003955 | **
# |  **pCO2:Food**  |   1   |  12   | 0.5343  |  0.4788   |
pander(anova(LMEmod_1026_SL), style='rmarkdown')
# shapiro wilk normality test
shapiro.test(residuals(LMEmod_1026_SL)) #  normal - 0.9677
# levene's test
leveneTest(residuals(LMEmod_1026_SL) ~ Resp_1026$pCO2*Resp_1026$Food) # 2.08e-06 *** no pass
check_model(LMEmod_1026_SL)
# ANOVA (wihtout the random effect
summary(aov(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, data=Resp_1026)) # 0.0392 * (pCO2) 0.0499 * (food) - without the random effect of tank)
# Linear mixed effects model with random effect of Replicate
LMEmod_1026_SL<-lme(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, random=~1|random_fact, data=Resp_1026)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  15   |  72.15  | 4.086e-07 |
# |    **pCO2**     |   1   |  12   | 0.2441  |  0.6302   |
# |    **Food**     |   1   |  12   |  23.56  | 0.0003955 | **
# |  **pCO2:Food**  |   1   |  12   | 0.5343  |  0.4788   |
pander(anova(LMEmod_1026_SL), style='rmarkdown')
Resp_1026
# Linear mixed effects model with random effect of Replicate
LMEmod_1026_SL<-lme(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, random=~1|random_fact, data=Resp_1026)
# food supply diff
Resp_1026 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars="Food")
perc_diff <- (0.08566193 - 0.02248406)/0.08566193*100
perc_diff #42.7 %
Resp_1026 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=(c("Food","pH"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp_0930_HF <- Resp_0930 %>% dplyr::filter(Food = 'High')
Resp_0930_HF <- Resp_0930 %>% dplyr::filter(Food = 'fed')
Resp_0930_HF <- Resp_0930 %>% dplyr::filter(Food = 'Fed')
Resp_0930
Resp_0930_HF <- Resp_0930 %>% dplyr::filter(Food %in% 'fed')
LMEmod_0930_HF <-lme(resp_µmol_L_mm_Length_hr ~ pCO2, random=~1|random_fact, data=Resp_0930_HF)
pander(anova(LMEmod_0930), style='rmarkdown')
pander(anova(LMEmod_0930_HF), style='rmarkdown')
LMEmod_0930_HF <-lm(resp_µmol_L_mm_Length_hr ~ pCO2, data=Resp_0930_HF)
pander(anova(LMEmod_0930_HF), style='rmarkdown')
