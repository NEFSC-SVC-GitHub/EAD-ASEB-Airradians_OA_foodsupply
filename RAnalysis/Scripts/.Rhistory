..rr.label.., sep = "~~~")),
label.x.npc = "left") +
facet_wrap(~Food_OA)
MO2_b.factorLENGTH_PLOT_facetted_food <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) + # omitted , color = pCO2
geom_point() +
#scale_color_manual(values=c("blue","orange")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label..,
..rr.label.., sep = "~~~")),
label.x.npc = "left") +
facet_wrap(~Fed_Unfed)
MO2_b.factorLENGTH_PLOT_facetted_pCO2 <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point() +
#scale_color_manual(values=c("blue","orange")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label..,
..rr.label.., sep = "~~~")),
label.x.npc = "left") +
facet_wrap(~pCO2)
print(ggarrange(MO2_b.factorLENGTH_PLOT,
MO2_b.factorLENGTH_PLOT_facetted,
MO2_b.factorLENGTH_PLOT_facetted_pCO2,
MO2_b.factorLENGTH_PLOT_facetted_food,
nrow = 4, ncol = 1)) # print the model diagnostics
MO2_b.factorLENGTH_PLOT_facetted_ALL <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length,
y=log10_VO2,
color = Food_OA,
shape = Food_OA)) +
geom_point(size = 2) +
#scale_color_manual(values=c("blue","orange")) +
scale_color_manual(values=c("black","black", "grey50", "grey50")) +
scale_shape_manual(values=c(19,1, 19, 1)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(aes(group=Food_OA,
linetype=Fed_Unfed),
method = lm,
#color = c("black","black", "grey50", "grey50"),
#linetype = c("solid","dashed", "solid", "dashed"),
se=F) +
scale_linetype_discrete(name="Food x pCO2",
breaks=c("500 μatm_High food",
"500 μatm_Low food",
"800 μatm_High food",
"800 μatm_Low food"),
labels = c("high food x low pCO2",
"low food x low pCO2",
"high food x high pCO2",
"high food x high pCO2")) +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label..,
..rr.label.., sep = "~~~")),
label.x.npc = "left")
print(ggarrange(MO2_b.factorLENGTH_PLOT,
MO2_b.factorLENGTH_PLOT_facetted_ALL,
nrow = 1, ncol = 2))
install.packages('smatr')
library(smatr)
# FOR SHELL ENGTH WE WILL USE THE 'resp_umol_hr_biovolcalc' data to employ all resp data files across time!
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# GET B FACTOR FOR ALL AVAILABLE INDIVIDUALS WITH LENGTH AND MO2 ::::::::::::::::::::::::::::::
nrow(Resp.Master_OM) # 115
MO2_b.factorLENGTH_PLOT_SMA <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = smaSummary, color = 'black') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "left")
Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.
Resp.Master_bfactor_plotting %>%
MO2_b.factorLENGTH_PLOT_SMA <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
geom_abline(data = smaSummary, aes(intercept = elevation, slope = slope))
MO2_b.factorLENGTH_PLOT
lm(log10_Length~ log10_VO2,data = Resp.Master_bfactor_plotting)
summary(lm(log10_Length~ log10_VO2,data = Resp.Master_bfactor_plotting))
MO2_b.factorLENGTH_PLOT_facetted_pCO2
MO2_b.factorLENGTH_PLOT_facetted_food <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) + # omitted , color = pCO2
geom_point() +
#scale_color_manual(values=c("blue","orange")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label..,
..rr.label.., sep = "~~~")),
label.x.npc = "left") +
facet_wrap(~Fed_Unfed)
MO2_b.factorLENGTH_PLOT_facetted_food
summary(lm(log10_Length~ log10_VO2,data = Resp.Master_bfactor_plotting))
Resp.Master_bfactor_plotting
Resp.Master_bfactor_plotting
summary(lm(log10_Length ~ log10_VO2, data = (Resp.Master_bfactor_plotting %>% dplyr::filter(pCO2 %in% '800 μatm')) ) )
summary(lm(log10_Length ~ log10_VO2, data = (Resp.Master_bfactor_plotting %>% dplyr::filter(pCO2 %in% '500 μatm')) ) )
summary(lm(log10_Length ~ log10_VO2, data = (Resp.Master_bfactor_plotting %>% dplyr::filter(pCO2 %in% '800 μatm')) ) )
?sma
summary(sma(log10_Length ~ log10_VO2, data = (Resp.Master_bfactor_plotting %>% dplyr::filter(pCO2 %in% '800 μatm')) ) )
MO2_b.factorLENGTH_PLOT_SMA <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = sma, color = 'black') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "left")
MO2_b.factorLENGTH_PLOT_SMA
Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = sma, color = 'black')
obj <- (sma(log10_Length ~ log10_VO2, data = (Resp.Master_bfactor_plotting %>% dplyr::filter(pCO2 %in% '800 μatm'))))
obj
Resp.Master_bfactor_plotting
obj <- (sma(log10_Length ~ log10_VO2,
data = (Resp.Master_bfactor_plotting %>%
dplyr::filter(Food_OA %in% '800 μatm_High food'))))
obj
summary(sma(log10_VO2 ~ log10_Length, data = (Resp.Master_bfactor_plotting %>% dplyr::filter(pCO2 %in% '800 μatm')) ) )
obj
obj <- (sma(log10_Length ~ log10_VO2,
data = (Resp.Master_bfactor_plotting %>%
dplyr::filter(Food_OA %in% '800 μatm_High food'))))
obj
obj$slopetestdone
obj$coef
obj$intercept
obj$groupsummary
obj
obj <- (sma(log10_Length ~ log10_VO2,
data = (Resp.Master_bfactor_plotting %>%
dplyr::filter(Food_OA %in% '800 μatm_High food'))))
obj
obj <- (sma(log10_VO2 ~ log10_Length,
data = (Resp.Master_bfactor_plotting %>%
dplyr::filter(Food_OA %in% '800 μatm_High food'))))
obj
~
summary(lm(log10_Length ~ log10_VO2,
data = (Resp.Master_bfactor_plotting %>%
dplyr::filter(Food_OA %in% '800 μatm_High food'))))
summary(lm(log10_Length ~ log10_VO2,
data = (Resp.Master_bfactor_plotting %>%
dplyr::filter(Food_OA %in% '800 μatm_High food'))))
summary(lm(log10_VO2 ~ log10_Length,
data = (Resp.Master_bfactor_plotting %>%
dplyr::filter(Food_OA %in% '800 μatm_High food'))))
obj <- (sma(log10_VO2 ~ log10_Length,
data = (Resp.Master_bfactor_plotting %>%
dplyr::filter(Food_OA %in% '800 μatm_High food'))))
obj
obj
obj$coef[[1]]
obj$coef
obj$r2
obj$n
obj$to
obj$from
obj
obj$data
obj$commoncoef
obj$coef
obj$coef[3,2]
obj$coef[2,3]
obj$coef
obj$coef[[slope]]
obj$coef[['slope']]
obj$coef$slop
obj$coef$slope
obj$coef
obj$coef[[1]]
obj$coef[[1]]$`upper limit`[[2]]
obj$coef$`upper limit`[[2]]
obj$coef[[1]]$`upper limit`[[2]]
obj$coef
obj$coef[[1]]$`coef(SMA)`[[2]]
obj$coef[[1]]$`coef(SMA)`[[
obj$coef[[1]]$`coef(SMA)`[[2]]
obj_slope <- obj$coef[[1]]$`coef(SMA)`[[2]]
obj <- (sma(log10_VO2 ~ log10_Length,
data = (Resp.Master_bfactor_plotting %>%
dplyr::filter(Food_OA %in% '800 μatm_High food'))))
obj$coef[[1]]$`coef(SMA)`[[2]]
obj_slope <- obj$coef[[1]]$`coef(SMA)`[[2]]
obj_slope
obj
obj$n
obj$intercept
obj$from
obj
obj$groupsummary
obj$groupsummary[[1]]
obj$groupsummary
obj$groupsummary$Slope
obj_slope <- obj$groupsummary$Int
obj_int <- obj$groupsummary$Int
obj_slope <- obj$groupsummary$Slope
obj <- (sma(log10_VO2 ~ log10_Length,
data = (Resp.Master_bfactor_plotting)))
obj_slope <- obj$groupsummary$Slope
obj_int <- obj$groupsummary$Int
MO2_b.factorLENGTH_PLOT_SMA <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_abline(data=obj, aes(slope=obj_slope, intercept=obj_int))
MO2_b.factorLENGTH_PLOT_SMA <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_abline(data=obj, aes(slope=obj_slope, intercept=obj_int))
obj_slope
obj_int
Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)")
MO2_b.factorLENGTH_PLOT_SMA <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_abline(aes(slope=obj_slope, intercept=obj_int))
MO2_b.factorLENGTH_PLOT_SMA
obj$groupsummary
obj_int <- obj$groupsummary$Int
obj$groups
obj$groupsummary
MO2_b.factorLENGTH_PLOT_SMA <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_abline(aes(slope=obj_slope, intercept=obj_int))
MO2_b.factorLENGTH_PLOT_SMA <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_abline(aes(slope=obj_slope, intercept=obj_int)) +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste('y=',obj_int,'x+', obj_slope, sep = "~~~")),
label.x.npc = "left")
MO2_b.factorLENGTH_PLOT_SMA
MO2_b.factorLENGTH_PLOT_SMA <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_abline(aes(slope=obj_slope, intercept=obj_int)) +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(obj_int, obj_slope, sep = "~~~")),
label.x.npc = "left")
MO2_b.factorLENGTH_PLOT_SMA
obj$groupsummary$r2
obj$formula[[1]]
obj$formula
obj$groupsummary
eq <- paste('y =', obj_slope,'x + ',obj_int,')
eq
eq <- paste('y =', obj_slope,'x + ',obj_int)
obj_slope
obj_int
eq <- paste('y =', obj_slope,'x + ',obj_int, sep = '')
eq
eq <- paste('y = ', obj_slope,'x + ',obj_int, sep = '')
eq
_b
MO2_b.factorLENGTH_PLOT_SMA <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_abline(aes(slope=obj_slope, intercept=obj_int)) +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(eq, obj$groupsummary$r2, sep = "~~~")),
label.x.npc = "left")
MO2_b.factorLENGTH_PLOT_SMA
eq
obj$groupsummary$r2
eq
eq <- as.numeric(paste('y = ', obj_slope,'x + ',obj_int, sep = ''))
eq
MO2_b.factorLENGTH_PLOT_SMA <- Resp.Master_bfactor_plotting %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point(size=2) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",
element_line(linewidth = 0.5,
color = 'black'),
axis.title.y=element_text(size=12),
axis.text.x=element_text(size=(15)),
axis.text.y=element_text(size=(15))) + # legend.position="none",
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_abline(aes(slope=obj_slope, intercept=obj_int)) +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(eq, obj$groupsummary$r2, sep = "~~~")),
label.x.npc = "left")
MO2_b.factorLENGTH_PLOT_SMA
eq
eq <- paste('y = ', obj_slope,'x + ',obj_int, sep = '')
eq
obj_slope <- obj$groupsummary$Slope
obj_slope
obj <- (sma(log10_VO2 ~ log10_Length,
data = (Resp.Master_bfactor_plotting)))
obj_slope <- obj$groupsummary$Slope
obj_int <- obj$groupsummary$Int
obj_slope
obj <- (sma(log10_VO2 ~ log10_Length,
data = (Resp.Master_bfactor_plotting %>%
dplyr::filter(Food_OA %in% '800 μatm_High food'))))
obj_slope <- obj$groupsummary$Slope
obj_int <- obj$groupsummary$Int
eq <- paste('y = ', obj_slope,'x + ',obj_int, sep = '')
eq
