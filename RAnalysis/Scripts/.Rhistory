resp.data_merged[110,c(1:6)]
resp.data_merged[95,c(1:6)]
blanks_total <- data.frame() # start dataframe
blanks.table <- data.frame(matrix(nrow = 1,ncol = 5)) # make a table template
colnames(blanks.table)<-c('Date', 'Channel', 'mean_Lpc', 'mean_Leq' , 'mean_Lz') # names for comuns in the for loop
blanks_all_raw <- data.frame(merge(resp.ref, resp.data, by = c('Date', 'Channel', 'Filename')) %>%
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data"))) %>%
dplyr::filter(Chamber_tank  == 'blank') %>%
dplyr::filter(Lpc <0) %>%
dplyr::filter(!Date == '9/30/2021' | !Lpc < -0.035) %>% #omits C6 RR_9.30.21_AM_Plate_1_Run_1.csv	8.0	blank - View the Lolin plot, looks noisy and a fast outlier from the others
dplyr::filter(!Date == '10/26/2021'  | !Channel == "CH8" | !Run == "2" )) # omit a bad blank that contained a bad seal, noted on the respiration sampling day during the trial
kable((blanks_all_raw)[,c(1:3,6,8,12:14)])
blanks_means <- blanks_all_raw %>%
dplyr::group_by(Date, pH, filetype) %>%
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n())
kable(blanks_means)
Resp.Master <- merge(resp.data_merged, blanks_means, by=c("Date", "pH",  "filetype")) %>% # NOTE: this repeats for every distinct length value
dplyr::mutate(resp_norm = Lpc - BLANK.mean_Lpc) # ommits respiration rate values showing an increase in O2 over time
Resp.Master_OM <- Resp.Master %>% dplyr::filter(!resp_norm > 0) %>% # ommit respiration values that are positive
dplyr::mutate(volume = case_when(filetype == "LoLigo_data" & Date == '9/14/2021' ~ 1.7, filetype == "LoLigo_data" & Date == '10/26/2021' ~ 40, filetype == "SDR_data" ~ 2.2)) %>% # chamber volumes on different dates with
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food", Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp.outliers <- Resp.Master %>% dplyr::filter(resp_norm > 0) # call the values with positive resp rates, measing they were slower than the blank!
print(Resp.outliers)
#write.csv(Resp.Master_OM, "C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
write.csv(Resp.Master_OM, "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
write.csv(Resp.Master_OM, "C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
Resp.Master_OM <- Resp.Master_OM[!is.na(Resp.Master_OM$Length_um),]
Resp.Master_OM$resp_ng_L_umlLength_hr <- (
( ( (abs(Resp.Master_OM$resp_norm)*1000000) * # call absolute value of resp in mg per minute - convert to ng min-1
(Resp.Master_OM$volume/1000) ) / # vial volume for loligo 8 channel runs was 2.2 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master_OM$Length_um) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ng Liter-1 individual-1 hour-1
RespSumTab <- summarySE(Resp.Master_OM, measurevar="resp_ng_L_umlLength_hr", groupvars=c("Age", "pCO2", "Fed_Unfed"))
RespSumTab$pCO2 <- factor(RespSumTab$pCO2, c("500 μatm","800 μatm"))
## Use geom_line and geom_point to plot over time
Resp_geomline<-ggplot(data=RespSumTab, aes(x=Age, y=resp_ng_L_umlLength_hr, color=pCO2)) +
geom_line(aes(linetype = factor(Fed_Unfed)), size = 0.5) +
geom_point()+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=resp_ng_L_umlLength_hr-se, ymax=resp_ng_L_umlLength_hr+se), width=.2,
position=position_dodge(.1))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Age (days)") +
labs(title = "F1 Scallops: Food x OA Experiment",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%μ*m^{-1}%.% hr^{-1}~")")) +
scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
Resp_geomline
Resp.Master_OM <- Resp.Master_OM[!is.na(Resp.Master_OM$Length_um),]
Resp.Master_OM$resp_ng_L_um_Length_hr <- (
( ( (abs(Resp.Master_OM$resp_norm)*1000000) * # call absolute value of resp in mg per minute - convert to ng min-1
(Resp.Master_OM$volume/1000) ) / # vial volume for loligo 8 channel runs was 2.2 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master_OM$Length_um) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ng Liter-1 individual-1 hour-1
Resp.Master_OM
Resp.Master_OM$resp_ng_L_g_Length_hr <- (
( ( (abs(Resp.Master_OM$resp_norm)*1000000) * # call absolute value of resp in mg per minute - convert to ng min-1
(Resp.Master_OM$volume/1000) ) / # vial volume for loligo 8 channel runs was 2.2 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master_OM$Dry_Tissue_weight) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ng Liter-1 individual-1 hour-1
Resp.Master_OM$resp_ng_L_g_Length_hr
# model effect of treatment on resp rate 20210507
Resp_0914 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/14/2021')  %>% # call only 9/14
dplyr::filter(!Chamber_tank  %in% 'blank')
Resp_0914 %>% dplyr::group_by(Chamber_tank) %>% dplyr::summarise(n()) # tank replication
LMmod_0914 <- aov(lm(resp_ng_L_um_Length_hr~pCO2,data=Resp_0914))
pander(summary(LMmod_0914), style='rmarkdown')
check_model(LMmod_0914) # observe the diagnostics of the model
check_model(LMmod_0914) # observe the diagnostics of the model
shapiro.test(residuals(LMmod_0914)) #  normal - 0.3875
leveneTest(LMmod_0914) # good - 0.6186
ggplot(Resp_0914, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_um_Length_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
labs(title = "F1 Scallops: respiration rates on 20210914",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%μ*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) # +
Resp_01026 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '10/26/2021')  %>% # call only 10/14
dplyr::select(-Center)
Resp_01026 %>% dplyr::group_by(Chamber_tank, Food ) %>% dplyr::summarise(n()) # tank replication
ggplot(Resp_01026, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_um_Length_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Fed_Unfed %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_g_Length_hr , fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_ng_L_g_Length_hr'
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt
Resp_01026
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_g_Length_hr , fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_ng_L_g_Length_hr'
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt
Resp_01026 %>% dplyr::filter(Food %in% "fed")
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_g_Length_hr , fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_ng_L_g_Length_hr'
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt
ggplot(Resp_01026, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_um_Length_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
Resp_fed_drywt
ggplot(Resp_01026, aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_ng_L_um_Length_hr , fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")")) +
facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food'))) # +
# NORMALIZED for Dry Tissue Weight
Resp.Master_OM$resp_ng_L_g_Length_hr <- (
( ( (abs(Resp.Master_OM$resp_norm)*1000) * # call absolute value of resp in mg per minute - convert to ug O2 L-1 per min-1
(Resp.Master_OM$volume/1000) ) / # vial volume for loligo 8 channel runs was 2.2 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master_OM$Dry_Tissue_weight) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ug O2 Liter -1 g dry tissue weight-1 hour-1
# NORMALIZED for Shell Size (Length)
Resp.Master_OM$resp_ng_L_μm_Length_hr <- (
( ( (abs(Resp.Master_OM$resp_norm)*1000000) * # call absolute value of resp in mg per minute - convert to ng min-1
(Resp.Master_OM$volume/1000) ) / # vial volume for loligo 8 channel runs was 2.2 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master_OM$Length_um) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ng O2 Liter-1 um shell length-1 hour-1
# NORMALIZED for Dry Tissue Weight
Resp.Master_OM$resp_μg_L_g_Length_hr <- (
( ( (abs(Resp.Master_OM$resp_norm)*1000) * # call absolute value of resp in mg per minute - convert to ug O2 L-1 per min-1
(Resp.Master_OM$volume/1000) ) / # vial volume for loligo 8 channel runs was 2.2 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master_OM$Dry_Tissue_weight) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ug O2 Liter -1 g dry tissue weight-1 hour-1
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_μg_L_g_Length_hr , fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_Length_hr'
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
# NORMALIZED for Dry Tissue Weight
Resp.Master_OM$resp_μg_L_g_hr <- (
( ( (abs(Resp.Master_OM$resp_norm)*1000) * # call absolute value of resp in mg per minute - convert to ug O2 L-1 per min-1
(Resp.Master_OM$volume/1000) ) / # vial volume for loligo 8 channel runs was 2.2 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
Resp.Master_OM$Dry_Tissue_weight) * # normalize by individual or larvae count - as to ng L-1 individual-1
(60)) # correct for the time; final value is ug O2 Liter -1 g dry tissue weight-1 hour-1
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_μg_L_g_hr , fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr'
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
Resp_01026 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '10/26/2021')  %>% # call only 10/14
dplyr::select(-Center)
Resp_01026 %>% dplyr::group_by(Chamber_tank, Food ) %>% dplyr::summarise(n()) # tank replication
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_μg_L_g_hr , fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr'
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~ng~L^{-1}~O[2]%.%mu*m^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
Resp_01026
Resp_fed_drywt # the effect with normalization to shell size persists here...
Resp.Master_OM$Dry_Tissue_weight
Resp.Master_OM$Dry_Tissue_weight*1000
# NORMALIZED for Dry Tissue Weight
Resp.Master_OM$resp_μg_L_mg_hr <- (
( ( (abs(Resp.Master_OM$resp_norm)*1000) * # call absolute value of resp in mg per minute - convert to ug O2 L-1 per min-1
(Resp.Master_OM$volume/1000) ) / # vial volume for loligo 8 channel runs was 2.2 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
(Resp.Master_OM$Dry_Tissue_weight*1000) ) * # normalize by Dry tissue weight (converted from grams to milligrams by *1000) as to ug O2 L-1 mg dry tissue weight-1
(60)) # correct for the time; final value is ug O2 Liter -1 mg dry tissue weight-1 hour-1
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_μg_L_mg_hr , fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr'
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~mu*g~L^{-1}~O[2]%.%mg^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
Resp_01026 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '10/26/2021')  %>% # call only 10/14
dplyr::select(-Center)
Resp_01026 %>% dplyr::group_by(Chamber_tank, Food ) %>% dplyr::summarise(n()) # tank replication
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_μg_L_mg_hr , fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr'
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~mu*g~L^{-1}~O[2]%.%mg^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
# NORMALIZED for Dry Tissue Weight
Resp.Master_OM$resp_mg_L_g_hr <- (
( ( (abs(Resp.Master_OM$resp_norm)) * # call absolute value of resp in mg per minute -  mg O2 L-1 per min-1
(Resp.Master_OM$volume/1000) ) / # vial volume for loligo 8 channel runs was 2.2 mL!!! - correct ng minute-1 to ng liter-1 by multiplying by the resp vial in liters
(Resp.Master_OM$Dry_Tissue_weight) ) * # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
(60)) # correct for the time; final value is ug O2 Liter -1 mg dry tissue weight-1 hour-1
Resp_01026 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '10/26/2021')  %>% # call only 10/14
dplyr::select(-Center)
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_mg_L_g_hr , fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr'
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~mu*g~L^{-1}~O[2]%.%mg^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_mg_L_g_hr , fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr'
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~mg~L^{-1}~O[2]%.%g^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
blanks_means
blanks_all_raw <- data.frame(merge(resp.ref, resp.data, by = c('Date', 'Channel', 'Filename')) %>%
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data"))) %>%
dplyr::filter(Chamber_tank  == 'blank') %>%
dplyr::filter(Lpc <0) %>%
dplyr::filter(!Date == '9/30/2021' | !Lpc < -0.035) %>% #omits C6 RR_9.30.21_AM_Plate_1_Run_1.csv	8.0	blank - View the Lolin plot, looks noisy and a fast outlier from the others
dplyr::filter(Date == '10/26/2021'  | Channel == "CH8" | Run == "2" )) # omit a bad blank that contained a bad seal, noted on the respiration sampling day during the trial
blanks_all_raw
blanks_all_raw <- data.frame(merge(resp.ref, resp.data, by = c('Date', 'Channel', 'Filename')) %>%
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data"))) %>%
dplyr::filter(Chamber_tank  == 'blank') %>%
dplyr::filter(Lpc <0) %>%
dplyr::filter(!Date == '9/30/2021' | !Lpc < -0.035) %>% #omits C6 RR_9.30.21_AM_Plate_1_Run_1.csv	8.0	blank - View the Lolin plot, looks noisy and a fast outlier from the others
dplyr::filter(!Date == '10/26/2021'  | !Channel == "CH8" | !Run == "2" )) # omit a bad blank that contained a bad seal, noted on the respiration sampling day during the trial
blanks_all_raw
Resp.Master <- merge(resp.data_merged, blanks_means, by=c("Date", "pH",  "filetype")) %>% # NOTE: this repeats for every distinct length value
dplyr::mutate(resp_norm = Lpc - BLANK.mean_Lpc) # ommits respiration rate values showing an increase in O2 over time
Resp.Master
Resp_01026
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_norm, fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr'
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~mg~L^{-1}~O[2]%.%g^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
Resp_01026
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), Length_um, fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr' - note: look at Length_um, resp_norm, and finally resp_mg_L_g_hr to determine why we see this difference..
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~mg~L^{-1}~O[2]%.%g^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
Resp_01026
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), Dry_Tissue_weight, fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr' - note: look at Length_um, resp_norm, and finally resp_mg_L_g_hr to determine why we see this difference..
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~mg~L^{-1}~O[2]%.%g^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_norm, fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr' - note: look at Length_um, resp_norm, and finally resp_mg_L_g_hr to determine why we see this difference..
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~mg~L^{-1}~O[2]%.%g^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), Lpc, fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr' - note: look at Length_um, resp_norm, and finally resp_mg_L_g_hr to determine why we see this difference..
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~mg~L^{-1}~O[2]%.%g^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
# see what the dry tissue weight looks like for the data we have so far.... ( only have it for the fed animals ! - filter first and then run it)
Resp_fed_drywt <- Resp_01026 %>% dplyr::filter(Food %in% "fed") %>%
ggplot(aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')), resp_mg_L_g_hr, fill = pCO2)) + # DRY TISSUE WEIGHT! 'resp_μg_L_g_hr' - note: look at Length_um, resp_norm, and finally resp_mg_L_g_hr to determine why we see this difference..
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
#ylim(0, 3) +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
#scale_y_continuous(expand = c(0, 0), limits = c(0, 4.25)) +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
labs(title = "Respiration rate; F1 Scallops (juveniles) 92 days post-fertilization",
y = expression(Respiration~rate~"("~mg~L^{-1}~O[2]%.%g^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~mu*atm~")"))
Resp_fed_drywt # the effect with normalization to shell size persists here...
