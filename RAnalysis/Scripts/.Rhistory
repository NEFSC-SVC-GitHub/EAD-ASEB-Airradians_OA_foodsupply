dplyr::filter(!Date == '10/26/2021'  | !Channel == "CH8" | !Run == "3" ) %>%  # omit a bad blank that contained a bad seal, noted on the respiration sampling day during the trial
dplyr::filter(!Date ==  '9/30/2021'   | !pH == "7.5" | !Channel == "B2" | !Run == "1" | !Plate == "1" ) %>%
dplyr::select(c(Date, pH, Run, Plate, Lpc, Leq ,Lz, Channel, Food, Filename, filetype, Chamber_tank)) %>%
dplyr::arrange(Date, Run, pH))
kable(blanks_all_raw)
blanks_means <- blanks_all_raw %>%
dplyr::group_by(Date, pH, Run, filetype) %>%
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n()) %>%
dplyr::arrange(Date, Run)
kable(blanks_means)
dups_to_add <- blanks_means[c(5:7),] %>% mutate(pH = 7.5) # only pH 8 contains a positive blank on 9/14 Run 1 and 10/26 Run 2- duplicate and save as pH 7.5
blanks_means <- rbind(blanks_means, dups_to_add) %>% dplyr::arrange(Date, Run)
kable(blanks_means) # you can now see that each Date, Run, has a pH 8 and pH 7.5 blank
Resp.Master <- merge(resp.data_merged, blanks_means, by=c("Date", "pH", "Run", "filetype")) %>% # NOTE: this repeats for every distinct length value
dplyr::mutate(resp_blankStand = abs(Lpc) - BLANK.mean_Lpc) # ommits respiration rate values showing an increase in O2 over time
Resp.less.than.blank <- Resp.Master %>% dplyr::filter(resp_blankStand < 0) %>% dplyr::select(c(1:7,15,18,29)) %>% mutate(Lpc = abs(Lpc)) # call the values with positive resp rates, measing they were slower than the blank!
print(Resp.less.than.blank) # 15 total samples were less than the blank after the correction... (Lpc < BLANK.mean_LPC)
Resp.Master_OM <- Resp.Master[!is.na(Resp.Master$Length_um),] %>% dplyr::filter(!resp_blankStand < 0) %>% # omit respiration values subtracted by blank (resp_blankStand) that are negative (less than the blank)
dplyr::mutate(volume = case_when(filetype == "LoLigo_data" & Date == '9/14/2021' ~ 2.2, # small vessels for loligo system - 22 ml vessels
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH1' ~ 68.55323, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH2' ~ 68.85583, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH3' ~ 68.87473, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH4' ~ 68.95481, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH5' ~ 68.57288, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH6' ~ 68.01878, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH7' ~ 68.54551, # larger custom vessels measured individually...
filetype == "LoLigo_data" & Date == '10/26/2021' & Channel == 'CH8' ~ 68.53297, # larger custom vessels measured individually...
filetype == "SDR_data" ~ 1.7)) %>% # 24-well plate - 1700ul
# mg minute -> mg L hr
dplyr::mutate(resp_mg_L_hr =(resp_blankStand *  # resp corrected for blank (remember within Date, Run and treatment!) - currently as raw units of mg O2 per minute (output from LoLinR script)
(volume/1000) * # mult by volume of the resp vessel corrected in Liters - now units in  mg per L per min
60))  %>% # mult by 60 to convert to hours - now units in mg L per hour
# mg L hr -> umol L hr
dplyr::mutate(resp_umol_L_hr = ( (resp_mg_L_hr * 1000) / 16) ) %>% #  convert mg L per hr to umol L hr- first by mg to ug (mg*1000 = ug) and then ug to umol (1 umol = 32 ug -  ug O2 div 32 ug/umol)
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food", Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8.0 ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp.Master %>% dplyr::filter(resp_blankStand < 0) # 15 rows omitted
Resp.Master %>% dplyr::filter(resp_blankStand < 0) # 15 rows omitted
Resp.Master_OM %>% ggplot(aes(x = Length_um, y = resp_umol_L_hr)) +
geom_smooth(method = "lm") +
theme_classic() +
ylab("resp_umol_L_hr") +
xlab("Length_um") +
geom_point()  +
facet_wrap(~Age + Fed_Unfed, scales = 'free')
Resp.Master_OM %>% ggplot(aes(x = Length_um, y = resp_umol_L_hr)) +
geom_smooth(method = "lm") +
theme_classic() +
ylab("resp_umol_L_hr") +
xlab("Length_um") +
geom_point()  +
facet_wrap(~Age + Fed_Unfed, scales = 'free')
# outlier in 'fed' Day 92 3X higher than all other rates - visual of this data appears shows an abrupt anomaly
Resp.Master_OM <- Resp.Master_OM %>% filter(!resp_umol_L_hr > (max(resp_umol_L_hr) - 0.001))
Resp.Master_OM
# (1)  umol O2 L-1 g mm shell length-1 ::::::::::::::::::::::::::::::::::::::::::::::::::
# NORMALIZED for Shell length
Resp.Master_OM$resp_µmol_L_mm_Length_hr <- (Resp.Master_OM$resp_umol_L_hr / # multiple by 1000 to convert mmol/ O2 to umol/L O2
(Resp.Master_OM$Length_um/1000)) # normalize by shell size as to mg O2 L-1 g mm-1
# (2) mg O2 L-1 g dry tissue weight-1 :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# NORMALIZED for Whole animal dry weight (g)
Resp.Master_OM$resp_µmol_mg_hr <- (Resp.Master_OM$resp_umol_L_hr /
(Resp.Master_OM$whole_Dry_weight)) # normalize by Dry tissue weight  as to mg O2 L-1 g dry tissue weight-1
P_Length_resp_all <- Resp.Master_OM[!is.na(Resp.Master_OM$resp_umol_L_hr),] %>%
ggplot(aes(x = (Length_um/1000), y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), plot.title = element_text(size=10))+
labs(title = "Raw Resp v. Shell length (mm)", y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Shell length (mm)") +
theme(legend.position="none") +
geom_point()
P_Length_resp_facet <- Resp.Master_OM[!is.na(Resp.Master_OM$resp_umol_L_hr),] %>%
ggplot(aes(x = (Length_um/1000), y = resp_umol_L_hr, color = as.factor(pCO2))) +
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_smooth(method = "lm", se=FALSE, color="black", formula = resp_umol_L_hr ~ Length_um) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(y = expression(μmol~L^{-1}~O[2]%.%hr^{-1})) +
xlab("Shell length (mm)") +
geom_point() +
facet_wrap(~Age*Food, scales = "free")
# print in markdown file
ggarrange(P_Length_resp_all, P_Length_resp_facet,nrow = 2)
# Resp.Master_OM    <- read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv", header=T) # personnel computer
Resp.Master_OM  <- read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv", header=T, fileEncoding = "latin1") # work computer
# model effect of treatment on resp rate 20210507
Resp_0914 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/14/2021')  %>% # call only 9/14
dplyr::filter(!Chamber_tank  %in% 'blank')
Resp_0914 %>% dplyr::group_by(Chamber_tank) %>% dplyr::summarise(n()) # tank replication
Resp_0914 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=c("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
# library(devtools)
library(ggpubr)
library(hrbrthemes)
library(nlme)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # personal computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
resp.data       <- read.csv(file="Output/Respiration/Cumulative_resp_alpha0.4_15sectrunc1hour.csv", header=T) %>%
dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt') # read the calculate raw rates from 'resp_LoLin' script - contains the calculated rate (not normalized for blanks) for each sensor-channel
exp_metadata    <- read.csv(file="Data/ExperimentMetadata.csv", header=T) # treatment assignments to 'Chamber_Tank'
lengths         <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T)
resp.ref        <- read.csv(file="Data/Respiration/Reference_master.csv", header=T) %>% dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt')
DWs_Len_1026    <- read.csv(file="Data/Survival_Size/20211026_lengths_dryweights.csv", header=T)
DWs_Len_914.930 <- read.csv(file="Data/Survival_Size/2021914_930_dryweights.csv", header=T)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(ggpubr)
library(hrbrthemes)
library(nlme)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # personal computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
resp.data       <- read.csv(file="Output/Respiration/Cumulative_resp_alpha0.4_15sectrunc1hour.csv", header=T) %>%
dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt') # read the calculate raw rates from 'resp_LoLin' script - contains the calculated rate (not normalized for blanks) for each sensor-channel
exp_metadata    <- read.csv(file="Data/ExperimentMetadata.csv", header=T) # treatment assignments to 'Chamber_Tank'
lengths         <- read.csv(file="Data/Respiration/Lengths_Condition_resp_clearance.csv", header=T)
resp.ref        <- read.csv(file="Data/Respiration/Reference_master.csv", header=T) %>% dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt')
DWs_Len_1026    <- read.csv(file="Data/Survival_Size/20211026_lengths_dryweights.csv", header=T)
DWs_Len_914.930 <- read.csv(file="Data/Survival_Size/2021914_930_dryweights.csv", header=T)
# merge the exp_metadata with the resp.data
resp.ref_length_merged                 <- merge(resp.ref, lengths) # all TRUE allows us to keep the blanks
resp.data_merged                       <- merge(resp.data, resp.ref_length_merged) %>% # out master file moving forward....
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data")))
kable(head(resp.data_merged))
# VISAUL INSPECCTION:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#  914 runs...
resp.data_merged[48 ,c(1:6)]  #  CH5	Run_2_raw.txt	-0.005252180	-0.004583581	-0.004583581
resp.data_merged[44 ,c(1:6)]  #  CH3	Run_2_raw.txt	-0.010489214	-0.008507836	-0.008507836
resp.data_merged[36 ,c(1:6)]  #  CH1	Run_2_raw.txt	0.000995514	0.002014487	0.002014487
resp.data_merged[23 ,c(1:6)]  #  CH5	Run_1_raw.txt	-0.00704407	-0.005910146	-0.005910146
resp.data_merged[37 ,c(1:6)]  #  CH1	Run_3_raw.txt	-0.01067604	-0.01067604	-0.01067604
resp.data_merged[41 ,c(1:6)]  #  CH2	Run_3_raw.txt	-0.002221288	-0.00212516	-0.00212516
resp.data_merged[45 ,c(1:6)]  #  CH3	Run_3_raw.txt	-0.001386829	-0.00246828	-0.00246828
resp.data_merged[49 ,c(1:6)]  #  CH5	Run_3_raw.txt	-0.01019991	-0.01748781	-0.01748781
# 930 runs...
resp.data_merged[71 ,c(1:6)]  # A5	RR_9.30.21_AM_Plate_1_Run_1.csv	-0.002463294	-0.003383279	-0.003383279
resp.data_merged[95 ,c(1:6)]  #  C1 RR_9.30.21_AM_Plate_2_Run_1.csv # -0.02890813	-0.0608251	-0.0608251 - Lz and Leq  better
resp.data_merged[111,c(1:6)]  #  C5 RR_9.30.21_PM_Plate_2_Run_2.csv	0.029052351	-0.076034441	-0.076034441
resp.data_merged[96 ,c(1:6)]  #  C1 RR_9.30.21_PM_Plate_1_Run_2.csv	0.011656487	0.011656487	0.011656487
# CHANGES (based on rerun or whether Lz/Leq better explains) :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# 914 changes..
resp.data_merged[48 ,4]  <- as.numeric(-0.0154) # RERUN
resp.data_merged[44 ,4]  <- as.numeric(-0.0205) # RERUN
resp.data_merged[36 ,4]  <- as.numeric(-0.0164) # RERUN
resp.data_merged[23 ,4]  <- as.numeric(-0.0275) # RERUN
resp.data_merged[37 ,4]  <- as.numeric(-0.00123) # RERUN
resp.data_merged[41 ,4]  <- as.numeric(-0.0036)  # RERUN
resp.data_merged[45 ,4]  <- as.numeric(-0.0034)  # RERUN
resp.data_merged[49 ,4]  <- as.numeric(-0.0207)  # RERUN
# 930 changes..
resp.data_merged[71 ,4]  <- as.numeric(-0.0128) # RERUN
resp.data_merged[95 ,4]  <- resp.data_merged[95,5] # 20210930_Plate_2_Run_2_C5_regression - Lz and Leq regression than Lpc
resp.data_merged[111,4]  <- resp.data_merged[111,5] # 20210930_Plate_2_Run_1_C1_regression - Lz and Leq  regression than Lpc
resp.data_merged[96 ,4]  <- as.numeric(-0.0296) # RERUN
resp.data_merged[23 ,4]  <- as.numeric(-0.0275) # RERUN
# look at the data for sanity check...
resp.data_merged[44 ,c(1:6)] # -0.0205
resp.data_merged[36 ,c(1:6)] # -0.0164
resp.data_merged[23 ,c(1:6)] # -0.0275
resp.data_merged[23 ,c(1:6)] # -0.0275
resp.data_merged[37 ,c(1:6)] # -0.00123
resp.data_merged[41 ,c(1:6)] # -0.0036
resp.data_merged[45 ,c(1:6)] # -0.0034
resp.data_merged[49 ,c(1:6)] # -0.0207
resp.data_merged[95 ,c(1:6)] # -0.0608251
resp.data_merged[111,c(1:6)] # -0.07603444
resp.data_merged[96 ,c(1:6)] # -0.0296
# View(resp.data_merged)
blanks_total <- data.frame() # start dataframe
blanks.table <- data.frame(matrix(nrow = 1,ncol = 5)) # make a table template
colnames(blanks.table)<-c('Date', 'Channel', 'mean_Lpc', 'mean_Leq' , 'mean_Lz') # names for comuns in the for loop
blanks_all_raw <- data.frame(merge(resp.ref, resp.data, by = c('Date', 'Channel', 'Filename')) %>%
dplyr::filter(!Date ==  '9/14/2021'   | !Filename == 'Run_1_raw.txt') %>%  # run 1 was restarted due to poor data
dplyr::mutate(filetype = str_sub(Filename, -3,-1)) %>%
dplyr::mutate(filetype = factor(ifelse(filetype == "csv", "SDR_data", "LoLigo_data"))) %>%
dplyr::filter(Chamber_tank  == 'blank') %>%
# dplyr::filter(Lpc <0) %>%
dplyr::filter(!Date == '9/30/2021' | !Lpc < -0.035) %>% #omits C6 RR_9.30.21_AM_Plate_1_Run_1.csv	8.0	blank - View the Lolin plot, looks noisy and a fast outlier from the others
dplyr::filter(!Date == '10/26/2021'  | !Channel == "CH8" | !Run == "2" ) %>%  # omit a bad blank that contained a bad seal, noted on the respiration sampling day during the trial
dplyr::filter(!Date == '10/26/2021'  | !Channel == "CH8" | !Run == "3" ) %>%  # omit a bad blank that contained a bad seal, noted on the respiration sampling day during the trial
dplyr::filter(!Date ==  '9/30/2021'   | !pH == "7.5" | !Channel == "B2" | !Run == "1" | !Plate == "1" ) %>%
dplyr::select(c(Date, pH, Run, Plate, Lpc, Leq ,Lz, Channel, Food, Filename, filetype, Chamber_tank)) %>%
dplyr::arrange(Date, Run, pH))
kable(blanks_all_raw)
blanks_means <- blanks_all_raw %>%
dplyr::group_by(Date, pH, Run, filetype) %>%
dplyr::filter(Chamber_tank == "blank") %>%
dplyr::filter(Lpc <0) %>% # ommit blank calls that d/n represent oxygen consumption
dplyr::summarise(BLANK.mean_Lpc = mean(abs(Lpc)),
BLANK.sd.Lpc   = sd(abs(Lpc)),
BLANK.mean_Leq = mean(abs(Leq)),
BLANK.mean_Lz = mean(abs(Lz)),
n = n()) %>%
dplyr::arrange(Date, Run)
kable(blanks_means)
dups_to_add <- blanks_means[c(5:7),] %>% mutate(pH = 7.5) # only pH 8 contains a positive blank on 9/14 Run 1 and 10/26 Run 2- duplicate and save as pH 7.5
blanks_means <- rbind(blanks_means, dups_to_add) %>% dplyr::arrange(Date, Run)
kable(blanks_means) # you can now see that each Date, Run, has a pH 8 and pH 7.5 blank
Resp.Master <- merge(resp.data_merged, blanks_means, by=c("Date", "pH", "Run", "filetype")) %>% # NOTE: this repeats for every distinct length value
dplyr::mutate(resp_blankStand = abs(Lpc) - BLANK.mean_Lpc) # ommits respiration rate values showing an increase in O2 over time
Resp.less.than.blank <- Resp.Master %>% dplyr::filter(resp_blankStand < 0) %>% dplyr::select(c(1:7,15,18,29)) %>% mutate(Lpc = abs(Lpc)) # call the values with positive resp rates, measing they were slower than the blank!
print(Resp.less.than.blank) # 15 total samples were less than the blank after the correction... (Lpc < BLANK.mean_LPC)
Resp.Master_OM <- Resp.Master[!is.na(Resp.Master$Length_um),] %>% dplyr::filter(!resp_blankStand < 0) %>% # omit respiration values subtracted by blank (resp_blankStand) that are negative (less than the blank)
dplyr::mutate(volume = case_when(
filetype == "LoLigo_data" & Date == '9/14/2021' ~ 1.7, # small vessels for loligo system - 22 ml vessels
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH1' ~ 23.1, # F1 data
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH2' ~ 23.05,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH4' ~ 22.55,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH5' ~ 23.18,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH6' ~ 23.24,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH7' ~ 22.63,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH8' ~ 22.95,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH3' ~ 23.31, #larger custom vessels measured individually...
filetype == "SDR_data" ~ 1.7)) %>% # 24-well plate - 1700ul used for the unfed and fed on 9/30 and the unfed only on 10/26
# mg minute -> mg L hr
dplyr::mutate(resp_mg_L_hr =(resp_blankStand *  # resp corrected for blank (remember within Date, Run and treatment!) - currently as raw units of mg O2 per minute (output from LoLinR script)
(volume/1000) * # mult by volume of the resp vessel corrected in Liters - now units in  mg per L per min
60))  %>% # mult by 60 to convert to hours - now units in mg L per hour
# mg L hr -> umol L hr
dplyr::mutate(resp_umol_L_hr = ( (resp_mg_L_hr * 1000) / 32) ) %>% #  convert mg L per hr to umol L hr- first by mg to ug (mg*1000 = ug) and then ug to umol (1 umol = 32 ug -  ug O2 div 32 ug/umol)
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(
Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food",
Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(
pH == 8.0 ~ "500 μatm",
pH == 7.5 ~ "800 μatm"))
Resp.Master %>% dplyr::filter(resp_blankStand < 0) # 15 rows omitted
Resp.Master
Resp.Master_OM <- Resp.Master[!is.na(Resp.Master$Length_um),] %>%
# omit resp values less than the blank
dplyr::filter(!resp_blankStand < 0) %>% # omit respiration values subtracted by blank (resp_blankStand) that are negative (less than the blank)
# new colums with the experimental conditions
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(
Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food",
Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(
pH == 8.0 ~ "500 μatm",
pH == 7.5 ~ "800 μatm")) %>%
# the volume of the cahmbers
dplyr::mutate(volume = case_when(
filetype == "LoLigo_data" & Date == '9/14/2021' ~ 1.7, # small vessels for loligo system - 22 ml vessels
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH1' ~ 23.1, # F1 data
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH2' ~ 23.05,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH4' ~ 22.55,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH5' ~ 23.18,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH6' ~ 23.24,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH7' ~ 22.63,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH8' ~ 22.95,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH3' ~ 23.31, #larger custom vessels measured individually...
filetype == "SDR_data" ~ 1.7)) %>% # 24-well plate - 1700ul used for the unfed and fed on 9/30 and the unfed only on 10/26
# factor in the biovolume (volume displaced from the animal) to get the actual calculated volume of the chambers
dplyr::mutate(Length_mm = Length_um/1000) %>% # Length in millimeters
dplyr::mutate(Biovol_length3 = (0.000198*(Length_mm^3)))  %>% # biovoume calc using length (mm) ^3 0.000198 derived from a regression run with all F1 data
dplyr::mutate(calculated_volume = (volume - Biovol_length3)) # actual volume of the vessel accounting for the volume displaced (length^3 equivelent to the measured biovolume)
Resp.Master_OM <- Resp.Master[!is.na(Resp.Master$Length_um),] %>%
# omit resp values less than the blank
dplyr::filter(!resp_blankStand < 0) %>% # omit respiration values subtracted by blank (resp_blankStand) that are negative (less than the blank)
# new colums with the experimental conditions
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(
Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food",
Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(
pH == 8.0 ~ "500 μatm",
pH == 7.5 ~ "800 μatm")) %>%
# the volume of the cahmbers
dplyr::mutate(volume = case_when(
filetype == "LoLigo_data" & Date == '9/14/2021' ~ 1.7, # small vessels for loligo system - 22 ml vessels
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH1' ~ 23.1, # F1 data
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH2' ~ 23.05,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH4' ~ 22.55,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH5' ~ 23.18,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH6' ~ 23.24,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH7' ~ 22.63,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH8' ~ 22.95,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH3' ~ 23.31, #larger custom vessels measured individually...
filetype == "SDR_data" ~ 1.7)) %>% # 24-well plate - 1700ul used for the unfed and fed on 9/30 and the unfed only on 10/26
# factor in the biovolume (volume displaced from the animal) to get the actual calculated volume of the chambers
dplyr::mutate(Length_mm = Length_um/1000) %>% # Length in millimeters
dplyr::mutate(Biovol_length3 = (0.000198*(Length_mm^3)))  %>% # biovoume calc using length (mm) ^3 0.000198 derived from a regression run with all F1 data
dplyr::mutate(calculated_volume = (volume - Biovol_length3)) %>%  # actual volume of the vessel accounting for the volume displaced (length^3 equivelent to the measured biovolume)
# REspiration units mg minute -> mg L hr
dplyr::mutate(resp_mg_L_hr =(resp_blankStand *  # resp corrected for blank (remember within Date, Run and treatment!) - currently as raw units of mg O2 per minute (output from LoLinR script)
(calculated_volume/1000) * # mult by volume of the resp vessel corrected in Liters - now units in  mg per L per min
60))  %>% # mult by 60 to convert to hours - now units in mg L per hour
dplyr::mutate(resp_umol_L_hr = ( (resp_mg_L_hr * 1000) / 32) ) #  convert mg L per hr to umol L hr- first by mg to ug (mg*1000 = ug) and then ug to umol (1 umol = 32 ug -  ug O2 div 32 ug/umol)
Resp.Master %>% dplyr::filter(resp_blankStand < 0) # 14 rows omitted
Resp.Master_OM
# FOR SHELL ENGTH WE WILL USE THE 'resp_umol_hr_biovolcalc' data to employ all resp data files across time!
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# GET B FACTOR FOR ALL AVAILABLE INDIVIDUALS WITH LENGTH AND MO2 ::::::::::::::::::::::::::::::
nrow(RR_master_OM) # 133 (as opposed to only 77 in the previous cunks ommitting TDW NAs!!!!!!!!!!)
# FOR SHELL ENGTH WE WILL USE THE 'resp_umol_hr_biovolcalc' data to employ all resp data files across time!
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# GET B FACTOR FOR ALL AVAILABLE INDIVIDUALS WITH LENGTH AND MO2 ::::::::::::::::::::::::::::::
nrow(Resp.Master_OM) # 133 (as opposed to only 77 in the previous cunks ommitting TDW NAs!!!!!!!!!!)
RR_master_OM$log10_VO2     <- log10(as.numeric(Resp.Master_OM$resp_umol_L_hr)) # assign resp value
Resp.Master_OM$log10_VO2     <- log10(as.numeric(Resp.Master_OM$resp_umol_L_hr)) # assign resp value
Resp.Master_OM$log10_Length  <- log10(as.numeric(Resp.Master_OM$Length_um)) # assign length value
MO2_b.factorLENGTH_PLOT <- RR_master_OM %>%
#filter(!resp_umol_L_hr < 0.08) %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "left")
MO2_b.factorLENGTH_PLOT <- Resp.Master_OM %>%
#filter(!resp_umol_L_hr < 0.08) %>%
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "left")
MO2_b.factorLENGTH_PLOT
MO2_b.factorLENGTH_PLOT_facetted <- Resp.Master_OM %>%
ggplot(aes(x=log10_Length, y=log10_VO2, color = pCO2)) +
geom_point() +
scale_color_manual(values=c("blue","orange")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label..,
..rr.label.., sep = "~~~")),
label.x.npc = "left") +
facet_wrap(~pCO2)
MO2_b.factorLENGTH_PLOT_facetted
print(ggarrange(MO2_b.factorLENGTH_PLOT, MO2_b.factorLENGTH_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
MO2_b.factorLENGTH_PLOT <- Resp.Master_OM %>%
#filter(!resp_umol_L_hr < 0.08) %>%
dplyr::filter(!(log10_Length > 3.8 & log10_VO2 < -3)) %>%  # outliers ommited (should be 2 data points)
ggplot(aes(x=log10_Length, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "left")
MO2_b.factorLENGTH_PLOT
MO2_b.factorLENGTH_PLOT_facetted <- Resp.Master_OM %>%
dplyr::filter(!(log10_Length > 3.8 & log10_VO2 < -3)) %>%  # outliers ommited (should be 2 data points)
ggplot(aes(x=log10_Length, y=log10_VO2, color = pCO2)) +
geom_point() +
scale_color_manual(values=c("blue","orange")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T,
aes(label = paste(..eq.label..,
..rr.label.., sep = "~~~")),
label.x.npc = "left") +
facet_wrap(~pCO2)
print(ggarrange(MO2_b.factorLENGTH_PLOT, MO2_b.factorLENGTH_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/metabolic_scaling/MetabolicScaling_bFactor_LENGTH.pdf"), width = 8, height = 8)
print(ggarrange(MO2_b.factorLENGTH_PLOT, MO2_b.factorLENGTH_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
dev.off()
print(ggarrange(MO2_b.factorLENGTH_PLOT, MO2_b.factorLENGTH_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
Resp.Master_OM
meanLength   <- mean(Resp.Master_OM$Length_mm) # 16.89333 mm
meanLength
# (1)  umol O2 L-1 g mm shell length-1 ::::::::::::::::::::::::::::::::::::::::::::::::::
# NORMALIZED for Shell length
bLength = 1.46 # review the outlier-omitted b factor plot in previous chunk
Resp.Master_Master <- Resp.Master_OM
Resp.Master_Master <- Resp.Master_OM %>%
dplyr::mutate(resp_umol_hr_bFactorNormLength.MEAN =
(resp_umol_hr_biovolcalc)*((meanLength/Length_mm)^bLength) ) %>% # length b factor  correcred using 'resp_umol_hr_biovolcalc'
dplyr::mutate(resp_µmol_L_mm_Length_hr =
(resp_umol_L_hr /(Length_um/1000)) )
Resp.Master_OM <- Resp.Master[!is.na(Resp.Master$Length_um),] %>%
# omit resp values less than the blank
dplyr::filter(!resp_blankStand < 0) %>% # omit respiration values subtracted by blank (resp_blankStand) that are negative (less than the blank)
# new colums with the experimental conditions
dplyr::mutate(Age = case_when(Date == '9/14/2021' ~ 50, Date == '9/30/2021' ~ 66, Date == '10/26/2021' ~ 92)) %>%
dplyr::mutate(Fed_Unfed = case_when(
Fed_Unfed == 'F' ~ "High food", is.na(Fed_Unfed) ~ "High food",
Fed_Unfed == 'U' ~ "Low food")) %>%
dplyr::mutate(pCO2 = case_when(
pH == 8.0 ~ "500 μatm",
pH == 7.5 ~ "800 μatm")) %>%
# the volume of the cahmbers
dplyr::mutate(volume = case_when(
filetype == "LoLigo_data" & Date == '9/14/2021' ~ 1.7, # small vessels for loligo system - 22 ml vessels
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH1' ~ 23.1, # F1 data
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH2' ~ 23.05,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH4' ~ 22.55,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH5' ~ 23.18,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH6' ~ 23.24,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH7' ~ 22.63,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH8' ~ 22.95,
filetype == "LoLigo_data" & Date %in% c('10/26/2021') & Channel == 'CH3' ~ 23.31, #larger custom vessels measured individually...
filetype == "SDR_data" ~ 1.7)) %>% # 24-well plate - 1700ul used for the unfed and fed on 9/30 and the unfed only on 10/26
# factor in the biovolume (volume displaced from the animal) to get the actual calculated volume of the chambers
dplyr::mutate(Length_mm = Length_um/1000) %>% # Length in millimeters
dplyr::mutate(Biovol_length3 = (0.000198*(Length_mm^3)))  %>% # biovoume calc using length (mm) ^3 0.000198 derived from a regression run with all F1 data
dplyr::mutate(calculated_volume = (volume - Biovol_length3)) %>%  # actual volume of the vessel accounting for the volume displaced (length^3 equivelent to the measured biovolume)
# REspiration units mg minute -> mg L hr
dplyr::mutate(resp_mg_L_hr =(resp_blankStand *  # resp corrected for blank (remember within Date, Run and treatment!) - currently as raw units of mg O2 per minute (output from LoLinR script)
(calculated_volume/1000) * # mult by volume of the resp vessel corrected in Liters - now units in  mg per L per min
60))  %>% # mult by 60 to convert to hours - now units in mg L per hour
dplyr::mutate(resp_umol_L_hr = ( (resp_mg_L_hr * 1000) / 32) ) #  convert mg L per hr to umol L hr- first by mg to ug (mg*1000 = ug) and then ug to umol (1 umol = 32 ug -  ug O2 div 32 ug/umol)
Resp.Master_Master <- Resp.Master_OM %>%
dplyr::mutate(resp_umol_hr_bFactorNormLength.MEAN =
(resp_umol_L_hr)*((meanLength/Length_mm)^bLength) ) %>% # length b factor  correcred using 'resp_umol_hr_biovolcalc'
dplyr::mutate(resp_µmol_L_mm_Length_hr =
(resp_umol_L_hr /(Length_um/1000)) )
Resp.Master_Master
# write.csv(Resp.Master_OM, "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
write.csv(Resp.Master_Master, "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv")
# Resp.Master_OM    <- read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv", header=T) # personnel computer
Resp.Master  <- read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv", header=T, fileEncoding = "latin1") # work computer
# model effect of treatment on resp rate 20210507
Resp_0914 <- Resp.Master %>%
dplyr::filter(Date %in% '9/14/2021')  %>% # call only 9/14
dplyr::filter(!Chamber_tank  %in% 'blank')
Resp_0914 %>% dplyr::group_by(Chamber_tank) %>% dplyr::summarise(n()) # tank replication
Resp_0914
Resp_0914 %>% summarySE(measurevar="resp_umol_hr_bFactorNormLength.MEAN", groupvars=c("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
Resp_0914 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=c("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# One-way ANOVA (without the random effect)
Resp914_ANOVA <- aov(resp_umol_hr_bFactorNormLength.MEAN ~ pCO2, data=Resp_0914) # run mod
summary(Resp914_ANOVA) # summary mod
#             Df   Sum Sq   Mean Sq F value Pr(>F)
# pCO2         1 0.000027 0.0000267   0.061  0.807
# Residuals   19 0.008241 0.0004337
shapiro.test(residuals(Resp914_ANOVA)) # normal - 0.7462
leveneTest(Resp914_ANOVA) # homogeneity of variance (equal variance - 0.7901
