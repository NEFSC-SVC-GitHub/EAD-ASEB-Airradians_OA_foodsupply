Resp.Master  <- read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv", header=T) # work computer
# model effect of treatment on resp rate 20210507
Resp_0914 <- Resp.Master %>%
dplyr::filter(Date %in% '9/14/2021')  %>% # call only 9/14
dplyr::filter(!Chamber_tank  %in% 'blank')
Resp_0914 %>% dplyr::group_by(Chamber_tank) %>% dplyr::summarise(n()) # tank replication
# plot the replicates (visual diagnostics of random factor)
Resp_0914 %>% summarySE(measurevar="resp_umol_hr_bFactorNormLength.ALL", groupvars=("pCO2"))
Resp914_bLengthALL_reps<- ggboxplot(Resp_0914,
x = "pCO2",
y = "resp_umol_hr_bFactorNormLength.ALL",
color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
# One-way ANOVA (without the random effect)
AOV914.bfactALL <- aov(resp_umol_hr_bFactorNormLength.ALL ~
pCO2,
data=Resp_0914) # run mod
# check model assumptions
shapiro.test(residuals(AOV914.bfactALL)) # normal - 0.9031
leveneTest(AOV914.bfactALL) # homogeneity of variance (equal variance) - 0.9252
# all is good, lets see the results
pander(anova(AOV914.bfactALL), style='rmarkdown') # anova table of lm
s
# |    &nbsp;     | Df |  Sum Sq   |  Mean Sq  | F value | Pr(>F) |
# |:-------------:|:--:|:---------:|:---------:|:-------:|:------:|
# |   **pCO2**    | 1  | 0.0003049 | 0.0003049 | 0.1783  | 0.6776 |
# | **Residuals** | 19 |  0.03249  |  0.00171  |   NA    |   NA   |
# output results
kable(data.frame(unclass(summary(AOV914.bfactALL)),
check.names = FALSE,
stringsAsFactors = FALSE)  ) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/20210914_figs_tables/20210914_AOV_RR_bfactor_ALL.png", zoom = 1.5)
# Linear mixed effects model with random effect of Replicate
LME914.bfactALL<-lme(resp_umol_hr_bFactorNormLength.ALL ~
pCO2,
random=~1|Chamber_tank, # with the random effect as an LME model (Chamber_tank = replicate as 7.5_A, 7.5_B)
data=Resp_0914)
# check model assumptions
shapiro.test(residuals(LME914.bfactALL)) # normal - 0.9216
leveneTest(residuals(LME914.bfactALL) ~ Resp_0914$pCO2) # 0.3248
# all is good, lets see the results
pander(anova(LME914.bfactALL), style='rmarkdown') # anova table of lmer
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  13   |  48.14  | 1.024e-05 |
# |    **pCO2**     |   1   |   6   | 0.02091 |  0.8898   |
# output results
kable(as.data.frame(anova(LME914.bfactALL))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/20210914_figs_tables/20210914_LME_RR_bfactor_ALL.png", zoom = 1.5)
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  13   |  48.14  | 1.024e-05 |
# |    **pCO2**     |   1   |   6   | 0.02091 |  0.8898   |
# output results
kable(as.data.frame(anova(LME914.bfactALL))) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/20210914_figs_tables/20210914_LME_RR_bfactor_ALL.png", zoom = 1.5)
# AIC model selection
pander(AIC(LME914.bfactALL, AOV914.bfactALL), style='rmarkdown') # anova table of lmer
n
# plot
Resp914_Length <- ggplot(Resp_0914,
aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')),
resp_umol_hr_bFactorNormLength.ALL ,
fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "F1 Scallops: respiration rates on 20210914 (b factor ALL)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%mm~shell~length^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white")
Resp914_Length # print this figure...
# Export the figures to pdf
ggarrange(Resp914_Length,Resp914_bLengthALL_reps,nrow = 2) %>%
ggexport(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/20210914_figs_tables/20210914_RR_bfactor_ALL.pdf")
Resp_0930 <- Resp.Master %>%
dplyr::filter(Date %in% '9/30/2021')  %>% # call only 9/14
dplyr::mutate(pHxFood = paste(pH,Fed_Unfed, sep = "_")) %>%
dplyr::mutate(random_fact = as.factor(paste(Chamber_tank, Fed_Unfed, sep="_")))
# Visualize the data with the random effect of tank replicate
Resp930_bLengthALL_reps <- ggboxplot(Resp_0930,
x = "pHxFood",
y = "resp_umol_hr_bFactorNormLength.ALL",
color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
# One-way ANOVA (without the random effect)
AOV930.bfactALL <- aov(resp_umol_hr_bFactorNormLength.ALL ~
pCO2 * Fed_Unfed,
data=Resp_0930) # run mod
# check model assumptions
shapiro.test(residuals(AOV930.bfactALL)) # non-normal - 0.002926
leveneTest(AOV930.bfactALL) # homogeneity of variance (equal variance) - 0.3667
pander(aov(AOV930.bfactALL), style='rmarkdown') # table for anova test
# |       &nbsp;       | Df |  Sum Sq  | Mean Sq  | F value | Pr(>F)  |
# |:------------------:|:--:|:--------:|:--------:|:-------:|:-------:|
# |      **pCO2**      | 1  | 0.008701 | 0.008701 |  2.353  | 0.1302  |
# |   **Fed_Unfed**    | 1  | 0.02067  | 0.02067  |  5.59   | 0.02126 | # significant
# | **pCO2:Fed_Unfed** | 1  | 0.002942 | 0.002942 | 0.7956  | 0.3759  |
# |   **Residuals**    | 61 |  0.2255  | 0.003697 |   NA    |   NA    |
SRH930.bfactALL <- scheirerRayHare(resp_umol_hr_bFactorNormLength.ALL ~
pCO2 * Fed_Unfed,
data=Resp_0930) # run mod
# NOTE:
# this chunk demonstrates that our data is non-normally distributed, thus we will need
# to either transform to resolve or resort to a nonparametric test
# given we have a two-way factorial design (in our simple linear model) we can use the Scheirer-Ray-Hare Test
# https://rcompanion.org/handbook/F_14.html
library(rcompanion) # install.packages('rcompanion')
# |       &nbsp;       | Df |  Sum Sq  | Mean Sq  | F value | Pr(>F)  |
# |:------------------:|:--:|:--------:|:--------:|:-------:|:-------:|
# |      **pCO2**      | 1  | 0.008701 | 0.008701 |  2.353  | 0.1302  |
# |   **Fed_Unfed**    | 1  | 0.02067  | 0.02067  |  5.59   | 0.02126 | # significant
# | **pCO2:Fed_Unfed** | 1  | 0.002942 | 0.002942 | 0.7956  | 0.3759  |
# |   **Residuals**    | 61 |  0.2255  | 0.003697 |   NA    |   NA    |
SRH930.bfactALL <- scheirerRayHare(resp_umol_hr_bFactorNormLength.ALL ~
pCO2 * Fed_Unfed,
data=Resp_0930) # run mod
# all is good, lets see the results
pander(print(SRH930.bfactALL), style='rmarkdown') # table for SRH test
# |       &nbsp;       | Df | Sum Sq |   H    | p.value |
# |:------------------:|:--:|:------:|:------:|:-------:|
# |      **pCO2**      | 1  | 210.1  | 0.5876 | 0.4434  |
# |   **Fed_Unfed**    | 1  |  2358  | 6.595  | 0.01023 | # significant, no change to the non normal anova
# | **pCO2:Fed_Unfed** | 1  |  363   | 1.015  | 0.3136  |
# |   **Residuals**    | 61 | 19923  |   NA   |   NA    |
# output results
kable(data.frame(unclass(print(SRH930.bfactALL)),
check.names = FALSE,
stringsAsFactors = FALSE)  ) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/20210930_figs_tables/20210930_SRH_RR_bfactor_ALL.png", zoom = 1.5)
# Linear mixed effects model with random effect of Replicate
LME930.bfactALL<-lme(resp_umol_hr_bFactorNormLength.ALL ~
pCO2*Fed_Unfed,
random=~1|Chamber_tank, # with the random effect as an LME model (Chamber_tank = replicate as 7.5_A, 7.5_B)
data=Resp_0930)
# check model assumptions
shapiro.test(residuals(LME930.bfactALL)) # non-normal - 0.006321 !!!!!!!!!
leveneTest(residuals(LME930.bfactALL) ~ Resp_0930$pCO2) # 0.1546
leveneTest(residuals(LME930.bfactALL) ~ Resp_0930$Fed_Unfed) # 0.4334
# AIC model selection
pander(AIC(AOV930.bfactALL, LME930.bfactALL), style='rmarkdown') # anova table of lmer
# food supply diff - report this percent difference alonside the significant effect
Resp_0930 %>% summarySE(measurevar="resp_umol_hr_bFactorNormLength.ALL", groupvars="Fed_Unfed")
Resp_0930 %>% summarySE(measurevar="resp_umol_hr_bFactorNormLength.ALL", groupvars="Fed_Unfed")
perc_diff <- (0.10532084 - 0.06871314)/0.10532084*100
perc_diff #33.88077 %
# plot
Resp930_Length <- ggplot(Resp_0930,
aes(x = factor(pCO2, level = c('500 μatm', '800 μatm')),
resp_umol_hr_bFactorNormLength.ALL ,
fill = pCO2)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pCO2)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm')) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2)) +
labs(title = "F1 Scallops: respiration rates on 20210930 (b factor ALL)",
y = expression(Respiration~rate~"("~μmol~L^{-1}~O[2]%.%mm~shell~length^{-1}%.% hr^{-1}~")"),
x = expression(italic(p)*CO[2]~Treatment~"("~μ*atm~")")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
stat_summary(fun.y=mean, geom="point", shape=18, size=4, color="black", fill="white") +
facet_wrap(~Fed_Unfed)
Resp930_Length # print this figure...
# Visualize the data with the random effect of tank replicate
Resp930_bLengthFOOD_reps <- ggboxplot(Resp_0930,
x = "pHxFood",
y = "resp_umol_hr_bFactorNormLength.FOOD",
color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
# One-way ANOVA (without the random effect)
AOV930.bfactFOOD <- aov(resp_umol_hr_bFactorNormLength.FOOD ~
pCO2 * Fed_Unfed,
data=Resp_0930) # run mod
# check model assumptions
shapiro.test(residuals(AOV930.bfactFOOD)) # normal - 0.07444
leveneTest(AOV930.bfactFOOD) # hetergeneity of variance  - 0.01184
pander(aov(AOV930.bfactFOOD), style='rmarkdown') # table for anova test
# |       &nbsp;       | Df |  Sum Sq  | Mean Sq  | F value |  Pr(>F)   |
# |:------------------:|:--:|:--------:|:--------:|:-------:|:---------:|
# |      **pCO2**      | 1  | 0.01183  | 0.01183  |  3.088  |  0.08391  |
# |   **Fed_Unfed**    | 1  | 0.08515  | 0.08515  |  22.23  | 1.451e-05 |
# | **pCO2:Fed_Unfed** | 1  | 0.002842 | 0.002842 | 0.7418  |  0.3925   |
# |   **Residuals**    | 61 |  0.2337  | 0.003831 |   NA    |    NA     |
SRH930.bfactFOOD <- scheirerRayHare(resp_umol_hr_bFactorNormLength.FOOD ~
pCO2 * Fed_Unfed,
data=Resp_0930) # run mod
# all is good, lets see the results
pander(print(SRH930.bfactFOOD), style='rmarkdown') # table for SRH test
# |       &nbsp;       | Df | Sum Sq |   H    |  p.value  |
# |:------------------:|:--:|:------:|:------:|:---------:|
# |      **pCO2**      | 1  | 384.5  | 1.075  |  0.2997   |
# |   **Fed_Unfed**    | 1  |  6549  | 18.32  | 1.868e-05 |
# | **pCO2:Fed_Unfed** | 1  | 202.8  | 0.5673 |  0.4513   |
# |   **Residuals**    | 61 | 15683  |   NA   |    NA     |
# output results
kable(data.frame(unclass(print(SRH930.bfactFOOD)),
check.names = FALSE,
stringsAsFactors = FALSE)  ) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/20210930_figs_tables/20210930_SRH_RR_bfactor_FOOD.png", zoom = 1.5)
# |       &nbsp;       | Df | Sum Sq |   H    |  p.value  |
# |:------------------:|:--:|:------:|:------:|:---------:|
# |      **pCO2**      | 1  | 384.5  | 1.075  |  0.2997   |
# |   **Fed_Unfed**    | 1  |  6549  | 18.32  | 1.868e-05 |
# | **pCO2:Fed_Unfed** | 1  | 202.8  | 0.5673 |  0.4513   |
# |   **Residuals**    | 61 | 15683  |   NA   |    NA     |
# output results
kable(data.frame(unclass(print(SRH930.bfactFOOD)),
check.names = FALSE,
stringsAsFactors = FALSE)  ) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/20210930_figs_tables/20210930_SRH_RR_bfactor_FOOD.png", zoom = 1.5)
# Linear mixed effects model with random effect of Replicate
LME930.bfactFOOD<-lme(resp_umol_hr_bFactorNormLength.FOOD ~
pCO2*Fed_Unfed,
random=~1|Chamber_tank, # with the random effect as an LME model (Chamber_tank = replicate as 7.5_A, 7.5_B)
data=Resp_0930)
Resp_1026 <- Resp.Master %>%
dplyr::filter(Date %in% '10/26/2021')  %>% # call only 10/14
dplyr::mutate(pHxFood = paste(pH,Fed_Unfed, sep = "_")) %>%
dplyr::mutate(random_fact = as.factor(paste(Chamber_tank, Fed_Unfed, sep="_")))
# Visualize the data with the random effect of tank replicate
Resp1026_bLengthALL_reps <- ggboxplot(Resp_1026,
x = "pHxFood",
y = "resp_umol_hr_bFactorNormLength.ALL",
color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
# One-way ANOVA (without the random effect)
AOV1026.bfactALL <- aov(resp_umol_hr_bFactorNormLength.ALL ~
pCO2 * Fed_Unfed,
data=Resp_1026) # run mod
# check model assumptions
shapiro.test(residuals(AOV1026.bfactALL)) # normal - 0.3702
leveneTest(AOV1026.bfactALL) # homogeneity of variance (equal variance) - 0.2376
pander(aov(AOV1026.bfactALL), style='rmarkdown') # table for anova test
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length                     <-read.csv(file="Data/Survival_Size/Lengths_master.csv", header = TRUE)
len.dryweight.CI_1026      <-read.csv(file="Data/Survival_Size/20211026_lengths_dryweights.csv", header = TRUE)
# len.dryweight.CI_1202      <-read.csv(file="Data/Survival_Size/20211202_lengths_dryweights.csv", header = TRUE)
survival_juvenile          <-read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Data/Survival_Size/Survival_master.csv", header = TRUE)
# Structure of the data - to check that variables are properly assigned to factor or variable
# str(length)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(car)
library(nlme)
library(multcompView)
library(agricolae)
library(Rmisc)
library(lmerTest)
library(lme4)
library(pander)
library(performance)
library(Rmisc)
library(maditr)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(car)
library(nlme)
library(multcompView)
library(agricolae)
library(Rmisc)
library(lmerTest)
library(lme4)
library(pander)
library(performance)
library(Rmisc)
# library(maditr)
library(reshape2)
library(kableExtra)
library(ggpubr)
library(dplyr)
library(tidyr)
# using lmer
library(lme4)
library(lmerTest)
# using lme
library(nlme)
library(car)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length                     <-read.csv(file="Data/Survival_Size/Lengths_master.csv", header = TRUE)
len.dryweight.CI_1026      <-read.csv(file="Data/Survival_Size/20211026_lengths_dryweights.csv", header = TRUE)
# len.dryweight.CI_1202      <-read.csv(file="Data/Survival_Size/20211202_lengths_dryweights.csv", header = TRUE)
survival_juvenile          <-read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Data/Survival_Size/Survival_master.csv", header = TRUE)
# Structure of the data - to check that variables are properly assigned to factor or variable
# str(length)
CI_1026_means <- len.dryweight.CI_1026[!is.na(len.dryweight.CI_1026$CI),] %>%
summarySE(measurevar="CI", groupvars=c("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm")) %>% # cahmber volumes on different dates with
dplyr::mutate(Age = 92)
CI_1202_means <- summarySE(len.dryweight.CI_1202, measurevar="Condition_index_drywtRatio_Walne1976", groupvars=c("pH")) %>%
dplyr::filter(Condition_index_drywtRatio_Walne1976 > 0) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm")) %>% # cahmber volumes on different dates with
dplyr::rename(CI = "Condition_index_drywtRatio_Walne1976") %>% # cahmber volumes on different dates with
dplyr::mutate(Age = 139)
Master_CI <- rbind(CI_1026_means, CI_1202_means)
CI_1202_means
ggplot(data=Master_CI, aes(x=Age, y=CI, color=pCO2)) +
geom_line( stat = "identity", size=1.0)+
geom_point(position=position_dodge(.5))+
scale_color_manual(values=c("forestgreen","darkorange2"))+
geom_errorbar(aes(ymin=CI-se, ymax=CI+se), width=.2,
position=position_dodge(.5))+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_y_continuous(name ="Condition index [(Dry tissue / dry shell) *100]")+
theme(text = element_text(size=15))
CI_1026 <- len.dryweight.CI_1026[!is.na(len.dryweight.CI_1026$CI),] %>%
dplyr::select(c('pH','CI','Tank_Replicate', "Shell_length_mm")) %>%
dplyr::mutate(Age = "64DPF") %>%
dplyr::mutate(random_eff = (as.factor(paste(pH,Tank_Replicate, sep ='_')))) %>%
dplyr::mutate(pH_Age = (as.factor(paste(pH,Age, sep = '_')))) %>%
dplyr::select(-Tank_Replicate)
CI_1202 <- len.dryweight.CI_1202[!is.na(len.dryweight.CI_1202$Condition_index_drywtRatio_Walne1976),] %>%
dplyr::select(c('pH','Condition_index_drywtRatio_Walne1976', 'Tank_Replicate', "Shell_length_mm")) %>%
dplyr::rename(CI = Condition_index_drywtRatio_Walne1976) %>%
dplyr::mutate(random_eff = (as.factor(paste(pH,Tank_Replicate, sep ='_')))) %>%
dplyr::mutate(Age = "139DPF") %>%
dplyr::mutate(pH_Age = (as.factor(paste(pH,Age, sep = '_')))) %>%
dplyr::select(-Tank_Replicate)
# merge the raw data
Master_CI_raw <- rbind(CI_1026, CI_1202) %>% dplyr::filter(CI > 0) # ommit values with negative CI (poor data due to error)
Master_CI_raw$pH <- as.factor(Master_CI_raw$pH)
LMEmod_CI_1026.DATA <- Master_CI_raw %>%
dplyr::filter(Age %in% '64DPF') # filter the data from 20211026
levels(LMEmod_CI_1026.DATA$random_eff) # should be 8 levels A B C D within 7.5 and 8
CI_1026.DATA <- Master_CI_raw %>%
dplyr::filter(Age %in% '64DPF') # filter the data from 20211026
levels(CI_1026.DATA$random_eff) # should be 8 levels A B C D within 7.5 and 8
CI_1026.DATA
AOVCI.bfactALL <- aov(CI ~
pH,
data=CI_1026.DATA) # run mod
# check model assumptions
shapiro.test(residuals(AOVCI.bfactALL)) # normal - 0.9031
leveneTest(AOVCI.bfactALL) # homogeneity of variance (equal variance) - 0.9252
# need to run the non-parametric
SRHCI.bfactFOOD <- scheirerRayHare(CI ~
pH,
data=AOVCI.bfactALL) # run mod
# need to run the non-parametric
SRHCI.bfactFOOD <- scheirerRayHare(CI ~
pH,
data=CI_1026.DATA) # run mod
CI_1026.DATA <- Master_CI_raw %>%
dplyr::filter(Age %in% '64DPF') # filter the data from 20211026
CI_1026.DATA <- Master_CI_raw %>%
dplyr::filter(Age %in% '64DPF') %>% # filter the data from 20211026
dplyr::filter(pH = as.factor(pH))
Master_CI_raw$pH
CI_1026.DATA <- Master_CI_raw %>%
dplyr::filter(Age %in% '64DPF') %>% # filter the data from 20211026
dplyr::mutate(pH = as.factor(pH))
levels(CI_1026.DATA$pH)
AOVCI.bfactALL <- aov(CI ~
pH,
data=CI_1026.DATA) # run mod
# check model assumptions
shapiro.test(residuals(AOVCI.bfactALL)) # non - normal - 8.769e-07
leveneTest(AOVCI.bfactALL) # homogeneity of variance (equal variance) - 0.5031
# need to run the non-parametric
SRHCI.bfactFOOD <- scheirerRayHare(CI ~
pH,
data=CI_1026.DATA) # run mod
CI_1026.DATA
# need to run the non-parametric
library(rcompanion)
SRHCI.bfactFOOD <- scheirerRayHare(CI ~
pH,
data=CI_1026.DATA) # run mod
CI_1026.DATA
SRHCI <- scheirerRayHare(CI ~ pH, data=CI_1026.DATA) # run mod
CI_1026.DATA <- Master_CI_raw %>%
dplyr::filter(Age %in% '64DPF') %>% # filter the data from 20211026
dplyr::mutate(pCO2 = case_when(
pH == 8 ~ "500 μatm",
pH == 7.5 ~ "800 μatm")) %>%
levels(CI_1026.DATA$random_eff) # should be 8 levels A B C D within 7.5 and 8
CI_1026.DATA <- Master_CI_raw %>%
dplyr::filter(Age %in% '64DPF') %>% # filter the data from 20211026
dplyr::mutate(pCO2 = case_when(
pH == 8 ~ "500 μatm",
pH == 7.5 ~ "800 μatm"))
CI_1026.DATA
AOVCI <- aov(CI ~ pCO2, data=CI_1026.DATA) # run mod
# check model assumptions
shapiro.test(residuals(AOVCI.bfactALL)) # non - normal - 8.769e-07
leveneTest(AOVCI.bfactALL) # homogeneity of variance (equal variance) - 0.5031
SRHCI <- scheirerRayHare(CI ~ pCO2, data=CI_1026.DATA) # run mod
View(CI_1026.DATA)
KWCI <- kruskal.test(CI ~ pCO2, data = CI_1026.DATA)
KWCI
# all is good, lets see the results
pander(print(KWCI), style='rmarkdown') # table for SRH test
summary(AOVCI)
# all is good, lets see the results
pander(print(KWCI), style='rmarkdown') # table for SRH test
CI_1026.DATA
# | Test statistic | df |    P value    |
# |:--------------:|:--:|:-------------:|
# |     8.068      | 1  | 0.004506  * * |
# Linear mixed effects model with random effect of Replicate
LMECI<-lme(CI ~  pCO2, random=~1|random_eff,data=CI_1026.DATA)
# check model assumptions
shapiro.test(residuals(LMECI)) # normal - 0.9466
kable(as.data.frame(print(KWCI))) %>%  # save the table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Survival_size/20211026_figs_table/20211026_CI_KW_Table.png", zoom = 1.5)
KWCI
as.data.frame(print(KWCI))
kable((print(KWCI)) %>%  # save the table
kable((print(KWCI)) %>%  # save the table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Survival_size/20211026_figs_table/20211026_CI_KW_Table.png", zoom = 1.5)
kable((print(KWCI)) %>%  # save the table
kable(print(KWCI)) %>%  # save the table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Survival_size/20211026_figs_table/20211026_CI_KW_Table.png", zoom = 1.5)
print(KWCI)
# all is good, lets see the results
pander(print(KWCI), style='rmarkdown') # table for SRH test
df_mean <- CI_1026.DATA %>%
dplyr::group_by(pCO2) %>%
dplyr::summarize(average = mean(CI)) %>%
dplyr::ungroup()
p.box <- ggplot(CI_1026.DATA, aes(x = pCO2, y = CI)) + geom_boxplot() + geom_point(data= df_mean, mapping = aes(x = pCO2, y = average),
color="red")
p.box.data <- layer_data(p.box) %>%
select(x, ymin, lower, middle, upper, ymax, outliers, flipped_aes) %>%
dplyr::rename(mean = flipped_aes) %>%
dplyr::mutate(mean  = df_mean$average) %>%
mutate(pCO2 = factor(x, labels = levels(CI_1026.DATA$pCO2), ordered = TRUE)) %>%
select(-x)
levels(CI_1026.DATA$pCO2)
CI_1026.DATA$pCO2
CI_1026.DATA$pCO2 <- as.factor(CI_1026.DATA$pCO2)
levels(CI_1026.DATA$pCO2)
df_mean <- CI_1026.DATA %>%
dplyr::group_by(pCO2) %>%
dplyr::summarize(average = mean(CI)) %>%
dplyr::ungroup()
p.box <- ggplot(CI_1026.DATA, aes(x = pCO2, y = CI)) + geom_boxplot() + geom_point(data= df_mean, mapping = aes(x = pCO2, y = average),
color="red")
p.box.data <- layer_data(p.box) %>%
select(x, ymin, lower, middle, upper, ymax, outliers, flipped_aes) %>%
dplyr::rename(mean = flipped_aes) %>%
dplyr::mutate(mean  = df_mean$average) %>%
mutate(pCO2 = factor(x, labels = levels(CI_1026.DATA$pCO2), ordered = TRUE)) %>%
select(-x)
p.box.data <- layer_data(p.box) %>%
select(x, ymin, lower, middle, upper, ymax, outliers, flipped_aes) %>%
dplyr::rename(mean = flipped_aes) %>%
dplyr::mutate(mean  = df_mean$average) %>%
mutate(pCO2 =
factor(x, labels = levels(CI_1026.DATA$pCO2), ordered = TRUE)) %>%
select(-x)
denisty_box_CI_92DPF <-ggplot(p.box.data) +
# manually plot flipped boxplot
geom_segment(aes(x = ymin, xend = ymax, y = -0.2, yend = -0.2)) +
geom_rect(aes(xmin = lower, xmax = upper, ymin = -0.25, ymax = -0.15,  fill = pCO2),color = "black") +
geom_point(data = . %>% unnest(outliers), aes(x = outliers, y = -0.2), color = "grey60", size = 1) +
# vertical lines at Q1 / Q2 / Q3
geom_vline(data = . %>% select(pCO2, lower, mean, upper) %>% gather(key, value, -pCO2), aes(xintercept = value)) +
# density plot
geom_density(data = CI_1026.DATA, aes(x = CI, fill=pCO2, ..scaled..), alpha=.4) +
#  theme
theme_classic() +
#xlim(0, 20) +
facet_grid(pCO2 ~ .) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "none", plot.title = element_text(size=10))+
labs(x = "Condition index", y = "Scaled density")  +
scale_fill_manual(values=c("grey40", "grey85"))
denisty_box_CI_92DPF
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Survival_size/20211026_figs_table/20211026_CI_Fed_density_plot.pdf"), width = 4, height = 4)
denisty_box_CI_92DPF # print the model diagnostics
dev.off()
# statistical approach to 20211026 (last time point of the food OA challenge BUT just the fed animals..)
LMEmod_CI_1202.DATA <- Master_CI_raw %>% dplyr::filter(Age %in% '139DPF')  %>%
mutate(size_class = as.factor(case_when(Shell_length_mm < 7 ~ "small",  Shell_length_mm > 7 & Shell_length_mm < 14.05 ~ "mid", Shell_length_mm > 14.05 ~ "large"))) %>%  # filter the data from 20211202
dplyr::mutate(sizeclass_pH = as.factor(paste(pH, size_class, sep = '_')))
LMEmod_CI_1202      <- lme(CI ~ pH, random=~1|random_eff, data= LMEmod_CI_1202.DATA) # run the model with ranodom effect of the tank replicate within treatment
# |     &nbsp;      | numDF | denDF | F-value |  p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:---------:|
# | **(Intercept)** |   1   |  69   |  75.21  | 1.179e-12 |
# |     **pH**      |   1   |   6   | 0.1874  |  0.6802   |
pander(anova(LMEmod_CI_1202), style='rmarkdown') # print the model
denisty_box_CI_92DPF
