scale_linetype_manual(values = c("High food" = "solid", "Low food" = "dashed"))  +
theme(legend.position="none") +
# facet_wrap(~factor(Fed_Unfed, level = c('Low food', 'High food')))
facet_wrap(~pCO2)
# Print assembled plot from previous chunks....  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# both shell length and whole dry weight used for standardizing respiration rate - view the diagnostic pots for this here (good visual!)
pdf(paste0(filename = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/All_Respiration_normalized_summary.pdf"), width = 10, height = 8)
# pdf(paste0(filename = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/All_Respiration_normalized_summary.pdf"), width = 10, height = 8)
ggarrange(P_Length_resp_all ,Length_time, Resp_LengthStand,
P_WholeDW_resp_all, WholeDW_time, Resp_DryWgtStand, ncol = 3, nrow = 2, heights=c(1,1))
dev.off()
# Resp.Master_OM    <- read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv", header=T) # personnel computer
Resp.Master_OM    <- read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/Calculated_Resp_Master.csv", header=T) # work computer
# Shell length standardized (SL) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
Resp_0914 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# plot the replicates (visual diagnostics of random factor)
Resp914_Length_reps<- ggboxplot(Resp_0914, x = "pH", y = "resp_µmol_L_mm_Length_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
Resp914_Length_reps
# One-way ANOVA (without the random effect)
Resp914_ANOVA <- aov(resp_µmol_L_mm_Length_hr ~ pCO2, data=Resp_0914) # run mod
summary(Resp914_ANOVA) # summary mod
kable(  data.frame(unclass(summary(Resp914_ANOVA)), check.names = FALSE, stringsAsFactors = FALSE)  ) %>%  # print a png of this table
kable_styling() %>%
save_kable(file = "C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Output/Respiration/20210914_figs_tables/20210914_resp_OneWayANOVA_Table.png", zoom = 1.5)
summary(Resp914_ANOVA) # summary mod
# Linear mixed effects model with random effect of Replicate
LMEmod_0914_SL<-lme(resp_µmol_L_mm_Length_hr ~ pCO2, random=~1|Chamber_tank, data=Resp_0914) # with the random effect as an LME model
# |     &nbsp;      | numDF | denDF | F-value  |  p-value  |
# |:---------------:|:-----:|:-----:|:--------:|:---------:|
# | **(Intercept)** |   1   |  13   |  43.61   | 1.706e-05 |
# |    **pCO2**     |   1   |   6   | 0.001242 |   0.973   |
pander(anova(LMEmod_0914_SL), style='rmarkdown') # anova table of lmer
Resp_0914
# |     &nbsp;      | numDF | denDF | F-value  |  p-value  |
# |:---------------:|:-----:|:-----:|:--------:|:---------:|
# | **(Intercept)** |   1   |  13   |  43.61   | 1.706e-05 |
# |    **pCO2**     |   1   |   6   | 0.001242 |   0.973   |
pander(anova(LMEmod_0914_SL), style='rmarkdown') # anova table of lmer
Resp_0930 <- Resp.Master_OM %>%
dplyr::filter(Date %in% '9/30/2021')  %>% # call only 9/14
dplyr::select(-Center) %>%
dplyr::mutate(pHxFood = paste(pH,Food, sep = "_")) %>%
dplyr::mutate(random_fact = as.factor(paste(Chamber_tank, Food, sep="_")))
kable(Resp_0930 %>% dplyr::group_by(Chamber_tank, Food) %>% dplyr::summarise(n())) # tank replication - lowest value was 2 for 7.5_D unfed
Resp_0930 %>% summarySE(measurevar="resp_µmol_L_mm_Length_hr", groupvars=(c("pH", "Food"))) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm"))
# Visualize the data with the random effet as treplicate
Resp930_Length_reps <- ggboxplot(Resp_0930, x = "pHxFood", y = "resp_µmol_L_mm_Length_hr", color = "Replicate",
add = c("mean_se", "dotplot"),
palette = c("#00AFBB", "#E7B800", "brown", "grey"))
Resp930_Length_reps
Resp930_Length_reps
# Two-way ANOVA (without the random effect)
Resp930_ANOVA <- aov(resp_µmol_L_mm_Length_hr ~ pCO2*Food, data=Resp_0930) # run mod
# Two-way ANOVA (without the random effect)
Resp930_ANOVA <- aov(resp_µmol_L_mm_Length_hr ~ pCO2*Food, data=Resp_0930) # run mod
summary(Resp930_ANOVA) # summary mod
Resp930_ANOVA
# Linear mixed effects model with random effect of Replicate
LMEmod_0930<-lme(resp_µmol_L_mm_Length_hr ~ pCO2 * Food, random=~1|random_fact, data=Resp_0930)
# |     &nbsp;      | numDF | denDF | F-value | p-value  |
# |:---------------:|:-----:|:-----:|:-------:|:--------:|
# | **(Intercept)** |   1   |  49   |  112.3  | 2.82e-14 |
# |    **pCO2**     |   1   |   12   |  1.487  |  0.2461  |
# |    **Food**     |   1   |  12   |  7.219  | 0.01979  |
# |  **pCO2:Food**  |   1   |  12   | 0.6779  |  0.4264  |
pander(anova(LMEmod_0930), style='rmarkdown')
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(dplyr)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
install.packages('dplur')
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
install.packages('dplyr')
library(dplyr)
# Purpose: Bay Scallop Project - Feeding Rates
# analysis of respiration rate data
# Written by: Sam J Gurr (last edit 10/12/2021)
# Review Riisgard 2001 defining the clearance rate of bivalves
# NOTE: clearance rate is defined as the volume of water cleared of suspended particles per unit time, and only equals filtration rate when
# 100% of suspended particles are efficiently retained
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(dplyr)
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.5.tar.gz", repos = NULL, type="source")
install.packages("https://cran.r-project.org/web/packages/rlang/rlang_1.0.5.tar.gz", repos = NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.5.tar.gz", repo=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.4.tar.gz", repo=NULL, type="source")
library(dplyr)
install.packages(‘rlang’)
install.packages(‘rlang’)
install.packages(‘rlang’)
install.packages(‘rlang’)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(rlang)
install.packages(c("cli", "gert", "Matrix", "openssl", "rlang", "xfun", "zoo"))
install.packages(c("cli", "gert", "Matrix", "openssl", "rlang", "xfun", "zoo"))
install.packages(c("cli", "gert", "Matrix", "openssl", "rlang", "xfun", "zoo"))
install.packages(c("cli", "gert", "Matrix", "openssl", "rlang", "xfun", "zoo"))
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length                     <-read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Data/Survival_Size/Lengths_master.csv", header = TRUE)
len.dryweight.CI_1026      <-read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Data/Survival_Size/20211026_lengths_dryweights.csv", header = TRUE)
len.dryweight.CI_1202      <-read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Data/Survival_Size/20211202_lengths_dryweights.csv", header = TRUE)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(car)
library(nlme)
library(multcompView)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length                     <-read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Data/Survival_Size/Lengths_master.csv", header = TRUE)
len.dryweight.CI_1026      <-read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Data/Survival_Size/20211026_lengths_dryweights.csv", header = TRUE)
len.dryweight.CI_1202      <-read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Data/Survival_Size/20211202_lengths_dryweights.csv", header = TRUE)
survival_juvenile          <-read.csv(file="C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis/Data/Survival_Size/Survival_master.csv", header = TRUE)
len.dryweight.CI_1026
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length                     <-read.csv(file="/Data/Survival_Size/Lengths_master.csv", header = TRUE)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length                     <-read.csv(file="/Data/Survival_Size/Lengths_master.csv", header = TRUE)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length                     <-read.csv(file="Data/Survival_Size/Lengths_master.csv", header = TRUE)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length                     <-read.csv(file="Data/Survival_Size/Lengths_master.csv", header = TRUE)
len.dryweight.CI_1026      <-read.csv(file="Data/Survival_Size/20211026_lengths_dryweights.csv", header = TRUE)
len.dryweight.CI_1202      <-read.csv(file="Data/Survival_Size/20211202_lengths_dryweights.csv", header = TRUE)
len.dryweight.CI_1026      <-read.csv(file="Data/Survival_Size/TDW_AFDW_Condition_master.csv", header = TRUE)
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length                     <-read.csv(file="Data/Survival_Size/Lengths_master.csv", header = TRUE)
len.dryweight.CI_1026      <-read.csv(file="Data/Survival_Size/20211026_lengths_dryweights.csv", header = TRUE)
len.drywe
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA-foodsupply/RAnalysis") # Work computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
# setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_OA/RAnalysis") # Work computer
length                     <-read.csv(file="Data/Survival_Size/Lengths_master.csv", header = TRUE)
len.dryweight.CI_1026      <-read.csv(file="Data/Survival_Size/20211026_lengths_dryweights.csv", header = TRUE)
len.dryweight.CI_1026      <-read.csv(file="Data/Survival_Size/TDW_AFDW_Condition_master.csv", header = TRUE)
len.dryweight.CI_1026
CI_1026_means <- len.dryweight.CI_1026[!is.na(len.dryweight.CI_1026$CI),] %>%
summarySE(measurevar="CI", groupvars=c("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm")) %>% # cahmber volumes on different dates with
dplyr::mutate(Age = 92)
len.dryweight.CI_1026
CI_1026_means <- len.dryweight.CI_1026[!is.na(len.dryweight.CI_1026$CI),] %>%
summarySE(measurevar="CI", groupvars=c("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm")) %>% # cahmber volumes on different dates with
dplyr::mutate(Age = 92)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(car)
library(nlme)
library(multcompView)
library(agricolae)
library(Rmisc)
library(lmerTest)
library(lmerTest)
library(lme4)
library(pander)
library(performance)
library(Rmisc)
library(pander)
library(performance)
library(Rmisc)
library(maditr)
library(reshape2)
library(kableExtra)
library(dplyr)
library(tidyr)
# using lmer
library(lme4)
library(lmerTest)
# using lme
library(nlme)
library(car)
CI_1026_means <- len.dryweight.CI_1026[!is.na(len.dryweight.CI_1026$CI),] %>%
summarySE(measurevar="CI", groupvars=c("pH")) %>%
dplyr::mutate(pCO2 = case_when(pH == 8  ~ "500 μatm", pH == 7.5 ~ "800 μatm")) %>% # cahmber volumes on different dates with
dplyr::mutate(Age = 92)
CI_1026 <- len.dryweight.CI_1026[!is.na(len.dryweight.CI_1026$CI),] %>%
dplyr::select(c('pH','CI','Tank_Replicate', "Shell_length_mm")) %>%
dplyr::mutate(Age = "64DPF") %>%
dplyr::mutate(random_eff = (as.factor(paste(pH,Tank_Replicate, sep ='_')))) %>%
dplyr::mutate(pH_Age = (as.factor(paste(pH,Age, sep = '_')))) %>%
dplyr::select(-Tank_Replicate)
CI_1026
len.dryweight.CI_1026 %>%
ggplot(aes(x=Dry_Shell_weight_mg, y=Shell_length_mm, color=as.factor(pH))) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Dry_Shell_weight_mg") +
scale_y_continuous(name ="Shell_length_mm")
dryweight_CI
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "tissue")
REGRESSION_Length.Dryshell<- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell")
REGRESSION_Length.Dryshell<- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell")
REGRESSION_Length.Dryshell
REGRESSION_Length.Dryshell<- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
ggplot(aes(x=Shell.Length, y=weight/Shell.Length, color=as.factor(pH))) +
geom_point()+
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="Length (µm)") +
scale_y_continuous(name ="Shell weight (g)")
REGRESSION_Length.Dryshell
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length)
dryweight_CI
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH),
y = Shell_weight_NORMALIZED ,
fill = pH)) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=pH)) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic()
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH),
y = Shell_weight_NORMALIZED ,
fill = factor(pH)))
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH),
y = Shell_weight_NORMALIZED ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH))) +
scale_fill_manual(values=c("white","grey50"))
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH),
y = Shell_weight_NORMALIZED ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH))) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm'))
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH),
y = Shell_weight_NORMALIZED ,
fill = factor(pH)))
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH),
y = Shell_weight_NORMALIZED ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH))) +
scale_fill_manual(values=c("white","grey50"))
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH, level = c('8.0', '7.5')),
y = Shell_weight_NORMALIZED ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH)))
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH, level = c(8.0, 7.5)),
y = Shell_weight_NORMALIZED ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH)))
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH, level = c(8.0, 7.5)),
y = Shell_weight_NORMALIZED ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH))) +
scale_fill_manual(values=c("white","grey50")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm'))
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH, level = c(8.0, 7.5)),
y = Shell_weight_NORMALIZED ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH))) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm'))
Shell_weight_bylength <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_NORMALIZED = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH, level = c(8.0, 7.5)),
y = Shell_weight_NORMALIZED ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH))) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm'))
Shell_weight_bylength
dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell")
Shell_weight_bylength <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH, level = c(8.0, 7.5)),
y = Shell_weight_NORMALIZED ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH))) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm'))
Shell_weight_bylength
Shell_weight_bylength <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH, level = c(8.0, 7.5)),
y = Shell_weight_by_length ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH))) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm'))
Shell_weight_bylength
dryweight_CI
dryweight_shell_test <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length)
summary(aov(lm(Shell_weight_by_length ~ pH, data = dryweight_shell_test)))
mod_shellwt_length <- lm(Shell_weight_by_length ~ pH, data = dryweight_shell_test)
summary(aov(mod_shellwt_length))
shapiro.test(resid(mod_shellwt_length))
mod_shellwt_length <- lm(log(Shell_weight_by_length) ~ pH, data = dryweight_shell_test)
summary(aov(mod_shellwt_length))
shapiro.test(resid(mod_shellwt_length))
hist(resid(mod_shellwt_length))
qqnorm((resid(mod_shellwt_length)))
mod_shellwt_length <- lm(sqrt(Shell_weight_by_length) ~ pH, data = dryweight_shell_test)
summary(aov(mod_shellwt_length))
hist(resid(mod_shellwt_length))
qqnorm((resid(mod_shellwt_length)))
shapiro.test(resid(mod_shellwt_length))
summary(aov(mod_shellwt_length))
hist(resid(mod_shellwt_length))
levene.test(resid(mod_shellwt_length))
levene.test(mod_shellwt_length)
levene.test(mod_shellwt_length)
leveneTest(mod_shellwt_length)
leveneTest(resid(mod_shellwt_length))
mod_shellwt_length <- lm(sqrt(Shell_weight_by_length) ~ factor(pH), data = dryweight_shell_test)
summary(aov(mod_shellwt_length))
hist(resid(mod_shellwt_length))
qqnorm((resid(mod_shellwt_length)))
leveneTest(resid(mod_shellwt_length))
mod_shellwt_length <- lm(sqrt(Shell_weight_by_length) ~ as.factor(pH), data = dryweight_shell_test)
summary(aov(mod_shellwt_length))
hist(resid(mod_shellwt_length))
leveneTest(resid(mod_shellwt_length))
leveneTest(resid(mod_shellwt_length))
leveneTest(mod_shellwt_length)
shapiro.test(resid(mod_shellwt_length))
qqnorm((resid(mod_shellwt_length)))
Shell_weight_bylength
Shell_weight_bylength <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH, level = c(8.0, 7.5)),
y = weight ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH))) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm'))
Shell_weight_bylength
mod_shellwt_length <- lm(weight ~ as.factor(pH), data = dryweight_shell_test)
summary(aov(mod_shellwt_length))
hist(resid(mod_shellwt_length))
qqnorm((resid(mod_shellwt_length)))
shapiro.test(resid(mod_shellwt_length))
mod_shellwt_length <- lm(sqrt(weight) ~ as.factor(pH), data = dryweight_shell_test)
shapiro.test(resid(mod_shellwt_length))
summary(aov(mod_shellwt_length))
Shell_weight_bylength <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length) %>%
ggplot(aes(x = factor(pH, level = c(8.0, 7.5)),
y = Shell_weight_by_length ,
fill = factor(pH))) +
theme(panel.grid=element_blank()) +
geom_boxplot(size=0.2, width=0.5, alpha=0.1, aes(fill=factor(pH))) +
scale_fill_manual(values=c("grey50","white")) +
geom_point(shape = 21, size = 2, position = position_jitterdodge(jitter.width = 0.1)) +
theme_classic() +
scale_x_discrete(labels= c('~500 μatm', '~800 μatm'))
Shell_weight_bylength
dryweight_CI
dryweight_shell_test <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(random_fact = as.factor(paste(pH,Rep, sep = "_"))) %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length)
mod_shellwt_length <- lme(sqrt(Shell_weight_by_length) ~ as.factor(pH), random=~1|random_fact, data = dryweight_shell_test)
mod_shellwt_length <- lme(sqrt(Shell_weight_by_length) ~ as.factor(pH) + random=~1|random_fact, data = dryweight_shell_test)
dryweight_shell_test <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(random_fact = as.factor(paste(pH,Rep, sep = "_"))) %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length)
mod_shellwt_length <- lme(sqrt(Shell_weight_by_length) ~ as.factor(pH) + random=~1|random_fact, data = dryweight_shell_test)
mod_shellwt_length <- lme(Shell_weight_by_length ~ as.factor(pH) + random=~1|random_fact, data = dryweight_shell_test)
mod_shellwt_length <- lme(Shell_weight_by_length ~ as.factor(pH), random=~1|random_fact, data = dryweight_shell_test)
mod_shellwt_length <- lme(Shell_weight_by_length ~ pH, random=~1|random_fact, data = dryweight_shell_test)
dryweight_shell_test
mod_shellwt_length <- lme(Shell_weight_by_length ~ pH, random=~1|random_fact, data = dryweight_shell_test)
dryweight_shell_test
# Linear mixed effects models :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
require(nlme)
mod_shellwt_length <- lme(Shell_weight_by_length ~ pH, random=~1|random_fact, data = dryweight_shell_test)
dryweight_shell_test <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(random_fact = as.factor(paste(pH,Rep, sep = "_"))) %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length) %>%
dplyr::mutate(pH = as.factor(pH))
mod_shellwt_length <- lme(Shell_weight_by_length ~ pH, random=~1|random_fact, data = dryweight_shell_test)
dryweight_shell_test
dryweight_shell_test <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(random_fact = as.factor(paste(pH,Rep, sep = "_"))) %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length) %>%
dplyr::mutate(pH = as.factor(pH)) %>%
dplyr::filter(!Shell_weight_by_length == NA)
dryweight_shell_test <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(random_fact = as.factor(paste(pH,Rep, sep = "_"))) %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length) %>%
dplyr::mutate(pH = as.factor(pH)) %>%
dplyr::filter(!Shell_weight_by_length = NA)
dryweight_shell_test <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(random_fact = as.factor(paste(pH,Rep, sep = "_"))) %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length) %>%
dplyr::mutate(pH = as.factor(pH)) %>%
dplyr::filter(!Shell_weight_by_length == NA)
dryweight_shell_test
dryweight_shell_test <- dryweight_CI %>%
dplyr::filter(shell.or.tissue %in% "shell") %>%
dplyr::mutate(random_fact = as.factor(paste(pH,Rep, sep = "_"))) %>%
dplyr::mutate(Shell_weight_by_length = weight/Shell.Length) %>%
dplyr::mutate(pH = as.factor(pH)) %>%
dplyr::filter(!Shell_weight_by_length %in% NA)
dryweight_shell_test
mod_shellwt_length <- lme(Shell_weight_by_length ~ pH, random=~1|random_fact, data = dryweight_shell_test)
summary(aov(mod_shellwt_length))
mod_shellwt_length
summary(mod_shellwt_length)
shapiro.test(resid(mod_shellwt_length))
leveneTest(mod_shellwt_length)
qqnorm((resid(mod_shellwt_length)))
hist(resid(mod_shellwt_length))
summary(mod_shellwt_length)
pander(anova(mod_shellwt_length), style='rmarkdown')
mod_shellwt_length
